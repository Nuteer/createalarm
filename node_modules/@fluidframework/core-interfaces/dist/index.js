"use strict";
/*!
 * Copyright (c) Microsoft Corporation and contributors. All rights reserved.
 * Licensed under the MIT License.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IFluidRouter = void 0;
__exportStar(require("./fluidLoadable"), exports);
// Typescript forgets the index signature when customers augment IRequestHeader if we export *.
// So we export the explicit members as a workaround:
// https://github.com/microsoft/TypeScript/issues/18877#issuecomment-476921038
var fluidRouter_1 = require("./fluidRouter");
Object.defineProperty(exports, "IFluidRouter", { enumerable: true, get: function () { return fluidRouter_1.IFluidRouter; } });
__exportStar(require("./handles"), exports);
__exportStar(require("./serializer"), exports);
__exportStar(require("./fluidPackage"), exports);
__exportStar(require("./provider"), exports);
//# sourceMappingURL=index.js.map