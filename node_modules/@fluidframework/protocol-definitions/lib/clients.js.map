{"version":3,"file":"clients.js","sourceRoot":"","sources":["../src/clients.ts"],"names":[],"mappings":"AAAA;;;GAGG","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IUser } from \"./users\";\n\nexport type ConnectionMode = \"write\" | \"read\";\n\nexport interface ICapabilities {\n    interactive: boolean;\n}\nexport interface IClientDetails {\n    capabilities: ICapabilities;\n    type?: string;\n    /**\n     * If the environment needs to specify multiple properties which gives info about the environment, then\n     * it should be in particular format like: \"prop1:val1;prop2:val2;prop3:val3\"\n     */\n    environment?: string;\n    device?: string;\n}\n\nexport interface IClient {\n    mode: ConnectionMode;\n    details: IClientDetails;\n    permission: string[];\n    user: IUser;\n    scopes: string[];\n\n    /**\n     * The time the client connected\n     */\n    timestamp?: number;\n}\n\nexport interface ISequencedClient {\n\n    client: IClient;\n\n    sequenceNumber: number;\n}\n\nexport interface ISignalClient {\n\n    clientId: string;\n\n    client: IClient;\n}\n\n/**\n * Contents sent with a ClientJoin message\n */\nexport interface IClientJoin {\n    // The ID of the joining client\n    clientId: string;\n\n    // Details about the joining client (i.e. browser based, server, CPU, memory, etc...)\n    detail: IClient;\n}\n"]}