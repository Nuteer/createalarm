/*!
 * Copyright (c) Microsoft Corporation and contributors. All rights reserved.
 * Licensed under the MIT License.
 */
export declare type SummaryObject = ISummaryTree | ISummaryBlob | ISummaryHandle | ISummaryAttachment;
export declare type SummaryTree = ISummaryTree | ISummaryHandle;
export interface ISummaryAuthor {
    name: string;
    email: string;
    date: string;
}
export interface ISummaryCommitter {
    name: string;
    email: string;
    date: string;
}
export declare namespace SummaryType {
    type Tree = 1;
    type Blob = 2;
    type Handle = 3;
    type Attachment = 4;
    const Tree: Tree;
    const Blob: Blob;
    const Handle: Handle;
    const Attachment: Attachment;
}
export declare type SummaryType = SummaryType.Attachment | SummaryType.Blob | SummaryType.Handle | SummaryType.Tree;
export declare type SummaryTypeNoHandle = SummaryType.Tree | SummaryType.Blob | SummaryType.Attachment;
export interface ISummaryHandle {
    type: SummaryType.Handle;
    handleType: SummaryTypeNoHandle;
    handle: string;
}
export interface ISummaryBlob {
    type: SummaryType.Blob;
    content: string | Uint8Array;
}
export interface ISummaryAttachment {
    type: SummaryType.Attachment;
    id: string;
}
export interface ISummaryTree {
    type: SummaryType.Tree;
    tree: {
        [path: string]: SummaryObject;
    };
    unreferenced?: true;
}
//# sourceMappingURL=summary.d.ts.map