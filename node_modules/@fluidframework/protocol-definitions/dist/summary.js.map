{"version":3,"file":"summary.js","sourceRoot":"","sources":["../src/summary.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;AAoBH,IAAiB,WAAW,CAU3B;AAVD,WAAiB,WAAW;IAMX,gBAAI,GAAS,CAAU,CAAC;IACxB,gBAAI,GAAS,CAAU,CAAC;IACxB,kBAAM,GAAW,CAAU,CAAC;IAC5B,sBAAU,GAAe,CAAU,CAAC;AACrD,CAAC,EAVgB,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAU3B","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport type SummaryObject = ISummaryTree | ISummaryBlob | ISummaryHandle | ISummaryAttachment;\n\nexport type SummaryTree = ISummaryTree | ISummaryHandle;\n\nexport interface ISummaryAuthor {\n    name: string;\n    email: string;\n    // ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ\n    date: string;\n}\n\nexport interface ISummaryCommitter {\n    name: string;\n    email: string;\n    // ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ\n    date: string;\n}\n\nexport namespace SummaryType {\n    export type Tree = 1;\n    export type Blob = 2;\n    export type Handle = 3;\n    export type Attachment = 4;\n\n    export const Tree: Tree = 1 as const;\n    export const Blob: Blob = 2 as const;\n    export const Handle: Handle = 3 as const;\n    export const Attachment: Attachment = 4 as const;\n}\nexport type SummaryType = SummaryType.Attachment | SummaryType.Blob | SummaryType.Handle | SummaryType.Tree;\n\nexport type SummaryTypeNoHandle = SummaryType.Tree | SummaryType.Blob | SummaryType.Attachment;\n\nexport interface ISummaryHandle {\n    type: SummaryType.Handle;\n\n    // No handles, all other SummaryType are Ok\n    handleType: SummaryTypeNoHandle;\n\n    // Stored handle reference\n    handle: string;\n}\n\nexport interface ISummaryBlob {\n    type: SummaryType.Blob;\n    content: string | Uint8Array;\n}\n\nexport interface ISummaryAttachment {\n    type: SummaryType.Attachment;\n    id: string;\n}\n\nexport interface ISummaryTree {\n    type: SummaryType.Tree;\n\n    // TODO type I can infer from SummaryObject. File mode I may want to directly specify so have symlink+exec access\n    tree: { [path: string]: SummaryObject };\n\n    // Indicates that this tree entry is unreferenced. If this is not present, the tree entry is considered referenced.\n    unreferenced?: true;\n}\n"]}