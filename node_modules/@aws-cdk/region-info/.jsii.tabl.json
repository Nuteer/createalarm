{
  "version": "2",
  "toolVersion": "1.47.0",
  "snippets": {
    "8c2cf5382985a73a9d345453f03a663f572ed57348c2baa7ba30b2aa39fc278d": {
      "translations": {
        "python": {
          "source": "from aws_cdk.region_info import RegionInfo\n\n# Get the information for \"eu-west-1\":\nregion = RegionInfo.get(\"eu-west-1\")\n\n# Access attributes:\nregion.s3_static_website_endpoint # s3-website-eu-west-1.amazonaws.com\nregion.service_principal(\"logs.amazonaws.com\")",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.RegionInfo;\n\n// Get the information for \"eu-west-1\":\nRegionInfo region = RegionInfo.Get(\"eu-west-1\");\n\n// Access attributes:\nregion.S3StaticWebsiteEndpoint; // s3-website-eu-west-1.amazonaws.com\nregion.ServicePrincipal(\"logs.amazonaws.com\");",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.regioninfo.RegionInfo;\n\n// Get the information for \"eu-west-1\":\nRegionInfo region = RegionInfo.get(\"eu-west-1\");\n\n// Access attributes:\nregion.getS3StaticWebsiteEndpoint(); // s3-website-eu-west-1.amazonaws.com\nregion.servicePrincipal(\"logs.amazonaws.com\");",
          "version": "1"
        },
        "$": {
          "source": "import { RegionInfo } from '@aws-cdk/region-info';\n\n// Get the information for \"eu-west-1\":\nconst region = RegionInfo.get('eu-west-1');\n\n// Access attributes:\nregion.s3StaticWebsiteEndpoint; // s3-website-eu-west-1.amazonaws.com\nregion.servicePrincipal('logs.amazonaws.com'); // logs.eu-west-1.amazonaws.com",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/region-info"
        },
        "field": {
          "field": "markdown",
          "line": 24
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/region-info.RegionInfo",
        "@aws-cdk/region-info.RegionInfo#get",
        "@aws-cdk/region-info.RegionInfo#servicePrincipal"
      ],
      "fullSource": "import { RegionInfo } from '@aws-cdk/region-info';\n\n// Get the information for \"eu-west-1\":\nconst region = RegionInfo.get('eu-west-1');\n\n// Access attributes:\nregion.s3StaticWebsiteEndpoint; // s3-website-eu-west-1.amazonaws.com\nregion.servicePrincipal('logs.amazonaws.com'); // logs.eu-west-1.amazonaws.com",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "194": 3,
        "196": 2,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "290": 1
      },
      "fqnsFingerprint": "97ec6b3ee5dcd55ca63753f03b0a23616036e346c91ff93309e28737431af21d"
    },
    "43074915e3fbb4af099979815e42bf34c93fce972721f3e0df2665eb1a59754c": {
      "translations": {
        "python": {
          "source": "import aws_cdk.region_info as region_info\n\ncode_deploy_principal = region_info.Fact.find(\"us-east-1\", region_info.FactName.service_principal(\"codedeploy.amazonaws.com\"))\n# => codedeploy.us-east-1.amazonaws.com\n\nstatic_website = region_info.Fact.find(\"ap-northeast-1\", region_info.FactName.S3_STATIC_WEBSITE_ENDPOINT)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.RegionInfo;\n\nstring? codeDeployPrincipal = Fact.Find(\"us-east-1\", FactName.ServicePrincipal(\"codedeploy.amazonaws.com\"));\n// => codedeploy.us-east-1.amazonaws.com\n\nstring? staticWebsite = Fact.Find(\"ap-northeast-1\", FactName.S3_STATIC_WEBSITE_ENDPOINT);",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.regioninfo.*;\n\nString codeDeployPrincipal = Fact.find(\"us-east-1\", FactName.servicePrincipal(\"codedeploy.amazonaws.com\"));\n// => codedeploy.us-east-1.amazonaws.com\n\nString staticWebsite = Fact.find(\"ap-northeast-1\", FactName.S3_STATIC_WEBSITE_ENDPOINT);",
          "version": "1"
        },
        "$": {
          "source": "import * as regionInfo from '@aws-cdk/region-info';\n\nconst codeDeployPrincipal = regionInfo.Fact.find('us-east-1', regionInfo.FactName.servicePrincipal('codedeploy.amazonaws.com'));\n// => codedeploy.us-east-1.amazonaws.com\n\nconst staticWebsite = regionInfo.Fact.find('ap-northeast-1', regionInfo.FactName.S3_STATIC_WEBSITE_ENDPOINT);\n// => s3-website-ap-northeast-1.amazonaws.com",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/region-info"
        },
        "field": {
          "field": "markdown",
          "line": 46
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/region-info.Fact",
        "@aws-cdk/region-info.Fact#find",
        "@aws-cdk/region-info.FactName",
        "@aws-cdk/region-info.FactName#S3_STATIC_WEBSITE_ENDPOINT",
        "@aws-cdk/region-info.FactName#servicePrincipal"
      ],
      "fullSource": "import * as regionInfo from '@aws-cdk/region-info';\n\nconst codeDeployPrincipal = regionInfo.Fact.find('us-east-1', regionInfo.FactName.servicePrincipal('codedeploy.amazonaws.com'));\n// => codedeploy.us-east-1.amazonaws.com\n\nconst staticWebsite = regionInfo.Fact.find('ap-northeast-1', regionInfo.FactName.S3_STATIC_WEBSITE_ENDPOINT);\n// => s3-website-ap-northeast-1.amazonaws.com",
      "syntaxKindCounter": {
        "10": 4,
        "75": 15,
        "194": 8,
        "196": 3,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "5797746405d6bb24589edbf736a0149091e139d518240b022a77ab4ec5990586"
    },
    "3d7a1e55afd9b75e542dceb624bfd1df42fefc9183d91438afd00c0c22ff92bb": {
      "translations": {
        "python": {
          "source": "region_info.Fact.register(\n    region=\"bermuda-triangle-1\",\n    name=region_info.FactName.service_principal(\"s3.amazonaws.com\"),\n    value=\"s3-website.bermuda-triangle-1.nowhere.com\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "regionInfo.Fact.Register(new Struct {\n    Region = \"bermuda-triangle-1\",\n    Name = regionInfo.FactName.ServicePrincipal(\"s3.amazonaws.com\"),\n    Value = \"s3-website.bermuda-triangle-1.nowhere.com\"\n});",
          "version": "1"
        },
        "java": {
          "source": "regionInfo.Fact.register(Map.of(\n        \"region\", \"bermuda-triangle-1\",\n        \"name\", regionInfo.FactName.servicePrincipal(\"s3.amazonaws.com\"),\n        \"value\", \"s3-website.bermuda-triangle-1.nowhere.com\"));",
          "version": "1"
        },
        "$": {
          "source": "regionInfo.Fact.register({\n  region: 'bermuda-triangle-1',\n  name: regionInfo.FactName.servicePrincipal('s3.amazonaws.com'),\n  value: 's3-website.bermuda-triangle-1.nowhere.com',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/region-info"
        },
        "field": {
          "field": "markdown",
          "line": 62
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "regionInfo.Fact.register({\n  region: 'bermuda-triangle-1',\n  name: regionInfo.FactName.servicePrincipal('s3.amazonaws.com'),\n  value: 's3-website.bermuda-triangle-1.nowhere.com',\n});",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "193": 1,
        "194": 4,
        "196": 2,
        "226": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "a7976b1bc92b65190240b49ddf9ea32c9e54489023d0e436ae19076cd72ed27e": {
      "translations": {
        "python": {
          "source": "region_info.Fact.register({\n    \"region\": \"us-east-1\",\n    \"name\": region_info.FactName.service_principal(\"service.amazonaws.com\"),\n    \"value\": \"the-correct-principal.amazonaws.com\"\n}, True)",
          "version": "1"
        },
        "csharp": {
          "source": "regionInfo.Fact.Register(new Struct {\n    Region = \"us-east-1\",\n    Name = regionInfo.FactName.ServicePrincipal(\"service.amazonaws.com\"),\n    Value = \"the-correct-principal.amazonaws.com\"\n}, true);",
          "version": "1"
        },
        "java": {
          "source": "regionInfo.Fact.register(Map.of(\n        \"region\", \"us-east-1\",\n        \"name\", regionInfo.FactName.servicePrincipal(\"service.amazonaws.com\"),\n        \"value\", \"the-correct-principal.amazonaws.com\"), true);",
          "version": "1"
        },
        "$": {
          "source": "regionInfo.Fact.register({\n  region: 'us-east-1',\n  name: regionInfo.FactName.servicePrincipal('service.amazonaws.com'),\n  value: 'the-correct-principal.amazonaws.com',\n}, true /* Allow overriding information */);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/region-info"
        },
        "field": {
          "field": "markdown",
          "line": 76
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "regionInfo.Fact.register({\n  region: 'us-east-1',\n  name: regionInfo.FactName.servicePrincipal('service.amazonaws.com'),\n  value: 'the-correct-principal.amazonaws.com',\n}, true /* Allow overriding information */);",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "106": 1,
        "193": 1,
        "194": 4,
        "196": 2,
        "226": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "d2cce5fcddaa1742d738a0d48c81e343190bcebab616d9cfa00e4423c14f5797": {
      "translations": {
        "python": {
          "source": "import aws_cdk.region_info as region_info\n\ncode_deploy_principal = region_info.Fact.find(\"us-east-1\", region_info.FactName.service_principal(\"codedeploy.amazonaws.com\"))\n# => codedeploy.us-east-1.amazonaws.com\n\nstatic_website = region_info.Fact.find(\"ap-northeast-1\", region_info.FactName.S3_STATIC_WEBSITE_ENDPOINT)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.RegionInfo;\n\nstring? codeDeployPrincipal = Fact.Find(\"us-east-1\", FactName.ServicePrincipal(\"codedeploy.amazonaws.com\"));\n// => codedeploy.us-east-1.amazonaws.com\n\nstring? staticWebsite = Fact.Find(\"ap-northeast-1\", FactName.S3_STATIC_WEBSITE_ENDPOINT);",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.regioninfo.*;\n\nString codeDeployPrincipal = Fact.find(\"us-east-1\", FactName.servicePrincipal(\"codedeploy.amazonaws.com\"));\n// => codedeploy.us-east-1.amazonaws.com\n\nString staticWebsite = Fact.find(\"ap-northeast-1\", FactName.S3_STATIC_WEBSITE_ENDPOINT);",
          "version": "1"
        },
        "$": {
          "source": "import * as regionInfo from '@aws-cdk/region-info';\n\nconst codeDeployPrincipal = regionInfo.Fact.find('us-east-1', regionInfo.FactName.servicePrincipal('codedeploy.amazonaws.com'));\n// => codedeploy.us-east-1.amazonaws.com\n\nconst staticWebsite = regionInfo.Fact.find('ap-northeast-1', regionInfo.FactName.S3_STATIC_WEBSITE_ENDPOINT);\n// => s3-website-ap-northeast-1.amazonaws.com",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/region-info.Fact"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/region-info.Fact",
        "@aws-cdk/region-info.Fact#find",
        "@aws-cdk/region-info.FactName",
        "@aws-cdk/region-info.FactName#S3_STATIC_WEBSITE_ENDPOINT",
        "@aws-cdk/region-info.FactName#servicePrincipal"
      ],
      "fullSource": "import * as regionInfo from '@aws-cdk/region-info';\n\nconst codeDeployPrincipal = regionInfo.Fact.find('us-east-1', regionInfo.FactName.servicePrincipal('codedeploy.amazonaws.com'));\n// => codedeploy.us-east-1.amazonaws.com\n\nconst staticWebsite = regionInfo.Fact.find('ap-northeast-1', regionInfo.FactName.S3_STATIC_WEBSITE_ENDPOINT);\n// => s3-website-ap-northeast-1.amazonaws.com",
      "syntaxKindCounter": {
        "10": 4,
        "75": 15,
        "194": 8,
        "196": 3,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "5797746405d6bb24589edbf736a0149091e139d518240b022a77ab4ec5990586"
    },
    "3e16434a69e5fdd23ac55cdeef1f88fcec25a4312c0ae3c1d39696fa98e9a0bc": {
      "translations": {
        "python": {
          "source": "import aws_cdk.region_info as region_info\n\ncode_deploy_principal = region_info.Fact.find(\"us-east-1\", region_info.FactName.service_principal(\"codedeploy.amazonaws.com\"))\n# => codedeploy.us-east-1.amazonaws.com\n\nstatic_website = region_info.Fact.find(\"ap-northeast-1\", region_info.FactName.S3_STATIC_WEBSITE_ENDPOINT)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.RegionInfo;\n\nstring? codeDeployPrincipal = Fact.Find(\"us-east-1\", FactName.ServicePrincipal(\"codedeploy.amazonaws.com\"));\n// => codedeploy.us-east-1.amazonaws.com\n\nstring? staticWebsite = Fact.Find(\"ap-northeast-1\", FactName.S3_STATIC_WEBSITE_ENDPOINT);",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.regioninfo.*;\n\nString codeDeployPrincipal = Fact.find(\"us-east-1\", FactName.servicePrincipal(\"codedeploy.amazonaws.com\"));\n// => codedeploy.us-east-1.amazonaws.com\n\nString staticWebsite = Fact.find(\"ap-northeast-1\", FactName.S3_STATIC_WEBSITE_ENDPOINT);",
          "version": "1"
        },
        "$": {
          "source": "import * as regionInfo from '@aws-cdk/region-info';\n\nconst codeDeployPrincipal = regionInfo.Fact.find('us-east-1', regionInfo.FactName.servicePrincipal('codedeploy.amazonaws.com'));\n// => codedeploy.us-east-1.amazonaws.com\n\nconst staticWebsite = regionInfo.Fact.find('ap-northeast-1', regionInfo.FactName.S3_STATIC_WEBSITE_ENDPOINT);\n// => s3-website-ap-northeast-1.amazonaws.com",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/region-info.FactName"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/region-info.Fact",
        "@aws-cdk/region-info.Fact#find",
        "@aws-cdk/region-info.FactName",
        "@aws-cdk/region-info.FactName#S3_STATIC_WEBSITE_ENDPOINT",
        "@aws-cdk/region-info.FactName#servicePrincipal"
      ],
      "fullSource": "import * as regionInfo from '@aws-cdk/region-info';\n\nconst codeDeployPrincipal = regionInfo.Fact.find('us-east-1', regionInfo.FactName.servicePrincipal('codedeploy.amazonaws.com'));\n// => codedeploy.us-east-1.amazonaws.com\n\nconst staticWebsite = regionInfo.Fact.find('ap-northeast-1', regionInfo.FactName.S3_STATIC_WEBSITE_ENDPOINT);\n// => s3-website-ap-northeast-1.amazonaws.com",
      "syntaxKindCounter": {
        "10": 4,
        "75": 15,
        "194": 8,
        "196": 3,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "5797746405d6bb24589edbf736a0149091e139d518240b022a77ab4ec5990586"
    },
    "12e7d2b9990237845aa652758f7ea8ca82282f02dcad493fe18d3ed6bc75dcd0": {
      "translations": {
        "python": {
          "source": "from aws_cdk.region_info import RegionInfo\n\n# Get the information for \"eu-west-1\":\nregion = RegionInfo.get(\"eu-west-1\")\n\n# Access attributes:\nregion.s3_static_website_endpoint # s3-website-eu-west-1.amazonaws.com\nregion.service_principal(\"logs.amazonaws.com\")",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.RegionInfo;\n\n// Get the information for \"eu-west-1\":\nRegionInfo region = RegionInfo.Get(\"eu-west-1\");\n\n// Access attributes:\nregion.S3StaticWebsiteEndpoint; // s3-website-eu-west-1.amazonaws.com\nregion.ServicePrincipal(\"logs.amazonaws.com\");",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.regioninfo.RegionInfo;\n\n// Get the information for \"eu-west-1\":\nRegionInfo region = RegionInfo.get(\"eu-west-1\");\n\n// Access attributes:\nregion.getS3StaticWebsiteEndpoint(); // s3-website-eu-west-1.amazonaws.com\nregion.servicePrincipal(\"logs.amazonaws.com\");",
          "version": "1"
        },
        "$": {
          "source": "import { RegionInfo } from '@aws-cdk/region-info';\n\n// Get the information for \"eu-west-1\":\nconst region = RegionInfo.get('eu-west-1');\n\n// Access attributes:\nregion.s3StaticWebsiteEndpoint; // s3-website-eu-west-1.amazonaws.com\nregion.servicePrincipal('logs.amazonaws.com'); // logs.eu-west-1.amazonaws.com",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/region-info.RegionInfo"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/region-info.RegionInfo",
        "@aws-cdk/region-info.RegionInfo#get",
        "@aws-cdk/region-info.RegionInfo#servicePrincipal"
      ],
      "fullSource": "import { RegionInfo } from '@aws-cdk/region-info';\n\n// Get the information for \"eu-west-1\":\nconst region = RegionInfo.get('eu-west-1');\n\n// Access attributes:\nregion.s3StaticWebsiteEndpoint; // s3-website-eu-west-1.amazonaws.com\nregion.servicePrincipal('logs.amazonaws.com'); // logs.eu-west-1.amazonaws.com",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "194": 3,
        "196": 2,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "290": 1
      },
      "fqnsFingerprint": "97ec6b3ee5dcd55ca63753f03b0a23616036e346c91ff93309e28737431af21d"
    }
  }
}
