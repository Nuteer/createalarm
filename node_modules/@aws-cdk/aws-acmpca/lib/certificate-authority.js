"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CertificateAuthority = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const cdk = require("@aws-cdk/core");
/**
 * Defines a Certificate for ACMPCA.
 *
 * @stability stable
 * @resource AWS::ACMPCA::CertificateAuthority
 */
class CertificateAuthority {
    constructor() {
    }
    /**
     * Import an existing Certificate given an ARN.
     *
     * @stability stable
     */
    static fromCertificateAuthorityArn(scope, id, certificateAuthorityArn) {
        return new class extends cdk.Resource {
            constructor() {
                super(...arguments);
                this.certificateAuthorityArn = certificateAuthorityArn;
            }
        }(scope, id);
    }
}
exports.CertificateAuthority = CertificateAuthority;
_a = JSII_RTTI_SYMBOL_1;
CertificateAuthority[_a] = { fqn: "@aws-cdk/aws-acmpca.CertificateAuthority", version: "1.137.0" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VydGlmaWNhdGUtYXV0aG9yaXR5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY2VydGlmaWNhdGUtYXV0aG9yaXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEscUNBQXFDOzs7Ozs7O0FBVXJDLE1BQWEsb0JBQW9CO0lBUS9CO0tBQ0M7Ozs7OztJQVBNLE1BQU0sQ0FBQywyQkFBMkIsQ0FBQyxLQUFnQixFQUFFLEVBQVUsRUFBRSx1QkFBK0I7UUFDckcsT0FBTyxJQUFJLEtBQU0sU0FBUSxHQUFHLENBQUMsUUFBUTtZQUExQjs7Z0JBQ0EsNEJBQXVCLEdBQUcsdUJBQXVCLENBQUM7WUFDN0QsQ0FBQztTQUFBLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0tBQ2Q7O0FBTkgsb0RBVUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjZGsgZnJvbSAnQGF3cy1jZGsvY29yZSc7XG5pbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdjb25zdHJ1Y3RzJztcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5leHBvcnQgaW50ZXJmYWNlIElDZXJ0aWZpY2F0ZUF1dGhvcml0eSBleHRlbmRzIGNkay5JUmVzb3VyY2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIHJlYWRvbmx5IGNlcnRpZmljYXRlQXV0aG9yaXR5QXJuOiBzdHJpbmc7XG59XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuZXhwb3J0IGNsYXNzIENlcnRpZmljYXRlQXV0aG9yaXR5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICBwdWJsaWMgc3RhdGljIGZyb21DZXJ0aWZpY2F0ZUF1dGhvcml0eUFybihzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nLCBjZXJ0aWZpY2F0ZUF1dGhvcml0eUFybjogc3RyaW5nKTogSUNlcnRpZmljYXRlQXV0aG9yaXR5IHtcbiAgICByZXR1cm4gbmV3IGNsYXNzIGV4dGVuZHMgY2RrLlJlc291cmNlIGltcGxlbWVudHMgSUNlcnRpZmljYXRlQXV0aG9yaXR5IHtcbiAgICAgIHJlYWRvbmx5IGNlcnRpZmljYXRlQXV0aG9yaXR5QXJuID0gY2VydGlmaWNhdGVBdXRob3JpdHlBcm47XG4gICAgfShzY29wZSwgaWQpO1xuICB9XG5cbiAgcHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHtcbiAgfVxufVxuIl19