"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.LambdaFunctionProcessor = void 0;
const jsiiDeprecationWarnings = require("../.warnings.jsii.js");
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
/**
 * (experimental) Use an AWS Lambda function to transform records.
 *
 * @experimental
 */
class LambdaFunctionProcessor {
    /**
     * @experimental
     */
    constructor(lambdaFunction, props = {}) {
        this.lambdaFunction = lambdaFunction;
        jsiiDeprecationWarnings._aws_cdk_aws_kinesisfirehose_DataProcessorProps(props);
        this.props = props;
    }
    /**
     * (experimental) Binds this processor to a destination of a delivery stream.
     *
     * Implementers should use this method to grant processor invocation permissions to the provided stream and return the
     * necessary configuration to register as a processor.
     *
     * @experimental
     */
    bind(_scope, options) {
        jsiiDeprecationWarnings._aws_cdk_aws_kinesisfirehose_DataProcessorBindOptions(options);
        this.lambdaFunction.grantInvoke(options.role);
        return {
            processorType: 'Lambda',
            processorIdentifier: {
                parameterName: 'LambdaArn',
                parameterValue: this.lambdaFunction.functionArn,
            },
        };
    }
}
exports.LambdaFunctionProcessor = LambdaFunctionProcessor;
_a = JSII_RTTI_SYMBOL_1;
LambdaFunctionProcessor[_a] = { fqn: "@aws-cdk/aws-kinesisfirehose.LambdaFunctionProcessor", version: "1.137.0" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFtYmRhLWZ1bmN0aW9uLXByb2Nlc3Nvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxhbWJkYS1mdW5jdGlvbi1wcm9jZXNzb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFLQSxNQUFhLHVCQUF1Qjs7OztJQUlsQyxZQUE2QixjQUFnQyxFQUFFLFFBQTRCLEVBQUU7UUFBaEUsbUJBQWMsR0FBZCxjQUFjLENBQWtCOztRQUMzRCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztLQUNwQjs7Ozs7Ozs7O0lBRU0sSUFBSSxDQUFDLE1BQWlCLEVBQUUsT0FBaUM7O1FBQzlELElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUU5QyxPQUFPO1lBQ0wsYUFBYSxFQUFFLFFBQVE7WUFDdkIsbUJBQW1CLEVBQUU7Z0JBQ25CLGFBQWEsRUFBRSxXQUFXO2dCQUMxQixjQUFjLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXO2FBQ2hEO1NBQ0YsQ0FBQztLQUNIOztBQWxCSCwwREFtQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBsYW1iZGEgZnJvbSAnQGF3cy1jZGsvYXdzLWxhbWJkYSc7XG5pbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdjb25zdHJ1Y3RzJztcbmltcG9ydCB7IERhdGFQcm9jZXNzb3JCaW5kT3B0aW9ucywgRGF0YVByb2Nlc3NvckNvbmZpZywgRGF0YVByb2Nlc3NvclByb3BzLCBJRGF0YVByb2Nlc3NvciB9IGZyb20gJy4vcHJvY2Vzc29yJztcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbmV4cG9ydCBjbGFzcyBMYW1iZGFGdW5jdGlvblByb2Nlc3NvciBpbXBsZW1lbnRzIElEYXRhUHJvY2Vzc29yIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgcHVibGljIHJlYWRvbmx5IHByb3BzOiBEYXRhUHJvY2Vzc29yUHJvcHM7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBsYW1iZGFGdW5jdGlvbjogbGFtYmRhLklGdW5jdGlvbiwgcHJvcHM6IERhdGFQcm9jZXNzb3JQcm9wcyA9IHt9KSB7XG4gICAgdGhpcy5wcm9wcyA9IHByb3BzO1xuICB9XG5cbiAgcHVibGljIGJpbmQoX3Njb3BlOiBDb25zdHJ1Y3QsIG9wdGlvbnM6IERhdGFQcm9jZXNzb3JCaW5kT3B0aW9ucyk6IERhdGFQcm9jZXNzb3JDb25maWcge1xuICAgIHRoaXMubGFtYmRhRnVuY3Rpb24uZ3JhbnRJbnZva2Uob3B0aW9ucy5yb2xlKTtcblxuICAgIHJldHVybiB7XG4gICAgICBwcm9jZXNzb3JUeXBlOiAnTGFtYmRhJyxcbiAgICAgIHByb2Nlc3NvcklkZW50aWZpZXI6IHtcbiAgICAgICAgcGFyYW1ldGVyTmFtZTogJ0xhbWJkYUFybicsXG4gICAgICAgIHBhcmFtZXRlclZhbHVlOiB0aGlzLmxhbWJkYUZ1bmN0aW9uLmZ1bmN0aW9uQXJuLFxuICAgICAgfSxcbiAgICB9O1xuICB9XG59XG4iXX0=