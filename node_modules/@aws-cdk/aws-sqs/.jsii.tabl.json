{
  "version": "2",
  "toolVersion": "1.47.0",
  "snippets": {
    "04030752eaa843f886912bd2dece80a02efec264467b77e1e961f2bce53b0ce4": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_sqs as sqs",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.SQS;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.sqs.*;",
          "version": "1"
        },
        "$": {
          "source": "import * as sqs from '@aws-cdk/aws-sqs';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-sqs"
        },
        "field": {
          "field": "markdown",
          "line": 25
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as sqs from '@aws-cdk/aws-sqs';",
      "syntaxKindCounter": {
        "10": 1,
        "75": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "9244b20e179b08a6165e503b4f37fe238bb53ea973a77eaa53c67fd7ef6ea76e": {
      "translations": {
        "python": {
          "source": "sqs.Queue(self, \"Queue\")",
          "version": "1"
        },
        "csharp": {
          "source": "new Queue(this, \"Queue\");",
          "version": "1"
        },
        "java": {
          "source": "new Queue(this, \"Queue\");",
          "version": "1"
        },
        "$": {
          "source": "new sqs.Queue(this, 'Queue');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-sqs"
        },
        "field": {
          "field": "markdown",
          "line": 34
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sqs.Queue"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport sqs = require('@aws-cdk/aws-sqs');\nimport kms = require('@aws-cdk/aws-kms');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew sqs.Queue(this, 'Queue');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 2,
        "104": 1,
        "194": 1,
        "197": 1,
        "226": 1
      },
      "fqnsFingerprint": "4292fa5a3369d6cd0bfff55d0218bc347915a2a2938a87fbaa64efb2054f3bcb"
    },
    "182a518d6827162ad04acdfbab5ece9d32be7732a98e5570ffec432f7a979352": {
      "translations": {
        "python": {
          "source": "# Use managed key\nsqs.Queue(self, \"Queue\",\n    encryption=sqs.QueueEncryption.KMS_MANAGED\n)\n\n# Use custom key\nmy_key = kms.Key(self, \"Key\")\n\nsqs.Queue(self, \"Queue\",\n    encryption=sqs.QueueEncryption.KMS,\n    encryption_master_key=my_key\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// Use managed key\n// Use managed key\nnew Queue(this, \"Queue\", new QueueProps {\n    Encryption = QueueEncryption.KMS_MANAGED\n});\n\n// Use custom key\nKey myKey = new Key(this, \"Key\");\n\nnew Queue(this, \"Queue\", new QueueProps {\n    Encryption = QueueEncryption.KMS,\n    EncryptionMasterKey = myKey\n});",
          "version": "1"
        },
        "java": {
          "source": "// Use managed key\n// Use managed key\nQueue.Builder.create(this, \"Queue\")\n        .encryption(QueueEncryption.KMS_MANAGED)\n        .build();\n\n// Use custom key\nKey myKey = new Key(this, \"Key\");\n\nQueue.Builder.create(this, \"Queue\")\n        .encryption(QueueEncryption.KMS)\n        .encryptionMasterKey(myKey)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// Use managed key\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS_MANAGED,\n});\n\n// Use custom key\nconst myKey = new kms.Key(this, 'Key');\n\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS,\n  encryptionMasterKey: myKey,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-sqs"
        },
        "field": {
          "field": "markdown",
          "line": 44
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-sqs.Queue",
        "@aws-cdk/aws-sqs.QueueEncryption",
        "@aws-cdk/aws-sqs.QueueEncryption#KMS",
        "@aws-cdk/aws-sqs.QueueEncryption#KMS_MANAGED",
        "@aws-cdk/aws-sqs.QueueProps"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport sqs = require('@aws-cdk/aws-sqs');\nimport kms = require('@aws-cdk/aws-kms');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Use managed key\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS_MANAGED,\n});\n\n// Use custom key\nconst myKey = new kms.Key(this, 'Key');\n\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS,\n  encryptionMasterKey: myKey,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 17,
        "104": 3,
        "193": 2,
        "194": 7,
        "197": 3,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "0f69885b7d39caccc8a9dafff944a6efd455f9b7cdd3634bcbffc540d333822e"
    },
    "b73056b7d073f0f6f2b8ba8833118fc41362053ae0860e44e45a88cce6b3ceed": {
      "translations": {
        "python": {
          "source": "# An sqs queue for unsuccessful invocations of a lambda function\nimport aws_cdk.aws_sqs as sqs\n\n\ndead_letter_queue = sqs.Queue(self, \"DeadLetterQueue\")\n\nmy_fn = lambda_.Function(self, \"Fn\",\n    runtime=lambda_.Runtime.NODEJS_12_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_inline(\"// your code\"),\n    # sqs queue for unsuccessful invocations\n    on_failure=destinations.SqsDestination(dead_letter_queue)\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// An sqs queue for unsuccessful invocations of a lambda function\nusing Amazon.CDK.AWS.SQS;\n\n\nQueue deadLetterQueue = new Queue(this, \"DeadLetterQueue\");\n\nFunction myFn = new Function(this, \"Fn\", new FunctionProps {\n    Runtime = Runtime.NODEJS_12_X,\n    Handler = \"index.handler\",\n    Code = Code.FromInline(\"// your code\"),\n    // sqs queue for unsuccessful invocations\n    OnFailure = new SqsDestination(deadLetterQueue)\n});",
          "version": "1"
        },
        "java": {
          "source": "// An sqs queue for unsuccessful invocations of a lambda function\nimport software.amazon.awscdk.services.sqs.*;\n\n\nQueue deadLetterQueue = new Queue(this, \"DeadLetterQueue\");\n\nFunction myFn = Function.Builder.create(this, \"Fn\")\n        .runtime(Runtime.NODEJS_12_X)\n        .handler(\"index.handler\")\n        .code(Code.fromInline(\"// your code\"))\n        // sqs queue for unsuccessful invocations\n        .onFailure(new SqsDestination(deadLetterQueue))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// An sqs queue for unsuccessful invocations of a lambda function\nimport * as sqs from '@aws-cdk/aws-sqs';\n\nconst deadLetterQueue = new sqs.Queue(this, 'DeadLetterQueue');\n\nconst myFn = new lambda.Function(this, 'Fn', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline('// your code'),\n  // sqs queue for unsuccessful invocations\n  onFailure: new destinations.SqsDestination(deadLetterQueue),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sqs.Queue"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda-destinations.SqsDestination",
        "@aws-cdk/aws-lambda.Code",
        "@aws-cdk/aws-lambda.Code#fromInline",
        "@aws-cdk/aws-lambda.Function",
        "@aws-cdk/aws-lambda.FunctionProps",
        "@aws-cdk/aws-lambda.IDestination",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#NODEJS_12_X",
        "@aws-cdk/aws-sqs.IQueue",
        "@aws-cdk/aws-sqs.Queue"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// An sqs queue for unsuccessful invocations of a lambda function\nimport * as sqs from '@aws-cdk/aws-sqs';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as destinations from '@aws-cdk/aws-lambda-destinations';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst deadLetterQueue = new sqs.Queue(this, 'DeadLetterQueue');\n\nconst myFn = new lambda.Function(this, 'Fn', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline('// your code'),\n  // sqs queue for unsuccessful invocations\n  onFailure: new destinations.SqsDestination(deadLetterQueue),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 20,
        "104": 2,
        "193": 1,
        "194": 7,
        "196": 1,
        "197": 3,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "6ded2c31e143839d3c35e0c4c6ef7d4655169a7d647143134ca5989a30f1da29"
    },
    "a12bdb65eb082f2a609a9b14f1b5bae3bc65bccb08302ce44afa78d8a9a5c0d2": {
      "translations": {
        "python": {
          "source": "# Use managed key\nsqs.Queue(self, \"Queue\",\n    encryption=sqs.QueueEncryption.KMS_MANAGED\n)\n\n# Use custom key\nmy_key = kms.Key(self, \"Key\")\n\nsqs.Queue(self, \"Queue\",\n    encryption=sqs.QueueEncryption.KMS,\n    encryption_master_key=my_key\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// Use managed key\n// Use managed key\nnew Queue(this, \"Queue\", new QueueProps {\n    Encryption = QueueEncryption.KMS_MANAGED\n});\n\n// Use custom key\nKey myKey = new Key(this, \"Key\");\n\nnew Queue(this, \"Queue\", new QueueProps {\n    Encryption = QueueEncryption.KMS,\n    EncryptionMasterKey = myKey\n});",
          "version": "1"
        },
        "java": {
          "source": "// Use managed key\n// Use managed key\nQueue.Builder.create(this, \"Queue\")\n        .encryption(QueueEncryption.KMS_MANAGED)\n        .build();\n\n// Use custom key\nKey myKey = new Key(this, \"Key\");\n\nQueue.Builder.create(this, \"Queue\")\n        .encryption(QueueEncryption.KMS)\n        .encryptionMasterKey(myKey)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// Use managed key\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS_MANAGED,\n});\n\n// Use custom key\nconst myKey = new kms.Key(this, 'Key');\n\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS,\n  encryptionMasterKey: myKey,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sqs.QueueEncryption"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-sqs.Queue",
        "@aws-cdk/aws-sqs.QueueEncryption",
        "@aws-cdk/aws-sqs.QueueEncryption#KMS",
        "@aws-cdk/aws-sqs.QueueEncryption#KMS_MANAGED",
        "@aws-cdk/aws-sqs.QueueProps"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport sqs = require('@aws-cdk/aws-sqs');\nimport kms = require('@aws-cdk/aws-kms');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Use managed key\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS_MANAGED,\n});\n\n// Use custom key\nconst myKey = new kms.Key(this, 'Key');\n\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS,\n  encryptionMasterKey: myKey,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 17,
        "104": 3,
        "193": 2,
        "194": 7,
        "197": 3,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "0f69885b7d39caccc8a9dafff944a6efd455f9b7cdd3634bcbffc540d333822e"
    },
    "27fcd574e62648b88418f50aa3760dcf4715a0c0c1b15b8c222efe9c5ea1d51c": {
      "translations": {
        "python": {
          "source": "# Use managed key\nsqs.Queue(self, \"Queue\",\n    encryption=sqs.QueueEncryption.KMS_MANAGED\n)\n\n# Use custom key\nmy_key = kms.Key(self, \"Key\")\n\nsqs.Queue(self, \"Queue\",\n    encryption=sqs.QueueEncryption.KMS,\n    encryption_master_key=my_key\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// Use managed key\n// Use managed key\nnew Queue(this, \"Queue\", new QueueProps {\n    Encryption = QueueEncryption.KMS_MANAGED\n});\n\n// Use custom key\nKey myKey = new Key(this, \"Key\");\n\nnew Queue(this, \"Queue\", new QueueProps {\n    Encryption = QueueEncryption.KMS,\n    EncryptionMasterKey = myKey\n});",
          "version": "1"
        },
        "java": {
          "source": "// Use managed key\n// Use managed key\nQueue.Builder.create(this, \"Queue\")\n        .encryption(QueueEncryption.KMS_MANAGED)\n        .build();\n\n// Use custom key\nKey myKey = new Key(this, \"Key\");\n\nQueue.Builder.create(this, \"Queue\")\n        .encryption(QueueEncryption.KMS)\n        .encryptionMasterKey(myKey)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// Use managed key\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS_MANAGED,\n});\n\n// Use custom key\nconst myKey = new kms.Key(this, 'Key');\n\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS,\n  encryptionMasterKey: myKey,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sqs.QueueProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-sqs.Queue",
        "@aws-cdk/aws-sqs.QueueEncryption",
        "@aws-cdk/aws-sqs.QueueEncryption#KMS",
        "@aws-cdk/aws-sqs.QueueEncryption#KMS_MANAGED",
        "@aws-cdk/aws-sqs.QueueProps"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport sqs = require('@aws-cdk/aws-sqs');\nimport kms = require('@aws-cdk/aws-kms');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Use managed key\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS_MANAGED,\n});\n\n// Use custom key\nconst myKey = new kms.Key(this, 'Key');\n\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS,\n  encryptionMasterKey: myKey,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 17,
        "104": 3,
        "193": 2,
        "194": 7,
        "197": 3,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "0f69885b7d39caccc8a9dafff944a6efd455f9b7cdd3634bcbffc540d333822e"
    }
  }
}
