import { Construct } from 'constructs';
import { ActionCategory, ActionArtifactBounds } from './action';
import { Construct as CoreConstruct } from '@aws-cdk/core';
/**
 * The creation attributes used for defining a configuration property of a custom Action.
 *
 * @stability stable
 */
export interface CustomActionProperty {
    /**
     * The name of the property.
     *
     * You use this name in the `configuration` attribute when defining your custom Action class.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * The description of the property.
     *
     * @default the description will be empty
     * @stability stable
     */
    readonly description?: string;
    /**
     * Whether this property is a key.
     *
     * @default false
     * @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-configurationproperties.html#cfn-codepipeline-customactiontype-configurationproperties-key
     * @stability stable
     */
    readonly key?: boolean;
    /**
     * Whether this property is queryable.
     *
     * Note that only a single property of a custom Action can be queryable.
     *
     * @default false
     * @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-configurationproperties.html#cfn-codepipeline-customactiontype-configurationproperties-queryable
     * @stability stable
     */
    readonly queryable?: boolean;
    /**
     * Whether this property is required.
     *
     * @stability stable
     */
    readonly required: boolean;
    /**
     * Whether this property is secret, like a password, or access key.
     *
     * @default false
     * @stability stable
     */
    readonly secret?: boolean;
    /**
     * The type of the property, like 'String', 'Number', or 'Boolean'.
     *
     * @default 'String'
     * @stability stable
     */
    readonly type?: string;
}
/**
 * Properties of registering a custom Action.
 *
 * @stability stable
 */
export interface CustomActionRegistrationProps {
    /**
     * The category of the Action.
     *
     * @stability stable
     */
    readonly category: ActionCategory;
    /**
     * The artifact bounds of the Action.
     *
     * @stability stable
     */
    readonly artifactBounds: ActionArtifactBounds;
    /**
     * The provider of the Action.
     *
     * For example, `'MyCustomActionProvider'`
     *
     * @stability stable
     */
    readonly provider: string;
    /**
     * The version of your Action.
     *
     * @default '1'
     * @stability stable
     */
    readonly version?: string;
    /**
     * The URL shown for the entire Action in the Pipeline UI.
     *
     * @default none
     * @stability stable
     */
    readonly entityUrl?: string;
    /**
     * The URL shown for a particular execution of an Action in the Pipeline UI.
     *
     * @default none
     * @stability stable
     */
    readonly executionUrl?: string;
    /**
     * The properties used for customizing the instance of your Action.
     *
     * @default []
     * @stability stable
     */
    readonly actionProperties?: CustomActionProperty[];
}
/**
 * The resource representing registering a custom Action with CodePipeline.
 *
 * For the Action to be usable, it has to be registered for every region and every account it's used in.
 * In addition to this class, you should most likely also provide your clients a class
 * representing your custom Action, extending the Action class,
 * and taking the `actionProperties` as properly typed, construction properties.
 *
 * @stability stable
 */
export declare class CustomActionRegistration extends CoreConstruct {
    /**
     * @stability stable
     */
    constructor(scope: Construct, id: string, props: CustomActionRegistrationProps);
}
