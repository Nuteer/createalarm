function _aws_cdk_aws_sns_subscriptions_EmailSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.filterPolicy))
        require("@aws-cdk/aws-sns/.warnings.jsii.js")._aws_cdk_aws_sns_SubscriptionFilter(p.filterPolicy);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sns_subscriptions_LambdaSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.filterPolicy))
        require("@aws-cdk/aws-sns/.warnings.jsii.js")._aws_cdk_aws_sns_SubscriptionFilter(p.filterPolicy);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sns_subscriptions_SqsSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.filterPolicy))
        require("@aws-cdk/aws-sns/.warnings.jsii.js")._aws_cdk_aws_sns_SubscriptionFilter(p.filterPolicy);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sns_subscriptions_SmsSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.filterPolicy))
        require("@aws-cdk/aws-sns/.warnings.jsii.js")._aws_cdk_aws_sns_SubscriptionFilter(p.filterPolicy);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sns_subscriptions_SubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.filterPolicy))
        require("@aws-cdk/aws-sns/.warnings.jsii.js")._aws_cdk_aws_sns_SubscriptionFilter(p.filterPolicy);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sns_subscriptions_EmailSubscription(p) {
}
function _aws_cdk_aws_sns_subscriptions_SmsSubscription(p) {
}
function _aws_cdk_aws_sns_subscriptions_UrlSubscription(p) {
}
function _aws_cdk_aws_sns_subscriptions_LambdaSubscription(p) {
}
function _aws_cdk_aws_sns_subscriptions_SqsSubscription(p) {
}
function _aws_cdk_aws_sns_subscriptions_UrlSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.filterPolicy))
        require("@aws-cdk/aws-sns/.warnings.jsii.js")._aws_cdk_aws_sns_SubscriptionFilter(p.filterPolicy);
    visitedObjects.delete(p);
}
function print(name, deprecationMessage) {
    const deprecated = process.env.JSII_DEPRECATED;
    const deprecationMode = ["warn", "fail", "quiet"].includes(deprecated) ? deprecated : "warn";
    const message = `${name} is deprecated.\n  ${deprecationMessage}\n  This API will be removed in the next major release.`;
    switch (deprecationMode) {
        case "fail":
            throw new DeprecationError(message);
        case "warn":
            console.warn("[WARNING]", message);
            break;
    }
}
const visitedObjects = new Set();
class DeprecationError extends Error {
}
module.exports = { print, _aws_cdk_aws_sns_subscriptions_EmailSubscriptionProps, _aws_cdk_aws_sns_subscriptions_LambdaSubscriptionProps, _aws_cdk_aws_sns_subscriptions_SqsSubscriptionProps, _aws_cdk_aws_sns_subscriptions_SmsSubscriptionProps, _aws_cdk_aws_sns_subscriptions_SubscriptionProps, _aws_cdk_aws_sns_subscriptions_EmailSubscription, _aws_cdk_aws_sns_subscriptions_SmsSubscription, _aws_cdk_aws_sns_subscriptions_UrlSubscription, _aws_cdk_aws_sns_subscriptions_LambdaSubscription, _aws_cdk_aws_sns_subscriptions_SqsSubscription, _aws_cdk_aws_sns_subscriptions_UrlSubscriptionProps };
module.exports.DeprecationError = DeprecationError;
