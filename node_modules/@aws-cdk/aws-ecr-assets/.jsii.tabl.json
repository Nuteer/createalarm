{
  "version": "2",
  "toolVersion": "1.47.0",
  "snippets": {
    "5ca750fd8abae8b9cbf11c6b132a3233e7aa15b37a0c8f8d460645938f6bbb60": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_ecr_assets import DockerImageAsset\n\nasset = DockerImageAsset(self, \"MyBuildImage\",\n    directory=path.join(__dirname, \"my-image\")\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Ecr.Assets;\n\nDockerImageAsset asset = new DockerImageAsset(this, \"MyBuildImage\", new DockerImageAssetProps {\n    Directory = path.Join(__dirname, \"my-image\")\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.ecr.assets.DockerImageAsset;\n\nDockerImageAsset asset = DockerImageAsset.Builder.create(this, \"MyBuildImage\")\n        .directory(path.join(__dirname, \"my-image\"))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import { DockerImageAsset } from '@aws-cdk/aws-ecr-assets';\n\nconst asset = new DockerImageAsset(this, 'MyBuildImage', {\n  directory: path.join(__dirname, 'my-image')\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-ecr-assets"
        },
        "field": {
          "field": "markdown",
          "line": 20
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-ecr-assets.DockerImageAsset",
        "@aws-cdk/aws-ecr-assets.DockerImageAssetProps"
      ],
      "fullSource": "import { DockerImageAsset } from '@aws-cdk/aws-ecr-assets';\n\nconst asset = new DockerImageAsset(this, 'MyBuildImage', {\n  directory: path.join(__dirname, 'my-image')\n});",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 1,
        "196": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "69664956b7c76a26c981f417df41103d8299ddcff4e91cf4f80da304f4e2149f"
    },
    "7dcc9c2d44ab1f01b45d6f1231f33cd80bb81b6daf72d37eccbe28a925fc5ba6": {
      "translations": {
        "python": {
          "source": "asset = DockerImageAsset(self, \"MyBuildImage\",\n    directory=path.join(__dirname, \"my-image\"),\n    build_args={\n        \"HTTP_PROXY\": \"http://10.20.30.2:1234\"\n    },\n    invalidation={\n        \"build_args\": False\n    }\n)",
          "version": "1"
        },
        "csharp": {
          "source": "var asset = new DockerImageAsset(this, \"MyBuildImage\", new Struct {\n    Directory = path.Join(__dirname, \"my-image\"),\n    BuildArgs = new Struct {\n        HTTP_PROXY = \"http://10.20.30.2:1234\"\n    },\n    Invalidation = new Struct {\n        BuildArgs = false\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Object asset = DockerImageAsset.Builder.create(this, \"MyBuildImage\")\n        .directory(path.join(__dirname, \"my-image\"))\n        .buildArgs(Map.of(\n                \"HTTP_PROXY\", \"http://10.20.30.2:1234\"))\n        .invalidation(Map.of(\n                \"buildArgs\", false))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const asset = new DockerImageAsset(this, 'MyBuildImage', {\n  directory: path.join(__dirname, 'my-image'),\n  buildArgs: {\n    HTTP_PROXY: 'http://10.20.30.2:1234'\n  },\n  invalidation: {\n    buildArgs: false\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-ecr-assets"
        },
        "field": {
          "field": "markdown",
          "line": 57
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "const asset = new DockerImageAsset(this, 'MyBuildImage', {\n  directory: path.join(__dirname, 'my-image'),\n  buildArgs: {\n    HTTP_PROXY: 'http://10.20.30.2:1234'\n  },\n  invalidation: {\n    buildArgs: false\n  }\n});",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "91": 1,
        "104": 1,
        "193": 3,
        "194": 1,
        "196": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "098a45bbaed24bbdf5b668a1e68d46a8af56fafa91c8c81c37d573a6aeb3f347": {
      "translations": {
        "python": {
          "source": "asset = DockerImageAsset(self, \"MyBuildImage\",\n    directory=path.join(__dirname, \"my-image\"),\n    target=\"a-target\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "var asset = new DockerImageAsset(this, \"MyBuildImage\", new Struct {\n    Directory = path.Join(__dirname, \"my-image\"),\n    Target = \"a-target\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Object asset = DockerImageAsset.Builder.create(this, \"MyBuildImage\")\n        .directory(path.join(__dirname, \"my-image\"))\n        .target(\"a-target\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const asset = new DockerImageAsset(this, 'MyBuildImage', {\n  directory: path.join(__dirname, 'my-image'),\n  target: 'a-target'\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-ecr-assets"
        },
        "field": {
          "field": "markdown",
          "line": 72
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "const asset = new DockerImageAsset(this, 'MyBuildImage', {\n  directory: path.join(__dirname, 'my-image'),\n  target: 'a-target'\n})",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 1,
        "196": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "6bdd40bf7c945ba035e80787135774263d93af3b3697b5739fa5029b5fea2104": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_ecr_assets import TarballImageAsset\n\nasset = TarballImageAsset(self, \"MyBuildImage\",\n    tarball_file=\"local-image.tar\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Ecr.Assets;\n\nTarballImageAsset asset = new TarballImageAsset(this, \"MyBuildImage\", new TarballImageAssetProps {\n    TarballFile = \"local-image.tar\"\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.ecr.assets.TarballImageAsset;\n\nTarballImageAsset asset = TarballImageAsset.Builder.create(this, \"MyBuildImage\")\n        .tarballFile(\"local-image.tar\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import { TarballImageAsset } from '@aws-cdk/aws-ecr-assets';\n\nconst asset = new TarballImageAsset(this, 'MyBuildImage', {\n  tarballFile: 'local-image.tar'\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-ecr-assets"
        },
        "field": {
          "field": "markdown",
          "line": 84
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-ecr-assets.TarballImageAsset",
        "@aws-cdk/aws-ecr-assets.TarballImageAssetProps"
      ],
      "fullSource": "import { TarballImageAsset } from '@aws-cdk/aws-ecr-assets';\n\nconst asset = new TarballImageAsset(this, 'MyBuildImage', {\n  tarballFile: 'local-image.tar'\n});",
      "syntaxKindCounter": {
        "10": 3,
        "75": 4,
        "104": 1,
        "193": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "1b85736ee65feac01fcdca55253f556ae0ca757b26c51cdaf4ac8e2cc1c9f684"
    },
    "c7cbe5f059212b2c82e28a8afeeb854da210a376dd911597578ffb5072ef3e93": {
      "translations": {
        "python": {
          "source": "import cdk_ecr_deployment as ecrdeploy\n\nimage = DockerImageAsset(self, \"CDKDockerImage\",\n    directory=path.join(__dirname, \"docker\")\n)\n\necrdeploy.ECRDeployment(self, \"DeployDockerImage\",\n    src=ecrdeploy.DockerImageName(image.image_uri),\n    dest=ecrdeploy.DockerImageName(f\"{cdk.Aws.ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/test:nginx\")\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Cdk.Ecr.Deployment;\n\nvar image = new DockerImageAsset(this, \"CDKDockerImage\", new Struct {\n    Directory = path.Join(__dirname, \"docker\")\n});\n\nnew ECRDeployment(this, \"DeployDockerImage\", new Struct {\n    Src = new DockerImageName(image.ImageUri),\n    Dest = new DockerImageName($\"{cdk.Aws.ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/test:nginx\")\n});",
          "version": "1"
        },
        "java": {
          "source": "import cdk.ecr.deployment.*;\n\nObject image = DockerImageAsset.Builder.create(this, \"CDKDockerImage\")\n        .directory(path.join(__dirname, \"docker\"))\n        .build();\n\nECRDeployment.Builder.create(this, \"DeployDockerImage\")\n        .src(new DockerImageName(image.getImageUri()))\n        .dest(new DockerImageName(String.format(\"%s.dkr.ecr.us-west-2.amazonaws.com/test:nginx\", cdk.getAws().getACCOUNT_ID())))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import * as ecrdeploy from 'cdk-ecr-deployment';\n\nconst image = new DockerImageAsset(this, 'CDKDockerImage', {\n  directory: path.join(__dirname, 'docker'),\n});\n\nnew ecrdeploy.ECRDeployment(this, 'DeployDockerImage', {\n  src: new ecrdeploy.DockerImageName(image.imageUri),\n  dest: new ecrdeploy.DockerImageName(`${cdk.Aws.ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/test:nginx`),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-ecr-assets"
        },
        "field": {
          "field": "markdown",
          "line": 109
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "import * as ecrdeploy from 'cdk-ecr-deployment';\n\nconst image = new DockerImageAsset(this, 'CDKDockerImage', {\n  directory: path.join(__dirname, 'docker'),\n});\n\nnew ecrdeploy.ECRDeployment(this, 'DeployDockerImage', {\n  src: new ecrdeploy.DockerImageName(image.imageUri),\n  dest: new ecrdeploy.DockerImageName(`${cdk.Aws.ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/test:nginx`),\n});",
      "syntaxKindCounter": {
        "10": 4,
        "15": 1,
        "17": 1,
        "75": 20,
        "104": 2,
        "193": 2,
        "194": 7,
        "196": 1,
        "197": 4,
        "211": 1,
        "221": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "118ac61df92111427060b1247590df71900e7ad11cfbbe1cfb21bd5c58fac56c": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_ecr_assets import DockerImageAsset\n\nasset = DockerImageAsset(self, \"MyBuildImage\",\n    directory=path.join(__dirname, \"my-image\")\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Ecr.Assets;\n\nDockerImageAsset asset = new DockerImageAsset(this, \"MyBuildImage\", new DockerImageAssetProps {\n    Directory = path.Join(__dirname, \"my-image\")\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.ecr.assets.DockerImageAsset;\n\nDockerImageAsset asset = DockerImageAsset.Builder.create(this, \"MyBuildImage\")\n        .directory(path.join(__dirname, \"my-image\"))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import { DockerImageAsset } from '@aws-cdk/aws-ecr-assets';\n\nconst asset = new DockerImageAsset(this, 'MyBuildImage', {\n  directory: path.join(__dirname, 'my-image')\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ecr-assets.DockerImageAsset"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-ecr-assets.DockerImageAsset",
        "@aws-cdk/aws-ecr-assets.DockerImageAssetProps"
      ],
      "fullSource": "import { DockerImageAsset } from '@aws-cdk/aws-ecr-assets';\n\nconst asset = new DockerImageAsset(this, 'MyBuildImage', {\n  directory: path.join(__dirname, 'my-image')\n});",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 1,
        "196": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "69664956b7c76a26c981f417df41103d8299ddcff4e91cf4f80da304f4e2149f"
    },
    "4dc43fa0b2544d7fcc70059670c0c3cf55b576012dddae994dadee007d2451f5": {
      "translations": {
        "python": {
          "source": "environment=codebuild.BuildEnvironment(\n    build_image=codebuild.LinuxBuildImage.from_asset(self, \"MyImage\",\n        directory=path.join(__dirname, \"demo-image\")\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "Environment = new BuildEnvironment {\n    BuildImage = LinuxBuildImage.FromAsset(this, \"MyImage\", new DockerImageAssetProps {\n        Directory = Join(__dirname, \"demo-image\")\n    })\n}",
          "version": "1"
        },
        "java": {
          "source": ".environment(BuildEnvironment.builder()\n        .buildImage(LinuxBuildImage.fromAsset(this, \"MyImage\", DockerImageAssetProps.builder()\n                .directory(join(__dirname, \"demo-image\"))\n                .build()))\n        .build())\n.build();",
          "version": "1"
        },
        "$": {
          "source": "environment: {\n  buildImage: codebuild.LinuxBuildImage.fromAsset(this, 'MyImage', {\n    directory: path.join(__dirname, 'demo-image'),\n  }),\n},",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ecr-assets.DockerImageAssetProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codebuild.BuildEnvironment",
        "@aws-cdk/aws-codebuild.BuildSpec",
        "@aws-cdk/aws-codebuild.IBuildImage",
        "@aws-cdk/aws-codebuild.LinuxBuildImage",
        "@aws-cdk/aws-codebuild.LinuxBuildImage#fromAsset",
        "@aws-cdk/aws-ecr-assets.DockerImageAssetProps"
      ],
      "fullSource": "import * as path from 'path';\nimport * as cdk from '@aws-cdk/core';\nimport * as codebuild from '../lib';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    new codebuild.Project(this, 'MyProject', {\n      buildSpec: codebuild.BuildSpec.fromObject({\n        version: '0.2',\n        phases: {\n          build: {\n            commands: ['ls'],\n          },\n        },\n      }),\n      grantReportGroupPermissions: false,\n      /// !show\n      environment: {\n        buildImage: codebuild.LinuxBuildImage.fromAsset(this, 'MyImage', {\n          directory: path.join(__dirname, 'demo-image'),\n        }),\n      },\n      /// !hide\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nnew TestStack(app, 'test-codebuild-docker-asset');\n\napp.synth();\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "104": 1,
        "193": 2,
        "194": 3,
        "196": 2,
        "281": 3
      },
      "fqnsFingerprint": "9f3d99d46694e6cb69588a49ba21b7640251ecefd678c13134fe30fe10678516"
    },
    "c629582bb5416572cada15f6fb7e413cad964ef45e9f0e913665fb24f427dcf2": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_ecr_assets import TarballImageAsset\n\nasset = TarballImageAsset(self, \"MyBuildImage\",\n    tarball_file=\"local-image.tar\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Ecr.Assets;\n\nTarballImageAsset asset = new TarballImageAsset(this, \"MyBuildImage\", new TarballImageAssetProps {\n    TarballFile = \"local-image.tar\"\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.ecr.assets.TarballImageAsset;\n\nTarballImageAsset asset = TarballImageAsset.Builder.create(this, \"MyBuildImage\")\n        .tarballFile(\"local-image.tar\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import { TarballImageAsset } from '@aws-cdk/aws-ecr-assets';\n\nconst asset = new TarballImageAsset(this, 'MyBuildImage', {\n  tarballFile: 'local-image.tar'\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ecr-assets.TarballImageAsset"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-ecr-assets.TarballImageAsset",
        "@aws-cdk/aws-ecr-assets.TarballImageAssetProps"
      ],
      "fullSource": "import { TarballImageAsset } from '@aws-cdk/aws-ecr-assets';\n\nconst asset = new TarballImageAsset(this, 'MyBuildImage', {\n  tarballFile: 'local-image.tar'\n});",
      "syntaxKindCounter": {
        "10": 3,
        "75": 4,
        "104": 1,
        "193": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "1b85736ee65feac01fcdca55253f556ae0ca757b26c51cdaf4ac8e2cc1c9f684"
    },
    "4a55a0545b410aeab4c79a476bcda90d0fb6ca3ced9de3a1a6af4643409a1277": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_ecr_assets import TarballImageAsset\n\nasset = TarballImageAsset(self, \"MyBuildImage\",\n    tarball_file=\"local-image.tar\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Ecr.Assets;\n\nTarballImageAsset asset = new TarballImageAsset(this, \"MyBuildImage\", new TarballImageAssetProps {\n    TarballFile = \"local-image.tar\"\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.ecr.assets.TarballImageAsset;\n\nTarballImageAsset asset = TarballImageAsset.Builder.create(this, \"MyBuildImage\")\n        .tarballFile(\"local-image.tar\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import { TarballImageAsset } from '@aws-cdk/aws-ecr-assets';\n\nconst asset = new TarballImageAsset(this, 'MyBuildImage', {\n  tarballFile: 'local-image.tar'\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ecr-assets.TarballImageAssetProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-ecr-assets.TarballImageAsset",
        "@aws-cdk/aws-ecr-assets.TarballImageAssetProps"
      ],
      "fullSource": "import { TarballImageAsset } from '@aws-cdk/aws-ecr-assets';\n\nconst asset = new TarballImageAsset(this, 'MyBuildImage', {\n  tarballFile: 'local-image.tar'\n});",
      "syntaxKindCounter": {
        "10": 3,
        "75": 4,
        "104": 1,
        "193": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "1b85736ee65feac01fcdca55253f556ae0ca757b26c51cdaf4ac8e2cc1c9f684"
    }
  }
}
