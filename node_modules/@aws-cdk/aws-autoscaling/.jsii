{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-autoscaling-common": "1.137.0",
    "@aws-cdk/aws-cloudwatch": "1.137.0",
    "@aws-cdk/aws-ec2": "1.137.0",
    "@aws-cdk/aws-elasticloadbalancing": "1.137.0",
    "@aws-cdk/aws-elasticloadbalancingv2": "1.137.0",
    "@aws-cdk/aws-iam": "1.137.0",
    "@aws-cdk/aws-sns": "1.137.0",
    "@aws-cdk/core": "1.137.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-acmpca": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ACMPCA",
          "packageId": "Amazon.CDK.AWS.ACMPCA"
        },
        "java": {
          "maven": {
            "artifactId": "acmpca",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.acmpca"
        },
        "js": {
          "npm": "@aws-cdk/aws-acmpca"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-acmpca",
          "module": "aws_cdk.aws_acmpca"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancing": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancing"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancing",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancing"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancing"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancing",
          "module": "aws_cdk.aws_elasticloadbalancing"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::AutoScaling",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.47.0 (build 86d2c33)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "autoscaling"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-autoscaling",
  "readme": {
    "markdown": "# Amazon EC2 Auto Scaling Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n## Auto Scaling Group\n\nAn `AutoScalingGroup` represents a number of instances on which you run your code. You\npick the size of the fleet, the instance type and the OS image:\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage() // get the latest Amazon Linux image\n});\n```\n\nNOTE: AutoScalingGroup has an property called `allowAllOutbound` (allowing the instances to contact the\ninternet) which is set to `true` by default. Be sure to set this to `false`  if you don't want\nyour instances to be able to start arbitrary connections. Alternatively, you can specify an existing security\ngroup to attach to the instances that are launched, rather than have the group create a new one.\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});\n```\n\n## Machine Images (AMIs)\n\nAMIs control the OS that gets launched when you start your EC2 instance. The EC2\nlibrary contains constructs to select the AMI you want to use.\n\nDepending on the type of AMI, you select it a different way.\n\nThe latest version of Amazon Linux and Microsoft Windows images are\nselectable by instantiating one of these classes:\n\n```ts lit=test/example.images.lit.ts\n// Pick a Windows edition to use\nconst windows = new ec2.WindowsImage(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = new ec2.AmazonLinuxImage({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\n\nconst linux = new ec2.GenericLinuxImage({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n```\n\n> NOTE: The Amazon Linux images selected will be cached in your `cdk.json`, so that your\n> AutoScalingGroups don't automatically change out from under you when you're making unrelated\n> changes. To update to the latest version of Amazon Linux, remove the cache entry from the `context`\n> section of your `cdk.json`.\n>\n> We will add command-line options to make this step easier in the future.\n\n## AutoScaling Instance Counts\n\nAutoScalingGroups make it possible to raise and lower the number of instances in the group,\nin response to (or in advance of) changes in workload.\n\nWhen you create your AutoScalingGroup, you specify a `minCapacity` and a\n`maxCapacity`. AutoScaling policies that respond to metrics will never go higher\nor lower than the indicated capacity (but scheduled scaling actions might, see\nbelow).\n\nThere are three ways to scale your capacity:\n\n* **In response to a metric** (also known as step scaling); for example, you\n  might want to scale out if the CPU usage across your cluster starts to rise,\n  and scale in when it drops again.\n* **By trying to keep a certain metric around a given value** (also known as\n  target tracking scaling); you might want to automatically scale out and in to\n  keep your CPU usage around 50%.\n* **On a schedule**; you might want to organize your scaling around traffic\n  flows you expect, by scaling out in the morning and scaling in in the\n  evening.\n\nThe general pattern of autoscaling will look like this:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nconst autoScalingGroup = new autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  minCapacity: 5,\n  maxCapacity: 100\n  // ...\n});\n\n// Then call one of the scaling methods (explained below)\n//\n// autoScalingGroup.scaleOnMetric(...);\n//\n// autoScalingGroup.scaleOnCpuUtilization(...);\n// autoScalingGroup.scaleOnIncomingBytes(...);\n// autoScalingGroup.scaleOnOutgoingBytes(...);\n// autoScalingGroup.scaleOnRequestCount(...);\n// autoScalingGroup.scaleToTrackMetric(...);\n//\n// autoScalingGroup.scaleOnSchedule(...);\n```\n\n### Step Scaling\n\nThis type of scaling scales in and out in deterministics steps that you\nconfigure, in response to metric values. For example, your scaling strategy to\nscale in response to a metric that represents your average worker pool usage\nmight look like this:\n\n```plaintext\n Scaling        -1          (no change)          +1       +3\n            │        │                       │        │        │\n            ├────────┼───────────────────────┼────────┼────────┤\n            │        │                       │        │        │\nWorker use  0%      10%                     50%       70%     100%\n```\n\n(Note that this is not necessarily a recommended scaling strategy, but it's\na possible one. You will have to determine what thresholds are right for you).\n\nNote that in order to set up this scaling strategy, you will have to emit a\nmetric representing your worker utilization from your instances. After that,\nyou would configure the scaling something like this:\n\n```ts\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nconst workerUtilizationMetric = new cloudwatch.Metric({\n    namespace: 'MyService',\n    metricName: 'WorkerUtilization'\n});\n\nautoScalingGroup.scaleOnMetric('ScaleToCPU', {\n  metric: workerUtilizationMetric,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});\n```\n\nThe AutoScaling construct library will create the required CloudWatch alarms and\nAutoScaling policies for you.\n\n### Target Tracking Scaling\n\nThis type of scaling scales in and out in order to keep a metric around a value\nyou prefer. There are four types of predefined metrics you can track, or you can\nchoose to track a custom metric. If you do choose to track a custom metric,\nbe aware that the metric has to represent instance utilization in some way\n(AutoScaling will scale out if the metric is higher than the target, and scale\nin if the metric is lower than the target).\n\nIf you configure multiple target tracking policies, AutoScaling will use the\none that yields the highest capacity.\n\nThe following example scales to keep the CPU usage of your instances around\n50% utilization:\n\n```ts\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnCpuUtilization('KeepSpareCPU', {\n  targetUtilizationPercent: 50\n});\n```\n\nTo scale on average network traffic in and out of your instances:\n\n```ts\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnIncomingBytes('LimitIngressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});\nautoScalingGroup.scaleOnOutgoingBytes('LimitEgressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});\n```\n\nTo scale on the average request count per instance (only works for\nAutoScalingGroups that have been attached to Application Load\nBalancers):\n\n```ts\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnRequestCount('LimitRPS', {\n    targetRequestsPerSecond: 1000\n});\n```\n\n### Scheduled Scaling\n\nThis type of scaling is used to change capacities based on time. It works by\nchanging `minCapacity`, `maxCapacity` and `desiredCapacity` of the\nAutoScalingGroup, and so can be used for two purposes:\n\n* Scale in and out on a schedule by setting the `minCapacity` high or\n  the `maxCapacity` low.\n* Still allow the regular scaling actions to do their job, but restrict\n  the range they can scale over (by setting both `minCapacity` and\n  `maxCapacity` but changing their range over time).\n\nA schedule is expressed as a cron expression. The `Schedule` class has a `cron` method to help build cron expressions.\n\nThe following example scales the fleet out in the morning, going back to natural\nscaling (all the way down to 1 instance if necessary) at night:\n\n```ts\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\nautoScalingGroup.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: autoscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});\n```\n\n## Configuring Instances using CloudFormation Init\n\nIt is possible to use the CloudFormation Init mechanism to configure the\ninstances in the AutoScalingGroup. You can write files to it, run commands,\nstart services, etc. See the documentation of\n[AWS::CloudFormation::Init](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-init.html)\nand the documentation of CDK's `aws-ec2` library for more information.\n\nWhen you specify a CloudFormation Init configuration for an AutoScalingGroup:\n\n* you *must* also specify `signals` to configure how long CloudFormation\n  should wait for the instances to successfully configure themselves.\n* you *should* also specify an `updatePolicy` to configure how instances\n  should be updated when the AutoScalingGroup is updated (for example,\n  when the AMI is updated). If you don't specify an update policy, a *rolling\n  update* is chosen by default.\n\nHere's an example of using CloudFormation Init to write a file to the\ninstance hosts on startup:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});\n```\n\n## Signals\n\nIn normal operation, CloudFormation will send a Create or Update command to\nan AutoScalingGroup and proceed with the rest of the deployment without waiting\nfor the *instances in the AutoScalingGroup*.\n\nConfigure `signals` to tell CloudFormation to wait for a specific number of\ninstances in the AutoScalingGroup to have been started (or failed to start)\nbefore moving on. An instance is supposed to execute the\n[`cfn-signal`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-signal.html)\nprogram as part of its startup to indicate whether it was started\nsuccessfully or not.\n\nIf you use CloudFormation Init support (described in the previous section),\nthe appropriate call to `cfn-signal` is automatically added to the\nAutoScalingGroup's UserData. If you don't use the `signals` directly, you are\nresponsible for adding such a call yourself.\n\nThe following type of `Signals` are available:\n\n* `Signals.waitForAll([options])`: wait for all of `desiredCapacity` amount of instances\n  to have started (recommended).\n* `Signals.waitForMinCapacity([options])`: wait for a `minCapacity` amount of instances\n  to have started (use this if waiting for all instances takes too long and you are happy\n  with a minimum count of healthy hosts).\n* `Signals.waitForCount(count, [options])`: wait for a specific amount of instances to have\n  started.\n\nThere are two `options` you can configure:\n\n* `timeout`: maximum time a host startup is allowed to take. If a host does not report\n  success within this time, it is considered a failure. Default is 5 minutes.\n* `minSuccessPercentage`: percentage of hosts that needs to be healthy in order for the\n  update to succeed. If you set this value lower than 100, some percentage of hosts may\n  report failure, while still considering the deployment a success. Default is 100%.\n\n## Update Policy\n\nThe *update policy* describes what should happen to running instances when the definition\nof the AutoScalingGroup is changed. For example, if you add a command to the UserData\nof an AutoScalingGroup, do the existing instances get replaced with new instances that\nhave executed the new UserData? Or do the \"old\" instances just keep on running?\n\nIt is recommended to always use an update policy, otherwise the current state of your\ninstances also depends the previous state of your instances, rather than just on your\nsource code. This degrades the reproducibility of your deployments.\n\nThe following update policies are available:\n\n* `UpdatePolicy.none()`: leave existing instances alone (not recommended).\n* `UpdatePolicy.rollingUpdate([options])`: progressively replace the existing\n  instances with new instances, in small batches. At any point in time,\n  roughly the same amount of total instances will be running. If the deployment\n  needs to be rolled back, the fresh instances will be replaced with the \"old\"\n  configuration again.\n* `UpdatePolicy.replacingUpdate([options])`: build a completely fresh copy\n  of the new AutoScalingGroup next to the old one. Once the AutoScalingGroup\n  has been successfully created (and the instances started, if `signals` is\n  configured on the AutoScalingGroup), the old AutoScalingGroup is deleted.\n  If the deployment needs to be rolled back, the new AutoScalingGroup is\n  deleted and the old one is left unchanged.\n\n## Allowing Connections\n\nSee the documentation of the `@aws-cdk/aws-ec2` package for more information\nabout allowing connections between resources backed by instances.\n\n## Max Instance Lifetime\n\nTo enable the max instance lifetime support, specify `maxInstanceLifetime` property\nfor the `AutoscalingGroup` resource. The value must be between 7 and 365 days(inclusive).\nTo clear a previously set value, leave this property undefined.\n\n## Instance Monitoring\n\nTo disable detailed instance monitoring, specify `instanceMonitoring` property\nfor the `AutoscalingGroup` resource as `Monitoring.BASIC`. Otherwise detailed monitoring\nwill be enabled.\n\n## Monitoring Group Metrics\n\nGroup metrics are used to monitor group level properties; they describe the group rather than any of its instances (e.g GroupMaxSize, the group maximum size). To enable group metrics monitoring, use the `groupMetrics` property.\nAll group metrics are reported in a granularity of 1 minute at no additional charge.\n\nSee [EC2 docs](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html#as-group-metrics) for a list of all available group metrics.\n\nTo enable group metrics monitoring using the `groupMetrics` property:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\n// Enable monitoring of all group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [autoscaling.GroupMetrics.all()],\n});\n\n// Enable monitoring for a subset of group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [new autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)],\n});\n```\n\n## Protecting new instances from being terminated on scale-in\n\nBy default, Auto Scaling can terminate an instance at any time after launch when\nscaling in an Auto Scaling Group, subject to the group's [termination\npolicy](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html).\n\nHowever, you may wish to protect newly-launched instances from being scaled in\nif they are going to run critical applications that should not be prematurely\nterminated. EC2 Capacity Providers for Amazon ECS requires this attribute be\nset to `true`.\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  newInstancesProtectedFromScaleIn: true,\n});\n```\n\n## Configuring Instance Metadata Service (IMDS)\n\n### Toggling IMDSv1\n\nYou can configure [EC2 Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) options to either\nallow both IMDSv1 and IMDSv2 or enforce IMDSv2 when interacting with the IMDS.\n\nTo do this for a single `AutoScalingGroup`, you can use set the `requireImdsv2` property.\nThe example below demonstrates IMDSv2 being required on a single `AutoScalingGroup`:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  requireImdsv2: true,\n});\n```\n\nYou can also use `AutoScalingGroupRequireImdsv2Aspect` to apply the operation to multiple AutoScalingGroups.\nThe example below demonstrates the `AutoScalingGroupRequireImdsv2Aspect` being used to require IMDSv2 for all AutoScalingGroups in a stack:\n\n```ts\nconst aspect = new autoscaling.AutoScalingGroupRequireImdsv2Aspect();\n\nAspects.of(this).add(aspect);\n```\n\n## Future work\n\n* [ ] CloudWatch Events (impossible to add currently as the AutoScalingGroup ARN is\n  necessary to make this rule and this cannot be accessed from CloudFormation).\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-autoscaling",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.AutoScaling",
      "packageId": "Amazon.CDK.AWS.AutoScaling"
    },
    "java": {
      "maven": {
        "artifactId": "autoscaling",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.autoscaling"
    },
    "js": {
      "npm": "@aws-cdk/aws-autoscaling"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-autoscaling",
      "module": "aws_cdk.aws_autoscaling"
    }
  },
  "types": {
    "@aws-cdk/aws-autoscaling.AdjustmentTier": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "An adjustment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst adjustmentTier: autoscaling.AdjustmentTier = {\n  adjustment: 123,\n\n  // the properties below are optional\n  lowerBound: 123,\n  upperBound: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.AdjustmentTier",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 155
      },
      "name": "AdjustmentTier",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The number is interpeted as an added capacity, a new fixed capacity or an\nadded percentage depending on the AdjustmentType value of the\nStepScalingPolicy.\n\nCan be positive or negative.",
            "stability": "stable",
            "summary": "What number to adjust the capacity with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 165
          },
          "name": "adjustment",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "-Infinity if this is the first tier, otherwise the upperBound of the previous tier",
            "remarks": "The scaling tier applies if the difference between the metric\nvalue and its alarm threshold is higher than this value.",
            "stability": "stable",
            "summary": "Lower bound where this scaling tier applies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 175
          },
          "name": "lowerBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "+Infinity",
            "remarks": "The scaling tier applies if the difference between the metric\nvalue and its alarm threshold is lower than this value.",
            "stability": "stable",
            "summary": "Upper bound where this scaling tier applies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 185
          },
          "name": "upperBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/step-scaling-action:AdjustmentTier"
    },
    "@aws-cdk/aws-autoscaling.AdjustmentType": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "example": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nconst workerUtilizationMetric = new cloudwatch.Metric({\n    namespace: 'MyService',\n    metricName: 'WorkerUtilization'\n});\n\nautoScalingGroup.scaleOnMetric('ScaleToCPU', {\n  metric: workerUtilizationMetric,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});",
        "stability": "stable",
        "summary": "How adjustment numbers are interpreted."
      },
      "fqn": "@aws-cdk/aws-autoscaling.AdjustmentType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 110
      },
      "members": [
        {
          "docs": {
            "remarks": "A positive number increases capacity, a negative number decreases capacity.",
            "stability": "stable",
            "summary": "Add the adjustment number to the current capacity."
          },
          "name": "CHANGE_IN_CAPACITY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Make the capacity equal to the exact number given."
          },
          "name": "EXACT_CAPACITY"
        },
        {
          "docs": {
            "remarks": "The number must be between -100 and 100; a positive number increases\ncapacity and a negative number decreases it.",
            "stability": "stable",
            "summary": "Add this percentage of the current capacity to itself."
          },
          "name": "PERCENT_CHANGE_IN_CAPACITY"
        }
      ],
      "name": "AdjustmentType",
      "symbolId": "lib/step-scaling-action:AdjustmentType"
    },
    "@aws-cdk/aws-autoscaling.ApplyCloudFormationInitOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for applying CloudFormation init to an instance or instance group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst applyCloudFormationInitOptions: autoscaling.ApplyCloudFormationInitOptions = {\n  configSets: ['configSets'],\n  embedFingerprint: false,\n  ignoreFailures: false,\n  includeRole: false,\n  includeUrl: false,\n  printLog: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.ApplyCloudFormationInitOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1748
      },
      "name": "ApplyCloudFormationInitOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "['default']",
            "stability": "stable",
            "summary": "ConfigSet to activate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1754
          },
          "name": "configSets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If `true` (the default), a hash of the config will be embedded into the\nUserData, so that if the config changes, the UserData changes and\ninstances will be replaced (given an UpdatePolicy has been configured on\nthe AutoScalingGroup).\n\nIf `false`, no such hash will be embedded, and if the CloudFormation Init\nconfig changes nothing will happen to the running instances. If a\nconfig update introduces errors, you will not notice until after the\nCloudFormation deployment successfully finishes and the next instance\nfails to launch.",
            "stability": "stable",
            "summary": "Force instance replacement by embedding a config fingerprint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1772
          },
          "name": "embedFingerprint",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "You can use this to prevent CloudFormation from rolling back when\ninstances fail to start up, to help in debugging.",
            "stability": "stable",
            "summary": "Don't fail the instance creation when cfn-init fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1797
          },
          "name": "ignoreFailures",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This will be the IAM instance profile attached to the EC2 instance",
            "stability": "stable",
            "summary": "Include --role argument when running cfn-init and cfn-signal commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1816
          },
          "name": "includeRole",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This will be the cloudformation endpoint in the deployed region\ne.g. https://cloudformation.us-east-1.amazonaws.com",
            "stability": "stable",
            "summary": "Include --url argument when running cfn-init and cfn-signal commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1807
          },
          "name": "includeUrl",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "By default, the output of running cfn-init is written to a log file\non the instance. Set this to `true` to print it to the System Log\n(visible from the EC2 Console), `false` to not print it.\n\n(Be aware that the system log is refreshed at certain points in\ntime of the instance life cycle, and successful execution may\nnot always show up).",
            "stability": "stable",
            "summary": "Print the results of running cfn-init to the Instance System Log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1787
          },
          "name": "printLog",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:ApplyCloudFormationInitOptions"
    },
    "@aws-cdk/aws-autoscaling.AutoScalingGroup": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});",
        "remarks": "The Fleet models a number of AutoScalingGroups, a launch configuration, a\nsecurity group and an instance role.\n\nIt allows adding arbitrary commands to the startup scripts of the instances\nin the fleet.\n\nThe ASG spans the availability zones specified by vpcSubnets, falling back to\nthe Vpc default strategy if not specified.",
        "stability": "stable",
        "summary": "A Fleet represents a managed set of EC2 instances."
      },
      "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/auto-scaling-group.ts",
          "line": 932
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget",
        "@aws-cdk/aws-ec2.IConnectable",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget",
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 856
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Send a message to either an SQS queue or SNS topic when instances launch or terminate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 729
          },
          "name": "addLifecycleHook",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BasicLifecycleHookProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.LifecycleHook"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add the security group to all instances via the launch configuration security groups array."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1089
          },
          "name": "addSecurityGroup",
          "parameters": [
            {
              "docs": {
                "summary": ": The security group to add."
              },
              "name": "securityGroup",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the IAM role assumed by instances of this fleet."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1134
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "The command must be in the scripting language supported by the fleet's OS (i.e. Linux/Windows).\nDoes nothing for imported ASGs.",
            "stability": "stable",
            "summary": "Add command to the startup script of fleet instances."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1127
          },
          "name": "addUserData",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "This does the following:\n\n- Attaches the CloudFormation Init metadata to the AutoScalingGroup resource.\n- Add commands to the UserData to run `cfn-init` and `cfn-signal`.\n- Update the instance's CreationPolicy to wait for `cfn-init` to finish\n   before reporting success.",
            "stability": "stable",
            "summary": "Use a CloudFormation Init configuration at instance startup."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1148
          },
          "name": "applyCloudFormationInit",
          "parameters": [
            {
              "name": "init",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.CloudFormationInit"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.ApplyCloudFormationInitOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns `true` if newly-launched instances are protected from scale-in."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1176
          },
          "name": "areNewInstancesProtectedFromScaleIn",
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Attach to ELBv2 Application Target Group."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1103
          },
          "name": "attachToApplicationTargetGroup",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Attach to a classic load balancer."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1096
          },
          "name": "attachToClassicLB",
          "overrides": "@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget",
          "parameters": [
            {
              "name": "loadBalancer",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancer"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Attach to ELBv2 Application Target Group."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1122
          },
          "name": "attachToNetworkTargetGroup",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 862
          },
          "name": "fromAutoScalingGroupName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "autoScalingGroupName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Ensures newly-launched instances are protected from scale-in."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1169
          },
          "name": "protectNewInstancesFromScaleIn"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in to achieve a target CPU utilization."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 749
          },
          "name": "scaleOnCpuUtilization",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.CpuUtilizationScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in to achieve a target network ingress rate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 761
          },
          "name": "scaleOnIncomingBytes",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in, in response to a metric."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 835
          },
          "name": "scaleOnMetric",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.StepScalingPolicy"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in to achieve a target network egress rate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 773
          },
          "name": "scaleOnOutgoingBytes",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "docs": {
            "remarks": "The AutoScalingGroup must have been attached to an Application Load Balancer\nin order to be able to call this.",
            "stability": "stable",
            "summary": "Scale out or in to achieve a target request handling rate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 788
          },
          "name": "scaleOnRequestCount",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.RequestCountScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in based on time."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 739
          },
          "name": "scaleOnSchedule",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BasicScheduledActionProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.ScheduledAction"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in in order to keep a metric around a target value."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 824
          },
          "name": "scaleToTrackMetric",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.MetricTargetTrackingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        }
      ],
      "name": "AutoScalingGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 723
          },
          "name": "albTargetGroup",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Arn of the AutoScalingGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 904
          },
          "name": "autoScalingGroupArn",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Name of the AutoScalingGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 899
          },
          "name": "autoScalingGroupName",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allows specify security group connections for instances of this fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 884
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 894
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The maximum amount of time that an instance can be in service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 920
          },
          "name": "maxInstanceLifetime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 930
          },
          "name": "newInstancesProtectedFromScaleIn",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of OS instances of this fleet are running."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 879
          },
          "name": "osType",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IAM role assumed by instances of this fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 889
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "remarks": "`undefined`\nindicates that this group uses on-demand capacity.",
            "stability": "stable",
            "summary": "The maximum spot price configured for the autoscaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 915
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "UserData for the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 909
          },
          "name": "userData",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:AutoScalingGroup"
    },
    "@aws-cdk/aws-autoscaling.AutoScalingGroupProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});",
        "stability": "stable",
        "summary": "Properties of a Fleet."
      },
      "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.CommonAutoScalingGroupProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 322
      },
      "name": "AutoScalingGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no CloudFormation init",
            "remarks": "If you specify `init`, you must also specify `signals` to configure\nthe number of instances to wait for and the timeout for waiting for the\ninit process.",
            "stability": "stable",
            "summary": "Apply the given CloudFormation Init configuration to the instances in the AutoScalingGroup at startup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 379
          },
          "name": "init",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.CloudFormationInit"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "remarks": "Describes the configsets to use and the timeout to wait",
            "stability": "stable",
            "summary": "Use the given options for applying CloudFormation Init."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 388
          },
          "name": "initOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ApplyCloudFormationInitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of instance to launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 331
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "AMI to launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 336
          },
          "name": "machineImage",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IMachineImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Whether IMDSv2 should be required on launched instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 395
          },
          "name": "requireImdsv2",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A role will automatically be created, it can be accessed via the `role` property",
            "example": "   const role = new iam.Role(this, 'MyRole', {\n     assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com')\n   });",
            "remarks": "The role must be assumable by the service principal `ec2.amazonaws.com`:",
            "stability": "stable",
            "summary": "An IAM role to associate with the instance profile assigned to this Auto Scaling Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 368
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A SecurityGroup will be created if none is specified.",
            "stability": "stable",
            "summary": "Security group to launch the instances in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 343
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A UserData object appropriate for the MachineImage's\nOperating System is created.",
            "remarks": "The UserData may still be mutated after creation.",
            "stability": "stable",
            "summary": "Specific UserData to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 353
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "VPC to launch these instances in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 326
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:AutoScalingGroupProps"
    },
    "@aws-cdk/aws-autoscaling.AutoScalingGroupRequireImdsv2Aspect": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "example": "const aspect = new autoscaling.AutoScalingGroupRequireImdsv2Aspect();\n\nAspects.of(this).add(aspect);",
        "stability": "stable",
        "summary": "Aspect that makes IMDSv2 required on instances deployed by AutoScalingGroups."
      },
      "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroupRequireImdsv2Aspect",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/aspects/require-imdsv2-aspect.ts",
          "line": 9
        }
      },
      "interfaces": [
        "@aws-cdk/core.IAspect"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aspects/require-imdsv2-aspect.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All aspects can visit an IConstruct."
          },
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 12
          },
          "name": "visit",
          "overrides": "@aws-cdk/core.IAspect",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a warning annotation to a node."
          },
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 35
          },
          "name": "warn",
          "parameters": [
            {
              "docs": {
                "summary": "The scope to add the warning to."
              },
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            },
            {
              "docs": {
                "summary": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "AutoScalingGroupRequireImdsv2Aspect",
      "symbolId": "lib/aspects/require-imdsv2-aspect:AutoScalingGroupRequireImdsv2Aspect"
    },
    "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "remarks": "Contains the attributes that are common to target tracking policies,\nexcept the ones relating to the metric and to the scalable target.\n\nThis interface is reused by more specific target tracking props objects.",
        "stability": "stable",
        "summary": "Base interface for target tracking props.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\nconst baseTargetTrackingProps: autoscaling.BaseTargetTrackingProps = {\n  cooldown: cdk.Duration.minutes(30),\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 19
      },
      "name": "BaseTargetTrackingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- The default cooldown configured on the AutoScalingGroup.",
            "stability": "stable",
            "summary": "Period after a scaling completes before another scaling activity can start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 37
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If the value is true, scale in is disabled and the target tracking policy\nwon't remove capacity from the autoscaling group. Otherwise, scale in is\nenabled and the target tracking policy can remove capacity from the\ngroup.",
            "stability": "stable",
            "summary": "Indicates whether scale in by the target tracking policy is disabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 30
          },
          "name": "disableScaleIn",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Same as the cooldown.",
            "stability": "stable",
            "summary": "Estimated time until a newly launched instance can send metrics to CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 44
          },
          "name": "estimatedInstanceWarmup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/target-tracking-scaling-policy:BaseTargetTrackingProps"
    },
    "@aws-cdk/aws-autoscaling.BasicLifecycleHookProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Basic properties for a lifecycle hook.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const lifecycleHookTarget: autoscaling.ILifecycleHookTarget;\ndeclare const role: iam.Role;\n\nconst basicLifecycleHookProps: autoscaling.BasicLifecycleHookProps = {\n  lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n  // the properties below are optional\n  defaultResult: autoscaling.DefaultResult.CONTINUE,\n  heartbeatTimeout: cdk.Duration.minutes(30),\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTarget: lifecycleHookTarget,\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BasicLifecycleHookProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lifecycle-hook.ts",
        "line": 11
      },
      "name": "BasicLifecycleHookProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Continue",
            "stability": "stable",
            "summary": "The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 24
          },
          "name": "defaultResult",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.DefaultResult"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No heartbeat timeout.",
            "remarks": "If the lifecycle hook times out, perform the action in DefaultResult.",
            "stability": "stable",
            "summary": "Maximum time between calls to RecordLifecycleActionHeartbeat for the hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 33
          },
          "name": "heartbeatTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated name.",
            "stability": "stable",
            "summary": "Name of the lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 17
          },
          "name": "lifecycleHookName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The state of the Amazon EC2 instance to which you want to attach the lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 38
          },
          "name": "lifecycleTransition",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.LifecycleTransition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No metadata.",
            "stability": "stable",
            "summary": "Additional data to pass to the lifecycle hook target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 45
          },
          "name": "notificationMetadata",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No target.",
            "stability": "stable",
            "summary": "The target of the lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 52
          },
          "name": "notificationTarget",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ILifecycleHookTarget"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role will be created if a target is provided. Otherwise, no role is created.",
            "stability": "stable",
            "summary": "The role that allows publishing to the notification target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 59
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/lifecycle-hook:BasicLifecycleHookProps"
    },
    "@aws-cdk/aws-autoscaling.BasicScheduledActionProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "example": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\nautoScalingGroup.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: autoscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});",
        "stability": "stable",
        "summary": "Properties for a scheduled scaling action."
      },
      "fqn": "@aws-cdk/aws-autoscaling.BasicScheduledActionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/scheduled-action.ts",
        "line": 10
      },
      "name": "BasicScheduledActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No new desired capacity.",
            "remarks": "At the scheduled time, set the desired capacity to the given capacity.\n\nAt least one of maxCapacity, minCapacity, or desiredCapacity must be supplied.",
            "stability": "stable",
            "summary": "The new desired capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 76
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The rule never expires.",
            "stability": "stable",
            "summary": "When this scheduled action expires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 43
          },
          "name": "endTime",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No new maximum capacity.",
            "remarks": "At the scheduled time, set the maximum capacity to the given capacity.\n\nAt least one of maxCapacity, minCapacity, or desiredCapacity must be supplied.",
            "stability": "stable",
            "summary": "The new maximum capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 65
          },
          "name": "maxCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No new minimum capacity.",
            "remarks": "At the scheduled time, set the minimum capacity to the given capacity.\n\nAt least one of maxCapacity, minCapacity, or desiredCapacity must be supplied.",
            "stability": "stable",
            "summary": "The new minimum capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 54
          },
          "name": "minCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Supports cron expressions.\n\nFor more information about cron expressions, see https://en.wikipedia.org/wiki/Cron.",
            "stability": "stable",
            "summary": "When to perform this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 29
          },
          "name": "schedule",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.Schedule"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The rule is activate immediately.",
            "stability": "stable",
            "summary": "When this scheduled action becomes active."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 36
          },
          "name": "startTime",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- UTC",
            "remarks": "If a time zone is not provided, UTC is used by default.\n\nValid values are the canonical names of the IANA time zones, derived from the IANA Time Zone Database (such as Etc/GMT+9 or Pacific/Tahiti).\n\nFor more information, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
            "stability": "stable",
            "summary": "Specifies the time zone for a cron expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 21
          },
          "name": "timeZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/scheduled-action:BasicScheduledActionProps"
    },
    "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "example": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nconst workerUtilizationMetric = new cloudwatch.Metric({\n    namespace: 'MyService',\n    metricName: 'WorkerUtilization'\n});\n\nautoScalingGroup.scaleOnMetric('ScaleToCPU', {\n  metric: workerUtilizationMetric,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});",
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 12
      },
      "name": "BasicStepScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "ChangeInCapacity",
            "stability": "stable",
            "summary": "How the adjustment numbers inside 'intervals' are interpreted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 30
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.AdjustmentType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Default cooldown period on your AutoScalingGroup",
            "stability": "stable",
            "summary": "Grace period after scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 37
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Same as the cooldown",
            "stability": "stable",
            "summary": "Estimated time until a newly launched instance can send metrics to CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 44
          },
          "name": "estimatedInstanceWarmup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "Raising this value can be used to smooth out the metric, at the expense\nof slower response times.",
            "stability": "stable",
            "summary": "How many evaluation periods of the metric to wait before triggering a scaling action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 64
          },
          "name": "evaluationPeriods",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Metric to scale on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 16
          },
          "name": "metric",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The statistic from the metric if applicable (MIN, MAX, AVERAGE), otherwise AVERAGE.",
            "remarks": "Only has meaning if `evaluationPeriods != 1`.",
            "stability": "stable",
            "summary": "Aggregation to apply to all data points over the evaluation periods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 73
          },
          "name": "metricAggregationType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.MetricAggregationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No minimum scaling effect",
            "remarks": "Only when using AdjustmentType = PercentChangeInCapacity, this number controls\nthe minimum absolute effect size.",
            "stability": "stable",
            "summary": "Minimum absolute number to adjust capacity with as result of percentage scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 54
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Maps a range of metric values to a particular scaling behavior.",
            "stability": "stable",
            "summary": "The intervals for scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 23
          },
          "name": "scalingSteps",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.ScalingInterval"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/step-scaling-policy:BasicStepScalingPolicyProps"
    },
    "@aws-cdk/aws-autoscaling.BasicTargetTrackingScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Target Tracking policy that include the metric but exclude the target.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\n\nconst basicTargetTrackingScalingPolicyProps: autoscaling.BasicTargetTrackingScalingPolicyProps = {\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  customMetric: metric,\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  predefinedMetric: autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BasicTargetTrackingScalingPolicyProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 50
      },
      "name": "BasicTargetTrackingScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No custom metric.",
            "remarks": "The metric must track utilization. Scaling out will happen if the metric is higher than\nthe target value, scaling in will happen in the metric is lower than the target value.\n\nExactly one of customMetric or predefinedMetric must be specified.",
            "stability": "stable",
            "summary": "A custom metric for application autoscaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 78
          },
          "name": "customMetric",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No predefined metric.",
            "remarks": "The metric must track utilization. Scaling out will happen if the metric is higher than\nthe target value, scaling in will happen in the metric is lower than the target value.\n\nExactly one of customMetric or predefinedMetric must be specified.",
            "stability": "stable",
            "summary": "A predefined metric for application autoscaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 66
          },
          "name": "predefinedMetric",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.PredefinedMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No resource label.",
            "remarks": "Should be supplied if the predefined metric is ALBRequestCountPerTarget, and the\nformat should be:\n\napp/<load-balancer-name>/<load-balancer-id>/targetgroup/<target-group-name>/<target-group-id>",
            "stability": "stable",
            "summary": "The resource label associated with the predefined metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 90
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target value for the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 54
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/target-tracking-scaling-policy:BasicTargetTrackingScalingPolicyProps"
    },
    "@aws-cdk/aws-autoscaling.BindHookTargetOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "remarks": "[disable-awslint:ref-via-interface] The lifecycle hook to attach to and an IRole to use",
        "stability": "stable",
        "summary": "Options needed to bind a target to a lifecycle hook.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const lifecycleHook: autoscaling.LifecycleHook;\ndeclare const role: iam.Role;\n\nconst bindHookTargetOptions: autoscaling.BindHookTargetOptions = {\n  lifecycleHook: lifecycleHook,\n\n  // the properties below are optional\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BindHookTargetOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lifecycle-hook-target.ts",
        "line": 13
      },
      "name": "BindHookTargetOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "stable",
            "summary": "The lifecycle hook to attach to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook-target.ts",
            "line": 18
          },
          "name": "lifecycleHook",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.LifecycleHook"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": ": a role is not created unless the target arn is specified",
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "stable",
            "summary": "The role to use when attaching to the lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook-target.ts",
            "line": 24
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/lifecycle-hook-target:BindHookTargetOptions"
    },
    "@aws-cdk/aws-autoscaling.BlockDevice": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Block device.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const blockDeviceVolume: autoscaling.BlockDeviceVolume;\n\nconst blockDevice: autoscaling.BlockDevice = {\n  deviceName: 'deviceName',\n  volume: blockDeviceVolume,\n\n  // the properties below are optional\n  mappingEnabled: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BlockDevice",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 8
      },
      "name": "BlockDevice",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Supply a value like `/dev/sdh`, `xvdh`.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html",
            "stability": "stable",
            "summary": "The device name exposed to the EC2 instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 16
          },
          "name": "deviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true - device mapping is left untouched",
            "deprecated": "use `BlockDeviceVolume.noDevice()` as the volume to supress a mapping.",
            "remarks": "If set to false for the root device, the instance might fail the Amazon EC2 health check.\nAmazon EC2 Auto Scaling launches a replacement instance if the instance fails the health check.",
            "stability": "deprecated",
            "summary": "If false, the device mapping will be suppressed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 34
          },
          "name": "mappingEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Supply a value like `BlockDeviceVolume.ebs(15)`, `BlockDeviceVolume.ephemeral(0)`.",
            "stability": "stable",
            "summary": "Defines the block device volume, to be either an Amazon EBS volume or an ephemeral instance store volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 23
          },
          "name": "volume",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.BlockDeviceVolume"
          }
        }
      ],
      "symbolId": "lib/volume:BlockDevice"
    },
    "@aws-cdk/aws-autoscaling.BlockDeviceVolume": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Describes a block device mapping for an EC2 instance or Auto Scaling group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst blockDeviceVolume = autoscaling.BlockDeviceVolume.ebs(123, /* all optional props */ {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BlockDeviceVolume",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/volume.ts",
          "line": 166
        },
        "parameters": [
          {
            "docs": {
              "summary": "EBS device info."
            },
            "name": "ebsDevice",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceProps"
            }
          },
          {
            "docs": {
              "summary": "Virtual device name."
            },
            "name": "virtualName",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 115
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a new Elastic Block Storage device."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 127
          },
          "name": "ebs",
          "parameters": [
            {
              "docs": {
                "summary": "The volume size, in Gibibytes (GiB)."
              },
              "name": "volumeSize",
              "type": {
                "primitive": "number"
              }
            },
            {
              "docs": {
                "summary": "additional device options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.BlockDeviceVolume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a new Elastic Block Storage device from an existing snapshot."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 137
          },
          "name": "ebsFromSnapshot",
          "parameters": [
            {
              "docs": {
                "summary": "The snapshot ID of the volume to use."
              },
              "name": "snapshotId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "additional device options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceSnapshotOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.BlockDeviceVolume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The name will be in the form ephemeral{volumeIndex}.",
            "stability": "stable",
            "summary": "Creates a virtual, ephemeral device."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 147
          },
          "name": "ephemeral",
          "parameters": [
            {
              "docs": {
                "remarks": "Must be equal or greater than 0",
                "summary": "the volume index."
              },
              "name": "volumeIndex",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.BlockDeviceVolume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Supresses a volume mapping."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 158
          },
          "name": "noDevice",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.BlockDeviceVolume"
            }
          },
          "static": true
        }
      ],
      "name": "BlockDeviceVolume",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "EBS device info."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 166
          },
          "name": "ebsDevice",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceProps"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Virtual device name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 166
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/volume:BlockDeviceVolume"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AutoScaling::AutoScalingGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::AutoScaling::AutoScalingGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst cfnAutoScalingGroup = new autoscaling.CfnAutoScalingGroup(this, 'MyCfnAutoScalingGroup', {\n  maxSize: 'maxSize',\n  minSize: 'minSize',\n\n  // the properties below are optional\n  autoScalingGroupName: 'autoScalingGroupName',\n  availabilityZones: ['availabilityZones'],\n  capacityRebalance: false,\n  context: 'context',\n  cooldown: 'cooldown',\n  desiredCapacity: 'desiredCapacity',\n  desiredCapacityType: 'desiredCapacityType',\n  healthCheckGracePeriod: 123,\n  healthCheckType: 'healthCheckType',\n  instanceId: 'instanceId',\n  launchConfigurationName: 'launchConfigurationName',\n  launchTemplate: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  lifecycleHookSpecificationList: [{\n    lifecycleHookName: 'lifecycleHookName',\n    lifecycleTransition: 'lifecycleTransition',\n\n    // the properties below are optional\n    defaultResult: 'defaultResult',\n    heartbeatTimeout: 123,\n    notificationMetadata: 'notificationMetadata',\n    notificationTargetArn: 'notificationTargetArn',\n    roleArn: 'roleArn',\n  }],\n  loadBalancerNames: ['loadBalancerNames'],\n  maxInstanceLifetime: 123,\n  metricsCollection: [{\n    granularity: 'granularity',\n\n    // the properties below are optional\n    metrics: ['metrics'],\n  }],\n  mixedInstancesPolicy: {\n    launchTemplate: {\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n\n      // the properties below are optional\n      overrides: [{\n        instanceRequirements: {\n          acceleratorCount: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorManufacturers: ['acceleratorManufacturers'],\n          acceleratorNames: ['acceleratorNames'],\n          acceleratorTotalMemoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorTypes: ['acceleratorTypes'],\n          bareMetal: 'bareMetal',\n          baselineEbsBandwidthMbps: {\n            max: 123,\n            min: 123,\n          },\n          burstablePerformance: 'burstablePerformance',\n          cpuManufacturers: ['cpuManufacturers'],\n          excludedInstanceTypes: ['excludedInstanceTypes'],\n          instanceGenerations: ['instanceGenerations'],\n          localStorage: 'localStorage',\n          localStorageTypes: ['localStorageTypes'],\n          memoryGiBPerVCpu: {\n            max: 123,\n            min: 123,\n          },\n          memoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          networkInterfaceCount: {\n            max: 123,\n            min: 123,\n          },\n          onDemandMaxPricePercentageOverLowestPrice: 123,\n          requireHibernateSupport: false,\n          spotMaxPricePercentageOverLowestPrice: 123,\n          totalLocalStorageGb: {\n            max: 123,\n            min: 123,\n          },\n          vCpuCount: {\n            max: 123,\n            min: 123,\n          },\n        },\n        instanceType: 'instanceType',\n        launchTemplateSpecification: {\n          version: 'version',\n\n          // the properties below are optional\n          launchTemplateId: 'launchTemplateId',\n          launchTemplateName: 'launchTemplateName',\n        },\n        weightedCapacity: 'weightedCapacity',\n      }],\n    },\n\n    // the properties below are optional\n    instancesDistribution: {\n      onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n      onDemandBaseCapacity: 123,\n      onDemandPercentageAboveBaseCapacity: 123,\n      spotAllocationStrategy: 'spotAllocationStrategy',\n      spotInstancePools: 123,\n      spotMaxPrice: 'spotMaxPrice',\n    },\n  },\n  newInstancesProtectedFromScaleIn: false,\n  notificationConfigurations: [{\n    topicArn: 'topicArn',\n\n    // the properties below are optional\n    notificationTypes: ['notificationTypes'],\n  }],\n  placementGroup: 'placementGroup',\n  serviceLinkedRoleArn: 'serviceLinkedRoleArn',\n  tags: [{\n    key: 'key',\n    propagateAtLaunch: false,\n    value: 'value',\n  }],\n  targetGroupArns: ['targetGroupArns'],\n  terminationPolicies: ['terminationPolicies'],\n  vpcZoneIdentifier: ['vpcZoneIdentifier'],\n});"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AutoScaling::AutoScalingGroup`."
        },
        "locationInModule": {
          "filename": "lib/autoscaling.generated.ts",
          "line": 508
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 314
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 548
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 585
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnAutoScalingGroup",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.AutoScalingGroupName`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 355
          },
          "name": "autoScalingGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-availabilityzones"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.AvailabilityZones`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 361
          },
          "name": "availabilityZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-capacityrebalance"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.CapacityRebalance`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 367
          },
          "name": "capacityRebalance",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 318
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 553
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-context"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.Context`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 373
          },
          "name": "context",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-cooldown"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.Cooldown`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 379
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.DesiredCapacity`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 385
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacitytype"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.DesiredCapacityType`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 391
          },
          "name": "desiredCapacityType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-healthcheckgraceperiod"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.HealthCheckGracePeriod`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 397
          },
          "name": "healthCheckGracePeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-healthchecktype"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.HealthCheckType`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 403
          },
          "name": "healthCheckType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.InstanceId`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 409
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-launchconfigurationname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.LaunchConfigurationName`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 415
          },
          "name": "launchConfigurationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-launchtemplate"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.LaunchTemplate`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 421
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecificationlist"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.LifecycleHookSpecificationList`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 427
          },
          "name": "lifecycleHookSpecificationList",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-loadbalancernames"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.LoadBalancerNames`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 433
          },
          "name": "loadBalancerNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-maxinstancelifetime"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.MaxInstanceLifetime`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 439
          },
          "name": "maxInstanceLifetime",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-maxsize"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.MaxSize`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 343
          },
          "name": "maxSize",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-metricscollection"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.MetricsCollection`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 445
          },
          "name": "metricsCollection",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-minsize"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.MinSize`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 349
          },
          "name": "minSize",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-mixedinstancespolicy"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.MixedInstancesPolicy`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 451
          },
          "name": "mixedInstancesPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-newinstancesprotectedfromscalein"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.NewInstancesProtectedFromScaleIn`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 457
          },
          "name": "newInstancesProtectedFromScaleIn",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.NotificationConfigurations`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 463
          },
          "name": "notificationConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-placementgroup"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.PlacementGroup`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 469
          },
          "name": "placementGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-servicelinkedrolearn"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.ServiceLinkedRoleARN`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 475
          },
          "name": "serviceLinkedRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-tags"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 481
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-targetgrouparns"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.TargetGroupARNs`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 487
          },
          "name": "targetGroupArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-termpolicy"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.TerminationPolicies`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 493
          },
          "name": "terminationPolicies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-vpczoneidentifier"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.VPCZoneIdentifier`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 499
          },
          "name": "vpcZoneIdentifier",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-acceleratorcountrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst acceleratorCountRequestProperty: autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 595
      },
      "name": "AcceleratorCountRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-acceleratorcountrequest.html#cfn-autoscaling-autoscalinggroup-acceleratorcountrequest-max"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.AcceleratorCountRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 600
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-acceleratorcountrequest.html#cfn-autoscaling-autoscalinggroup-acceleratorcountrequest-min"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.AcceleratorCountRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 605
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.AcceleratorCountRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-acceleratortotalmemorymibrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst acceleratorTotalMemoryMiBRequestProperty: autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 665
      },
      "name": "AcceleratorTotalMemoryMiBRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-acceleratortotalmemorymibrequest.html#cfn-autoscaling-autoscalinggroup-acceleratortotalmemorymibrequest-max"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 670
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-acceleratortotalmemorymibrequest.html#cfn-autoscaling-autoscalinggroup-acceleratortotalmemorymibrequest-min"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 675
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-baselineebsbandwidthmbpsrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst baselineEbsBandwidthMbpsRequestProperty: autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 735
      },
      "name": "BaselineEbsBandwidthMbpsRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-baselineebsbandwidthmbpsrequest.html#cfn-autoscaling-autoscalinggroup-baselineebsbandwidthmbpsrequest-max"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 740
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-baselineebsbandwidthmbpsrequest.html#cfn-autoscaling-autoscalinggroup-baselineebsbandwidthmbpsrequest-min"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 745
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst instanceRequirementsProperty: autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty = {\n  acceleratorCount: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorManufacturers: ['acceleratorManufacturers'],\n  acceleratorNames: ['acceleratorNames'],\n  acceleratorTotalMemoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorTypes: ['acceleratorTypes'],\n  bareMetal: 'bareMetal',\n  baselineEbsBandwidthMbps: {\n    max: 123,\n    min: 123,\n  },\n  burstablePerformance: 'burstablePerformance',\n  cpuManufacturers: ['cpuManufacturers'],\n  excludedInstanceTypes: ['excludedInstanceTypes'],\n  instanceGenerations: ['instanceGenerations'],\n  localStorage: 'localStorage',\n  localStorageTypes: ['localStorageTypes'],\n  memoryGiBPerVCpu: {\n    max: 123,\n    min: 123,\n  },\n  memoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  networkInterfaceCount: {\n    max: 123,\n    min: 123,\n  },\n  onDemandMaxPricePercentageOverLowestPrice: 123,\n  requireHibernateSupport: false,\n  spotMaxPricePercentageOverLowestPrice: 123,\n  totalLocalStorageGb: {\n    max: 123,\n    min: 123,\n  },\n  vCpuCount: {\n    max: 123,\n    min: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 805
      },
      "name": "InstanceRequirementsProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-acceleratorcount"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.AcceleratorCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 810
          },
          "name": "acceleratorCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-acceleratormanufacturers"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.AcceleratorManufacturers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 815
          },
          "name": "acceleratorManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-acceleratornames"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.AcceleratorNames`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 820
          },
          "name": "acceleratorNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-acceleratortotalmemorymib"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.AcceleratorTotalMemoryMiB`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 825
          },
          "name": "acceleratorTotalMemoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-acceleratortypes"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.AcceleratorTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 830
          },
          "name": "acceleratorTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-baremetal"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.BareMetal`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 835
          },
          "name": "bareMetal",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-baselineebsbandwidthmbps"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.BaselineEbsBandwidthMbps`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 840
          },
          "name": "baselineEbsBandwidthMbps",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-burstableperformance"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.BurstablePerformance`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 845
          },
          "name": "burstablePerformance",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-cpumanufacturers"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.CpuManufacturers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 850
          },
          "name": "cpuManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-excludedinstancetypes"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.ExcludedInstanceTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 855
          },
          "name": "excludedInstanceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-instancegenerations"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.InstanceGenerations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 860
          },
          "name": "instanceGenerations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-localstorage"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.LocalStorage`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 865
          },
          "name": "localStorage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-localstoragetypes"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.LocalStorageTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 870
          },
          "name": "localStorageTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-memorygibpervcpu"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.MemoryGiBPerVCpu`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 875
          },
          "name": "memoryGiBPerVCpu",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-memorymib"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.MemoryMiB`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 880
          },
          "name": "memoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-networkinterfacecount"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.NetworkInterfaceCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 885
          },
          "name": "networkInterfaceCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-ondemandmaxpricepercentageoverlowestprice"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.OnDemandMaxPricePercentageOverLowestPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 890
          },
          "name": "onDemandMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-requirehibernatesupport"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.RequireHibernateSupport`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 895
          },
          "name": "requireHibernateSupport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-spotmaxpricepercentageoverlowestprice"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.SpotMaxPricePercentageOverLowestPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 900
          },
          "name": "spotMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-totallocalstoragegb"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.TotalLocalStorageGB`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 905
          },
          "name": "totalLocalStorageGb",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-vcpucount"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstanceRequirementsProperty.VCpuCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 910
          },
          "name": "vCpuCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.InstanceRequirementsProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst instancesDistributionProperty: autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty = {\n  onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n  onDemandBaseCapacity: 123,\n  onDemandPercentageAboveBaseCapacity: 123,\n  spotAllocationStrategy: 'spotAllocationStrategy',\n  spotInstancePools: 123,\n  spotMaxPrice: 'spotMaxPrice',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1027
      },
      "name": "InstancesDistributionProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-ondemandallocationstrategy"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstancesDistributionProperty.OnDemandAllocationStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1032
          },
          "name": "onDemandAllocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-ondemandbasecapacity"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstancesDistributionProperty.OnDemandBaseCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1037
          },
          "name": "onDemandBaseCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-ondemandpercentageabovebasecapacity"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstancesDistributionProperty.OnDemandPercentageAboveBaseCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1042
          },
          "name": "onDemandPercentageAboveBaseCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-spotallocationstrategy"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstancesDistributionProperty.SpotAllocationStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1047
          },
          "name": "spotAllocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-spotinstancepools"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstancesDistributionProperty.SpotInstancePools`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1052
          },
          "name": "spotInstancePools",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-spotmaxprice"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.InstancesDistributionProperty.SpotMaxPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1057
          },
          "name": "spotMaxPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.InstancesDistributionProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst launchTemplateOverridesProperty: autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty = {\n  instanceRequirements: {\n    acceleratorCount: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorManufacturers: ['acceleratorManufacturers'],\n    acceleratorNames: ['acceleratorNames'],\n    acceleratorTotalMemoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorTypes: ['acceleratorTypes'],\n    bareMetal: 'bareMetal',\n    baselineEbsBandwidthMbps: {\n      max: 123,\n      min: 123,\n    },\n    burstablePerformance: 'burstablePerformance',\n    cpuManufacturers: ['cpuManufacturers'],\n    excludedInstanceTypes: ['excludedInstanceTypes'],\n    instanceGenerations: ['instanceGenerations'],\n    localStorage: 'localStorage',\n    localStorageTypes: ['localStorageTypes'],\n    memoryGiBPerVCpu: {\n      max: 123,\n      min: 123,\n    },\n    memoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    networkInterfaceCount: {\n      max: 123,\n      min: 123,\n    },\n    onDemandMaxPricePercentageOverLowestPrice: 123,\n    requireHibernateSupport: false,\n    spotMaxPricePercentageOverLowestPrice: 123,\n    totalLocalStorageGb: {\n      max: 123,\n      min: 123,\n    },\n    vCpuCount: {\n      max: 123,\n      min: 123,\n    },\n  },\n  instanceType: 'instanceType',\n  launchTemplateSpecification: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  weightedCapacity: 'weightedCapacity',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1200
      },
      "name": "LaunchTemplateOverridesProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-as-mixedinstancespolicy-instancerequirements"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LaunchTemplateOverridesProperty.InstanceRequirements`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1205
          },
          "name": "instanceRequirements",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-autoscaling-autoscalinggroup-launchtemplateoverrides-instancetype"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LaunchTemplateOverridesProperty.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1210
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-autoscaling-autoscalinggroup-launchtemplateoverrides-launchtemplatespecification"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LaunchTemplateOverridesProperty.LaunchTemplateSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1215
          },
          "name": "launchTemplateSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-autoscaling-autoscalinggroup-launchtemplateoverrides-weightedcapacity"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LaunchTemplateOverridesProperty.WeightedCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1220
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.LaunchTemplateOverridesProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplate.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst launchTemplateProperty: autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty = {\n  launchTemplateSpecification: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n\n  // the properties below are optional\n  overrides: [{\n    instanceRequirements: {\n      acceleratorCount: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorManufacturers: ['acceleratorManufacturers'],\n      acceleratorNames: ['acceleratorNames'],\n      acceleratorTotalMemoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorTypes: ['acceleratorTypes'],\n      bareMetal: 'bareMetal',\n      baselineEbsBandwidthMbps: {\n        max: 123,\n        min: 123,\n      },\n      burstablePerformance: 'burstablePerformance',\n      cpuManufacturers: ['cpuManufacturers'],\n      excludedInstanceTypes: ['excludedInstanceTypes'],\n      instanceGenerations: ['instanceGenerations'],\n      localStorage: 'localStorage',\n      localStorageTypes: ['localStorageTypes'],\n      memoryGiBPerVCpu: {\n        max: 123,\n        min: 123,\n      },\n      memoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      networkInterfaceCount: {\n        max: 123,\n        min: 123,\n      },\n      onDemandMaxPricePercentageOverLowestPrice: 123,\n      requireHibernateSupport: false,\n      spotMaxPricePercentageOverLowestPrice: 123,\n      totalLocalStorageGb: {\n        max: 123,\n        min: 123,\n      },\n      vCpuCount: {\n        max: 123,\n        min: 123,\n      },\n    },\n    instanceType: 'instanceType',\n    launchTemplateSpecification: {\n      version: 'version',\n\n      // the properties below are optional\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n    },\n    weightedCapacity: 'weightedCapacity',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1129
      },
      "name": "LaunchTemplateProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplate.html#cfn-as-group-launchtemplate"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LaunchTemplateProperty.LaunchTemplateSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1134
          },
          "name": "launchTemplateSpecification",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplate.html#cfn-as-mixedinstancespolicy-overrides"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LaunchTemplateProperty.Overrides`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1139
          },
          "name": "overrides",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.LaunchTemplateProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst launchTemplateSpecificationProperty: autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty = {\n  version: 'version',\n\n  // the properties below are optional\n  launchTemplateId: 'launchTemplateId',\n  launchTemplateName: 'launchTemplateName',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1286
      },
      "name": "LaunchTemplateSpecificationProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html#cfn-autoscaling-autoscalinggroup-launchtemplatespecification-launchtemplateid"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LaunchTemplateSpecificationProperty.LaunchTemplateId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1291
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html#cfn-autoscaling-autoscalinggroup-launchtemplatespecification-launchtemplatename"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LaunchTemplateSpecificationProperty.LaunchTemplateName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1296
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html#cfn-autoscaling-autoscalinggroup-launchtemplatespecification-version"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LaunchTemplateSpecificationProperty.Version`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1301
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.LaunchTemplateSpecificationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst lifecycleHookSpecificationProperty: autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty = {\n  lifecycleHookName: 'lifecycleHookName',\n  lifecycleTransition: 'lifecycleTransition',\n\n  // the properties below are optional\n  defaultResult: 'defaultResult',\n  heartbeatTimeout: 123,\n  notificationMetadata: 'notificationMetadata',\n  notificationTargetArn: 'notificationTargetArn',\n  roleArn: 'roleArn',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1365
      },
      "name": "LifecycleHookSpecificationProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-defaultresult"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LifecycleHookSpecificationProperty.DefaultResult`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1370
          },
          "name": "defaultResult",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-heartbeattimeout"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LifecycleHookSpecificationProperty.HeartbeatTimeout`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1375
          },
          "name": "heartbeatTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-lifecyclehookname"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LifecycleHookSpecificationProperty.LifecycleHookName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1380
          },
          "name": "lifecycleHookName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-lifecycletransition"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LifecycleHookSpecificationProperty.LifecycleTransition`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1385
          },
          "name": "lifecycleTransition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-notificationmetadata"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LifecycleHookSpecificationProperty.NotificationMetadata`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1390
          },
          "name": "notificationMetadata",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-notificationtargetarn"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LifecycleHookSpecificationProperty.NotificationTargetARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1395
          },
          "name": "notificationTargetArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-rolearn"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.LifecycleHookSpecificationProperty.RoleARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1400
          },
          "name": "roleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.LifecycleHookSpecificationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-memorygibpervcpurequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst memoryGiBPerVCpuRequestProperty: autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1477
      },
      "name": "MemoryGiBPerVCpuRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-memorygibpervcpurequest.html#cfn-autoscaling-autoscalinggroup-memorygibpervcpurequest-max"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1482
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-memorygibpervcpurequest.html#cfn-autoscaling-autoscalinggroup-memorygibpervcpurequest-min"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1487
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-memorymibrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst memoryMiBRequestProperty: autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1547
      },
      "name": "MemoryMiBRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-memorymibrequest.html#cfn-autoscaling-autoscalinggroup-memorymibrequest-max"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.MemoryMiBRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1552
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-memorymibrequest.html#cfn-autoscaling-autoscalinggroup-memorymibrequest-min"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.MemoryMiBRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1557
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.MemoryMiBRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst metricsCollectionProperty: autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty = {\n  granularity: 'granularity',\n\n  // the properties below are optional\n  metrics: ['metrics'],\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1617
      },
      "name": "MetricsCollectionProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html#cfn-as-metricscollection-granularity"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.MetricsCollectionProperty.Granularity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1622
          },
          "name": "granularity",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html#cfn-as-metricscollection-metrics"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.MetricsCollectionProperty.Metrics`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1627
          },
          "name": "metrics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.MetricsCollectionProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-group-mixedinstancespolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst mixedInstancesPolicyProperty: autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty = {\n  launchTemplate: {\n    launchTemplateSpecification: {\n      version: 'version',\n\n      // the properties below are optional\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n    },\n\n    // the properties below are optional\n    overrides: [{\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n      weightedCapacity: 'weightedCapacity',\n    }],\n  },\n\n  // the properties below are optional\n  instancesDistribution: {\n    onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n    onDemandBaseCapacity: 123,\n    onDemandPercentageAboveBaseCapacity: 123,\n    spotAllocationStrategy: 'spotAllocationStrategy',\n    spotInstancePools: 123,\n    spotMaxPrice: 'spotMaxPrice',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1688
      },
      "name": "MixedInstancesPolicyProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-group-mixedinstancespolicy.html#cfn-as-mixedinstancespolicy-instancesdistribution"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.MixedInstancesPolicyProperty.InstancesDistribution`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1693
          },
          "name": "instancesDistribution",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-group-mixedinstancespolicy.html#cfn-as-mixedinstancespolicy-launchtemplate"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.MixedInstancesPolicyProperty.LaunchTemplate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1698
          },
          "name": "launchTemplate",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.MixedInstancesPolicyProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-networkinterfacecountrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst networkInterfaceCountRequestProperty: autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1759
      },
      "name": "NetworkInterfaceCountRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-networkinterfacecountrequest.html#cfn-autoscaling-autoscalinggroup-networkinterfacecountrequest-max"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1764
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-networkinterfacecountrequest.html#cfn-autoscaling-autoscalinggroup-networkinterfacecountrequest-min"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1769
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst notificationConfigurationProperty: autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty = {\n  topicArn: 'topicArn',\n\n  // the properties below are optional\n  notificationTypes: ['notificationTypes'],\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1829
      },
      "name": "NotificationConfigurationProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html#cfn-as-group-notificationconfigurations-notificationtypes"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.NotificationConfigurationProperty.NotificationTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1834
          },
          "name": "notificationTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html#cfn-autoscaling-autoscalinggroup-notificationconfigurations-topicarn"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.NotificationConfigurationProperty.TopicARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1839
          },
          "name": "topicArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.NotificationConfigurationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TagPropertyProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst tagPropertyProperty: autoscaling.CfnAutoScalingGroup.TagPropertyProperty = {\n  key: 'key',\n  propagateAtLaunch: false,\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TagPropertyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1900
      },
      "name": "TagPropertyProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html#cfn-as-tags-Key"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.TagPropertyProperty.Key`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1905
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html#cfn-as-tags-PropagateAtLaunch"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.TagPropertyProperty.PropagateAtLaunch`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1910
          },
          "name": "propagateAtLaunch",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html#cfn-as-tags-Value"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.TagPropertyProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1915
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.TagPropertyProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-totallocalstoragegbrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst totalLocalStorageGBRequestProperty: autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1981
      },
      "name": "TotalLocalStorageGBRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-totallocalstoragegbrequest.html#cfn-autoscaling-autoscalinggroup-totallocalstoragegbrequest-max"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1986
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-totallocalstoragegbrequest.html#cfn-autoscaling-autoscalinggroup-totallocalstoragegbrequest-min"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1991
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-vcpucountrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst vCpuCountRequestProperty: autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2051
      },
      "name": "VCpuCountRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-vcpucountrequest.html#cfn-autoscaling-autoscalinggroup-vcpucountrequest-max"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.VCpuCountRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2056
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-vcpucountrequest.html#cfn-autoscaling-autoscalinggroup-vcpucountrequest-min"
            },
            "stability": "external",
            "summary": "`CfnAutoScalingGroup.VCpuCountRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2061
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.VCpuCountRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroupProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::AutoScaling::AutoScalingGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst cfnAutoScalingGroupProps: autoscaling.CfnAutoScalingGroupProps = {\n  maxSize: 'maxSize',\n  minSize: 'minSize',\n\n  // the properties below are optional\n  autoScalingGroupName: 'autoScalingGroupName',\n  availabilityZones: ['availabilityZones'],\n  capacityRebalance: false,\n  context: 'context',\n  cooldown: 'cooldown',\n  desiredCapacity: 'desiredCapacity',\n  desiredCapacityType: 'desiredCapacityType',\n  healthCheckGracePeriod: 123,\n  healthCheckType: 'healthCheckType',\n  instanceId: 'instanceId',\n  launchConfigurationName: 'launchConfigurationName',\n  launchTemplate: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  lifecycleHookSpecificationList: [{\n    lifecycleHookName: 'lifecycleHookName',\n    lifecycleTransition: 'lifecycleTransition',\n\n    // the properties below are optional\n    defaultResult: 'defaultResult',\n    heartbeatTimeout: 123,\n    notificationMetadata: 'notificationMetadata',\n    notificationTargetArn: 'notificationTargetArn',\n    roleArn: 'roleArn',\n  }],\n  loadBalancerNames: ['loadBalancerNames'],\n  maxInstanceLifetime: 123,\n  metricsCollection: [{\n    granularity: 'granularity',\n\n    // the properties below are optional\n    metrics: ['metrics'],\n  }],\n  mixedInstancesPolicy: {\n    launchTemplate: {\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n\n      // the properties below are optional\n      overrides: [{\n        instanceRequirements: {\n          acceleratorCount: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorManufacturers: ['acceleratorManufacturers'],\n          acceleratorNames: ['acceleratorNames'],\n          acceleratorTotalMemoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorTypes: ['acceleratorTypes'],\n          bareMetal: 'bareMetal',\n          baselineEbsBandwidthMbps: {\n            max: 123,\n            min: 123,\n          },\n          burstablePerformance: 'burstablePerformance',\n          cpuManufacturers: ['cpuManufacturers'],\n          excludedInstanceTypes: ['excludedInstanceTypes'],\n          instanceGenerations: ['instanceGenerations'],\n          localStorage: 'localStorage',\n          localStorageTypes: ['localStorageTypes'],\n          memoryGiBPerVCpu: {\n            max: 123,\n            min: 123,\n          },\n          memoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          networkInterfaceCount: {\n            max: 123,\n            min: 123,\n          },\n          onDemandMaxPricePercentageOverLowestPrice: 123,\n          requireHibernateSupport: false,\n          spotMaxPricePercentageOverLowestPrice: 123,\n          totalLocalStorageGb: {\n            max: 123,\n            min: 123,\n          },\n          vCpuCount: {\n            max: 123,\n            min: 123,\n          },\n        },\n        instanceType: 'instanceType',\n        launchTemplateSpecification: {\n          version: 'version',\n\n          // the properties below are optional\n          launchTemplateId: 'launchTemplateId',\n          launchTemplateName: 'launchTemplateName',\n        },\n        weightedCapacity: 'weightedCapacity',\n      }],\n    },\n\n    // the properties below are optional\n    instancesDistribution: {\n      onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n      onDemandBaseCapacity: 123,\n      onDemandPercentageAboveBaseCapacity: 123,\n      spotAllocationStrategy: 'spotAllocationStrategy',\n      spotInstancePools: 123,\n      spotMaxPrice: 'spotMaxPrice',\n    },\n  },\n  newInstancesProtectedFromScaleIn: false,\n  notificationConfigurations: [{\n    topicArn: 'topicArn',\n\n    // the properties below are optional\n    notificationTypes: ['notificationTypes'],\n  }],\n  placementGroup: 'placementGroup',\n  serviceLinkedRoleArn: 'serviceLinkedRoleArn',\n  tags: [{\n    key: 'key',\n    propagateAtLaunch: false,\n    value: 'value',\n  }],\n  targetGroupArns: ['targetGroupArns'],\n  terminationPolicies: ['terminationPolicies'],\n  vpcZoneIdentifier: ['vpcZoneIdentifier'],\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 17
      },
      "name": "CfnAutoScalingGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.AutoScalingGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 35
          },
          "name": "autoScalingGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-availabilityzones"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.AvailabilityZones`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 41
          },
          "name": "availabilityZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-capacityrebalance"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.CapacityRebalance`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 47
          },
          "name": "capacityRebalance",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-context"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.Context`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 53
          },
          "name": "context",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-cooldown"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.Cooldown`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 59
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.DesiredCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 65
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacitytype"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.DesiredCapacityType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 71
          },
          "name": "desiredCapacityType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-healthcheckgraceperiod"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.HealthCheckGracePeriod`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 77
          },
          "name": "healthCheckGracePeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-healthchecktype"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.HealthCheckType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 83
          },
          "name": "healthCheckType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.InstanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 89
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-launchconfigurationname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.LaunchConfigurationName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 95
          },
          "name": "launchConfigurationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-launchtemplate"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.LaunchTemplate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 101
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecificationlist"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.LifecycleHookSpecificationList`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 107
          },
          "name": "lifecycleHookSpecificationList",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-loadbalancernames"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.LoadBalancerNames`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 113
          },
          "name": "loadBalancerNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-maxinstancelifetime"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.MaxInstanceLifetime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 119
          },
          "name": "maxInstanceLifetime",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-maxsize"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.MaxSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 23
          },
          "name": "maxSize",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-metricscollection"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.MetricsCollection`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 125
          },
          "name": "metricsCollection",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-minsize"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.MinSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 29
          },
          "name": "minSize",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-mixedinstancespolicy"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.MixedInstancesPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 131
          },
          "name": "mixedInstancesPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-newinstancesprotectedfromscalein"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.NewInstancesProtectedFromScaleIn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 137
          },
          "name": "newInstancesProtectedFromScaleIn",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.NotificationConfigurations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 143
          },
          "name": "notificationConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-placementgroup"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.PlacementGroup`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 149
          },
          "name": "placementGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-servicelinkedrolearn"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.ServiceLinkedRoleARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 155
          },
          "name": "serviceLinkedRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-tags"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 161
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TagPropertyProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-targetgrouparns"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.TargetGroupARNs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 167
          },
          "name": "targetGroupArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-termpolicy"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.TerminationPolicies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 173
          },
          "name": "terminationPolicies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-vpczoneidentifier"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::AutoScalingGroup.VPCZoneIdentifier`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 179
          },
          "name": "vpcZoneIdentifier",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroupProps"
    },
    "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AutoScaling::LaunchConfiguration",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::AutoScaling::LaunchConfiguration`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst cfnLaunchConfiguration = new autoscaling.CfnLaunchConfiguration(this, 'MyCfnLaunchConfiguration', {\n  imageId: 'imageId',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  associatePublicIpAddress: false,\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      snapshotId: 'snapshotId',\n      throughput: 123,\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: false,\n    virtualName: 'virtualName',\n  }],\n  classicLinkVpcId: 'classicLinkVpcId',\n  classicLinkVpcSecurityGroups: ['classicLinkVpcSecurityGroups'],\n  ebsOptimized: false,\n  iamInstanceProfile: 'iamInstanceProfile',\n  instanceId: 'instanceId',\n  instanceMonitoring: false,\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  launchConfigurationName: 'launchConfigurationName',\n  metadataOptions: {\n    httpEndpoint: 'httpEndpoint',\n    httpPutResponseHopLimit: 123,\n    httpTokens: 'httpTokens',\n  },\n  placementTenancy: 'placementTenancy',\n  ramDiskId: 'ramDiskId',\n  securityGroups: ['securityGroups'],\n  spotPrice: 'spotPrice',\n  userData: 'userData',\n});"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AutoScaling::LaunchConfiguration`."
        },
        "locationInModule": {
          "filename": "lib/autoscaling.generated.ts",
          "line": 2493
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfigurationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2347
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2525
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2554
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLaunchConfiguration",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cf-as-launchconfig-associatepubip"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.AssociatePublicIpAddress`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2388
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-blockdevicemappings"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.BlockDeviceMappings`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2394
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2351
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2530
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-classiclinkvpcid"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.ClassicLinkVPCId`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2400
          },
          "name": "classicLinkVpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-classiclinkvpcsecuritygroups"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.ClassicLinkVPCSecurityGroups`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2406
          },
          "name": "classicLinkVpcSecurityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-ebsoptimized"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.EbsOptimized`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2412
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-iaminstanceprofile"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.IamInstanceProfile`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2418
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-imageid"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.ImageId`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2376
          },
          "name": "imageId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.InstanceId`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2424
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-instancemonitoring"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.InstanceMonitoring`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2430
          },
          "name": "instanceMonitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-instancetype"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.InstanceType`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2382
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-kernelid"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.KernelId`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2436
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-keyname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.KeyName`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2442
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-autoscaling-launchconfig-launchconfigurationname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.LaunchConfigurationName`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2448
          },
          "name": "launchConfigurationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-autoscaling-launchconfig-metadataoptions"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.MetadataOptions`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2454
          },
          "name": "metadataOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-placementtenancy"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.PlacementTenancy`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2460
          },
          "name": "placementTenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-ramdiskid"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.RamDiskId`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2466
          },
          "name": "ramDiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-securitygroups"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.SecurityGroups`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2472
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-spotprice"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.SpotPrice`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2478
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-userdata"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.UserData`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2484
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLaunchConfiguration"
    },
    "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst blockDeviceMappingProperty: autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty = {\n  deviceName: 'deviceName',\n\n  // the properties below are optional\n  ebs: {\n    deleteOnTermination: false,\n    encrypted: false,\n    iops: 123,\n    snapshotId: 'snapshotId',\n    throughput: 123,\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  noDevice: false,\n  virtualName: 'virtualName',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2674
      },
      "name": "BlockDeviceMappingProperty",
      "namespace": "CfnLaunchConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html#cfn-as-launchconfig-blockdev-mapping-devicename"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.BlockDeviceMappingProperty.DeviceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2679
          },
          "name": "deviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html#cfn-as-launchconfig-blockdev-mapping-ebs"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.BlockDeviceMappingProperty.Ebs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2684
          },
          "name": "ebs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html#cfn-as-launchconfig-blockdev-mapping-nodevice"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.BlockDeviceMappingProperty.NoDevice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2689
          },
          "name": "noDevice",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html#cfn-as-launchconfig-blockdev-mapping-virtualname"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.BlockDeviceMappingProperty.VirtualName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2694
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLaunchConfiguration.BlockDeviceMappingProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst blockDeviceProperty: autoscaling.CfnLaunchConfiguration.BlockDeviceProperty = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  snapshotId: 'snapshotId',\n  throughput: 123,\n  volumeSize: 123,\n  volumeType: 'volumeType',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2564
      },
      "name": "BlockDeviceProperty",
      "namespace": "CfnLaunchConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-deleteonterm"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.BlockDeviceProperty.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2569
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-encrypted"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.BlockDeviceProperty.Encrypted`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2574
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-iops"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.BlockDeviceProperty.Iops`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2579
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-snapshotid"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.BlockDeviceProperty.SnapshotId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2584
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-throughput"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.BlockDeviceProperty.Throughput`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2589
          },
          "name": "throughput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-volumesize"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.BlockDeviceProperty.VolumeSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2594
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-volumetype"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.BlockDeviceProperty.VolumeType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2599
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLaunchConfiguration.BlockDeviceProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfig-metadataoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst metadataOptionsProperty: autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty = {\n  httpEndpoint: 'httpEndpoint',\n  httpPutResponseHopLimit: 123,\n  httpTokens: 'httpTokens',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2761
      },
      "name": "MetadataOptionsProperty",
      "namespace": "CfnLaunchConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfig-metadataoptions.html#cfn-autoscaling-launchconfig-metadataoptions-httpendpoint"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.MetadataOptionsProperty.HttpEndpoint`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2766
          },
          "name": "httpEndpoint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfig-metadataoptions.html#cfn-autoscaling-launchconfig-metadataoptions-httpputresponsehoplimit"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.MetadataOptionsProperty.HttpPutResponseHopLimit`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2771
          },
          "name": "httpPutResponseHopLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfig-metadataoptions.html#cfn-autoscaling-launchconfig-metadataoptions-httptokens"
            },
            "stability": "external",
            "summary": "`CfnLaunchConfiguration.MetadataOptionsProperty.HttpTokens`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2776
          },
          "name": "httpTokens",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLaunchConfiguration.MetadataOptionsProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnLaunchConfigurationProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::AutoScaling::LaunchConfiguration`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst cfnLaunchConfigurationProps: autoscaling.CfnLaunchConfigurationProps = {\n  imageId: 'imageId',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  associatePublicIpAddress: false,\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      snapshotId: 'snapshotId',\n      throughput: 123,\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: false,\n    virtualName: 'virtualName',\n  }],\n  classicLinkVpcId: 'classicLinkVpcId',\n  classicLinkVpcSecurityGroups: ['classicLinkVpcSecurityGroups'],\n  ebsOptimized: false,\n  iamInstanceProfile: 'iamInstanceProfile',\n  instanceId: 'instanceId',\n  instanceMonitoring: false,\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  launchConfigurationName: 'launchConfigurationName',\n  metadataOptions: {\n    httpEndpoint: 'httpEndpoint',\n    httpPutResponseHopLimit: 123,\n    httpTokens: 'httpTokens',\n  },\n  placementTenancy: 'placementTenancy',\n  ramDiskId: 'ramDiskId',\n  securityGroups: ['securityGroups'],\n  spotPrice: 'spotPrice',\n  userData: 'userData',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2122
      },
      "name": "CfnLaunchConfigurationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cf-as-launchconfig-associatepubip"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.AssociatePublicIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2140
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-blockdevicemappings"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.BlockDeviceMappings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2146
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-classiclinkvpcid"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.ClassicLinkVPCId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2152
          },
          "name": "classicLinkVpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-classiclinkvpcsecuritygroups"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.ClassicLinkVPCSecurityGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2158
          },
          "name": "classicLinkVpcSecurityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-ebsoptimized"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.EbsOptimized`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2164
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-iaminstanceprofile"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.IamInstanceProfile`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2170
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-imageid"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.ImageId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2128
          },
          "name": "imageId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.InstanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2176
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-instancemonitoring"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.InstanceMonitoring`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2182
          },
          "name": "instanceMonitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-instancetype"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2134
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-kernelid"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.KernelId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2188
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-keyname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.KeyName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2194
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-autoscaling-launchconfig-launchconfigurationname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.LaunchConfigurationName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2200
          },
          "name": "launchConfigurationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-autoscaling-launchconfig-metadataoptions"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.MetadataOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2206
          },
          "name": "metadataOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-placementtenancy"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.PlacementTenancy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2212
          },
          "name": "placementTenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-ramdiskid"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.RamDiskId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2218
          },
          "name": "ramDiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-securitygroups"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.SecurityGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2224
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-spotprice"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.SpotPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2230
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-userdata"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LaunchConfiguration.UserData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2236
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLaunchConfigurationProps"
    },
    "@aws-cdk/aws-autoscaling.CfnLifecycleHook": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AutoScaling::LifecycleHook",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::AutoScaling::LifecycleHook`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst cfnLifecycleHook = new autoscaling.CfnLifecycleHook(this, 'MyCfnLifecycleHook', {\n  autoScalingGroupName: 'autoScalingGroupName',\n  lifecycleTransition: 'lifecycleTransition',\n\n  // the properties below are optional\n  defaultResult: 'defaultResult',\n  heartbeatTimeout: 123,\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTargetArn: 'notificationTargetArn',\n  roleArn: 'roleArn',\n});"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLifecycleHook",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AutoScaling::LifecycleHook`."
        },
        "locationInModule": {
          "filename": "lib/autoscaling.generated.ts",
          "line": 3046
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.CfnLifecycleHookProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2966
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3067
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3085
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLifecycleHook",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.AutoScalingGroupName`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2995
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2970
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3072
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-defaultresult"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.DefaultResult`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3007
          },
          "name": "defaultResult",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-heartbeattimeout"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.HeartbeatTimeout`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3013
          },
          "name": "heartbeatTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-lifecyclehookname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.LifecycleHookName`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3019
          },
          "name": "lifecycleHookName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-lifecycletransition"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.LifecycleTransition`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3001
          },
          "name": "lifecycleTransition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-notificationmetadata"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.NotificationMetadata`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3025
          },
          "name": "notificationMetadata",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-notificationtargetarn"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.NotificationTargetARN`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3031
          },
          "name": "notificationTargetArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-rolearn"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.RoleARN`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3037
          },
          "name": "roleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLifecycleHook"
    },
    "@aws-cdk/aws-autoscaling.CfnLifecycleHookProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::AutoScaling::LifecycleHook`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst cfnLifecycleHookProps: autoscaling.CfnLifecycleHookProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n  lifecycleTransition: 'lifecycleTransition',\n\n  // the properties below are optional\n  defaultResult: 'defaultResult',\n  heartbeatTimeout: 123,\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTargetArn: 'notificationTargetArn',\n  roleArn: 'roleArn',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLifecycleHookProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2840
      },
      "name": "CfnLifecycleHookProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.AutoScalingGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2846
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-defaultresult"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.DefaultResult`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2858
          },
          "name": "defaultResult",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-heartbeattimeout"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.HeartbeatTimeout`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2864
          },
          "name": "heartbeatTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-lifecyclehookname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.LifecycleHookName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2870
          },
          "name": "lifecycleHookName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-lifecycletransition"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.LifecycleTransition`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2852
          },
          "name": "lifecycleTransition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-notificationmetadata"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.NotificationMetadata`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2876
          },
          "name": "notificationMetadata",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-notificationtargetarn"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.NotificationTargetARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2882
          },
          "name": "notificationTargetArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-rolearn"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::LifecycleHook.RoleARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2888
          },
          "name": "roleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLifecycleHookProps"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AutoScaling::ScalingPolicy",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::AutoScaling::ScalingPolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst cfnScalingPolicy = new autoscaling.CfnScalingPolicy(this, 'MyCfnScalingPolicy', {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  adjustmentType: 'adjustmentType',\n  cooldown: 'cooldown',\n  estimatedInstanceWarmup: 123,\n  metricAggregationType: 'metricAggregationType',\n  minAdjustmentMagnitude: 123,\n  policyType: 'policyType',\n  predictiveScalingConfiguration: {\n    metricSpecifications: [{\n      targetValue: 123,\n\n      // the properties below are optional\n      predefinedLoadMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedMetricPairSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedScalingMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n    }],\n\n    // the properties below are optional\n    maxCapacityBreachBehavior: 'maxCapacityBreachBehavior',\n    maxCapacityBuffer: 123,\n    mode: 'mode',\n    schedulingBufferTime: 123,\n  },\n  scalingAdjustment: 123,\n  stepAdjustments: [{\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    metricIntervalLowerBound: 123,\n    metricIntervalUpperBound: 123,\n  }],\n  targetTrackingConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AutoScaling::ScalingPolicy`."
        },
        "locationInModule": {
          "filename": "lib/autoscaling.generated.ts",
          "line": 3346
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3248
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3369
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3390
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnScalingPolicy",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-adjustmenttype"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.AdjustmentType`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3283
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.AutoScalingGroupName`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3277
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3252
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3374
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-cooldown"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.Cooldown`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3289
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-estimatedinstancewarmup"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.EstimatedInstanceWarmup`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3295
          },
          "name": "estimatedInstanceWarmup",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-metricaggregationtype"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.MetricAggregationType`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3301
          },
          "name": "metricAggregationType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-minadjustmentmagnitude"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.MinAdjustmentMagnitude`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3307
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-policytype"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.PolicyType`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3313
          },
          "name": "policyType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.PredictiveScalingConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3319
          },
          "name": "predictiveScalingConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-scalingadjustment"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.ScalingAdjustment`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3325
          },
          "name": "scalingAdjustment",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-stepadjustments"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.StepAdjustments`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3331
          },
          "name": "stepAdjustments",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.StepAdjustmentProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.TargetTrackingConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3337
          },
          "name": "targetTrackingConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst customizedMetricSpecificationProperty: autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty = {\n  metricName: 'metricName',\n  namespace: 'namespace',\n  statistic: 'statistic',\n\n  // the properties below are optional\n  dimensions: [{\n    name: 'name',\n    value: 'value',\n  }],\n  unit: 'unit',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3400
      },
      "name": "CustomizedMetricSpecificationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-dimensions"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.CustomizedMetricSpecificationProperty.Dimensions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3405
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-metricname"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.CustomizedMetricSpecificationProperty.MetricName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3410
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-namespace"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.CustomizedMetricSpecificationProperty.Namespace`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3415
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-statistic"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.CustomizedMetricSpecificationProperty.Statistic`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3420
          },
          "name": "statistic",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-unit"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.CustomizedMetricSpecificationProperty.Unit`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3425
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.CustomizedMetricSpecificationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDimensionProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdimension.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst metricDimensionProperty: autoscaling.CfnScalingPolicy.MetricDimensionProperty = {\n  name: 'name',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDimensionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3497
      },
      "name": "MetricDimensionProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdimension.html#cfn-autoscaling-scalingpolicy-metricdimension-name"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.MetricDimensionProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3502
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdimension.html#cfn-autoscaling-scalingpolicy-metricdimension-value"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.MetricDimensionProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3507
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.MetricDimensionProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predefinedmetricspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst predefinedMetricSpecificationProperty: autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3569
      },
      "name": "PredefinedMetricSpecificationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predefinedmetricspecification.html#cfn-autoscaling-scalingpolicy-predefinedmetricspecification-predefinedmetrictype"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredefinedMetricSpecificationProperty.PredefinedMetricType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3574
          },
          "name": "predefinedMetricType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predefinedmetricspecification.html#cfn-autoscaling-scalingpolicy-predefinedmetricspecification-resourcelabel"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredefinedMetricSpecificationProperty.ResourceLabel`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3579
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredefinedMetricSpecificationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst predictiveScalingConfigurationProperty: autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty = {\n  metricSpecifications: [{\n    targetValue: 123,\n\n    // the properties below are optional\n    predefinedLoadMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    predefinedMetricPairSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    predefinedScalingMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n  }],\n\n  // the properties below are optional\n  maxCapacityBreachBehavior: 'maxCapacityBreachBehavior',\n  maxCapacityBuffer: 123,\n  mode: 'mode',\n  schedulingBufferTime: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3640
      },
      "name": "PredictiveScalingConfigurationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingconfiguration.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration-maxcapacitybreachbehavior"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingConfigurationProperty.MaxCapacityBreachBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3645
          },
          "name": "maxCapacityBreachBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingconfiguration.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration-maxcapacitybuffer"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingConfigurationProperty.MaxCapacityBuffer`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3650
          },
          "name": "maxCapacityBuffer",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingconfiguration.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration-metricspecifications"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingConfigurationProperty.MetricSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3655
          },
          "name": "metricSpecifications",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingconfiguration.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration-mode"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingConfigurationProperty.Mode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3660
          },
          "name": "mode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingconfiguration.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration-schedulingbuffertime"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingConfigurationProperty.SchedulingBufferTime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3665
          },
          "name": "schedulingBufferTime",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredictiveScalingConfigurationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst predictiveScalingMetricSpecificationProperty: autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty = {\n  targetValue: 123,\n\n  // the properties below are optional\n  predefinedLoadMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n  predefinedMetricPairSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n  predefinedScalingMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3735
      },
      "name": "PredictiveScalingMetricSpecificationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html#cfn-autoscaling-scalingpolicy-predictivescalingmetricspecification-predefinedloadmetricspecification"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty.PredefinedLoadMetricSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3740
          },
          "name": "predefinedLoadMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html#cfn-autoscaling-scalingpolicy-predictivescalingmetricspecification-predefinedmetricpairspecification"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty.PredefinedMetricPairSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3745
          },
          "name": "predefinedMetricPairSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html#cfn-autoscaling-scalingpolicy-predictivescalingmetricspecification-predefinedscalingmetricspecification"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty.PredefinedScalingMetricSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3750
          },
          "name": "predefinedScalingMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html#cfn-autoscaling-scalingpolicy-predictivescalingmetricspecification-targetvalue"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty.TargetValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3755
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedloadmetric.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst predictiveScalingPredefinedLoadMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3822
      },
      "name": "PredictiveScalingPredefinedLoadMetricProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedloadmetric.html#cfn-autoscaling-scalingpolicy-predictivescalingpredefinedloadmetric-predefinedmetrictype"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty.PredefinedMetricType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3827
          },
          "name": "predefinedMetricType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedloadmetric.html#cfn-autoscaling-scalingpolicy-predictivescalingpredefinedloadmetric-resourcelabel"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty.ResourceLabel`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3832
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedmetricpair.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst predictiveScalingPredefinedMetricPairProperty: autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3893
      },
      "name": "PredictiveScalingPredefinedMetricPairProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedmetricpair.html#cfn-autoscaling-scalingpolicy-predictivescalingpredefinedmetricpair-predefinedmetrictype"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty.PredefinedMetricType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3898
          },
          "name": "predefinedMetricType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedmetricpair.html#cfn-autoscaling-scalingpolicy-predictivescalingpredefinedmetricpair-resourcelabel"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty.ResourceLabel`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3903
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedscalingmetric.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst predictiveScalingPredefinedScalingMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3964
      },
      "name": "PredictiveScalingPredefinedScalingMetricProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedscalingmetric.html#cfn-autoscaling-scalingpolicy-predictivescalingpredefinedscalingmetric-predefinedmetrictype"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty.PredefinedMetricType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3969
          },
          "name": "predefinedMetricType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedscalingmetric.html#cfn-autoscaling-scalingpolicy-predictivescalingpredefinedscalingmetric-resourcelabel"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty.ResourceLabel`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3974
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.StepAdjustmentProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst stepAdjustmentProperty: autoscaling.CfnScalingPolicy.StepAdjustmentProperty = {\n  scalingAdjustment: 123,\n\n  // the properties below are optional\n  metricIntervalLowerBound: 123,\n  metricIntervalUpperBound: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.StepAdjustmentProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 4035
      },
      "name": "StepAdjustmentProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html#cfn-autoscaling-scalingpolicy-stepadjustment-metricintervallowerbound"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.StepAdjustmentProperty.MetricIntervalLowerBound`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4040
          },
          "name": "metricIntervalLowerBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html#cfn-autoscaling-scalingpolicy-stepadjustment-metricintervalupperbound"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.StepAdjustmentProperty.MetricIntervalUpperBound`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4045
          },
          "name": "metricIntervalUpperBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html#cfn-autoscaling-scalingpolicy-stepadjustment-scalingadjustment"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.StepAdjustmentProperty.ScalingAdjustment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4050
          },
          "name": "scalingAdjustment",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.StepAdjustmentProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst targetTrackingConfigurationProperty: autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty = {\n  targetValue: 123,\n\n  // the properties below are optional\n  customizedMetricSpecification: {\n    metricName: 'metricName',\n    namespace: 'namespace',\n    statistic: 'statistic',\n\n    // the properties below are optional\n    dimensions: [{\n      name: 'name',\n      value: 'value',\n    }],\n    unit: 'unit',\n  },\n  disableScaleIn: false,\n  predefinedMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 4114
      },
      "name": "TargetTrackingConfigurationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-customizedmetricspecification"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.TargetTrackingConfigurationProperty.CustomizedMetricSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4119
          },
          "name": "customizedMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-disablescalein"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.TargetTrackingConfigurationProperty.DisableScaleIn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4124
          },
          "name": "disableScaleIn",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-predefinedmetricspecification"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.TargetTrackingConfigurationProperty.PredefinedMetricSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4129
          },
          "name": "predefinedMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-targetvalue"
            },
            "stability": "external",
            "summary": "`CfnScalingPolicy.TargetTrackingConfigurationProperty.TargetValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4134
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.TargetTrackingConfigurationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::AutoScaling::ScalingPolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst cfnScalingPolicyProps: autoscaling.CfnScalingPolicyProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  adjustmentType: 'adjustmentType',\n  cooldown: 'cooldown',\n  estimatedInstanceWarmup: 123,\n  metricAggregationType: 'metricAggregationType',\n  minAdjustmentMagnitude: 123,\n  policyType: 'policyType',\n  predictiveScalingConfiguration: {\n    metricSpecifications: [{\n      targetValue: 123,\n\n      // the properties below are optional\n      predefinedLoadMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedMetricPairSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedScalingMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n    }],\n\n    // the properties below are optional\n    maxCapacityBreachBehavior: 'maxCapacityBreachBehavior',\n    maxCapacityBuffer: 123,\n    mode: 'mode',\n    schedulingBufferTime: 123,\n  },\n  scalingAdjustment: 123,\n  stepAdjustments: [{\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    metricIntervalLowerBound: 123,\n    metricIntervalUpperBound: 123,\n  }],\n  targetTrackingConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3096
      },
      "name": "CfnScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-adjustmenttype"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.AdjustmentType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3108
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.AutoScalingGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3102
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-cooldown"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.Cooldown`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3114
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-estimatedinstancewarmup"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.EstimatedInstanceWarmup`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3120
          },
          "name": "estimatedInstanceWarmup",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-metricaggregationtype"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.MetricAggregationType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3126
          },
          "name": "metricAggregationType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-minadjustmentmagnitude"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.MinAdjustmentMagnitude`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3132
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-policytype"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.PolicyType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3138
          },
          "name": "policyType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.PredictiveScalingConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3144
          },
          "name": "predictiveScalingConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-scalingadjustment"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.ScalingAdjustment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3150
          },
          "name": "scalingAdjustment",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-stepadjustments"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.StepAdjustments`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3156
          },
          "name": "stepAdjustments",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.StepAdjustmentProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScalingPolicy.TargetTrackingConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3162
          },
          "name": "targetTrackingConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicyProps"
    },
    "@aws-cdk/aws-autoscaling.CfnScheduledAction": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AutoScaling::ScheduledAction",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::AutoScaling::ScheduledAction`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst cfnScheduledAction = new autoscaling.CfnScheduledAction(this, 'MyCfnScheduledAction', {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: 'endTime',\n  maxSize: 123,\n  minSize: 123,\n  recurrence: 'recurrence',\n  startTime: 'startTime',\n  timeZone: 'timeZone',\n});"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScheduledAction",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AutoScaling::ScheduledAction`."
        },
        "locationInModule": {
          "filename": "lib/autoscaling.generated.ts",
          "line": 4407
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.CfnScheduledActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 4327
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4427
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4445
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnScheduledAction",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-asgname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.AutoScalingGroupName`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4356
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4331
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4432
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-desiredcapacity"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.DesiredCapacity`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4362
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-endtime"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.EndTime`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4368
          },
          "name": "endTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-maxsize"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.MaxSize`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4374
          },
          "name": "maxSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-minsize"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.MinSize`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4380
          },
          "name": "minSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-recurrence"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.Recurrence`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4386
          },
          "name": "recurrence",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-starttime"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.StartTime`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4392
          },
          "name": "startTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-timezone"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.TimeZone`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4398
          },
          "name": "timeZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScheduledAction"
    },
    "@aws-cdk/aws-autoscaling.CfnScheduledActionProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::AutoScaling::ScheduledAction`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst cfnScheduledActionProps: autoscaling.CfnScheduledActionProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: 'endTime',\n  maxSize: 123,\n  minSize: 123,\n  recurrence: 'recurrence',\n  startTime: 'startTime',\n  timeZone: 'timeZone',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScheduledActionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 4202
      },
      "name": "CfnScheduledActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-asgname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.AutoScalingGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4208
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-desiredcapacity"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.DesiredCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4214
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-endtime"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.EndTime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4220
          },
          "name": "endTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-maxsize"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.MaxSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4226
          },
          "name": "maxSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-minsize"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.MinSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4232
          },
          "name": "minSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-recurrence"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.Recurrence`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4238
          },
          "name": "recurrence",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-starttime"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.StartTime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4244
          },
          "name": "startTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-timezone"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::ScheduledAction.TimeZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4250
          },
          "name": "timeZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScheduledActionProps"
    },
    "@aws-cdk/aws-autoscaling.CfnWarmPool": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AutoScaling::WarmPool",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::AutoScaling::WarmPool`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst cfnWarmPool = new autoscaling.CfnWarmPool(this, 'MyCfnWarmPool', {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: 'poolState',\n});"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnWarmPool",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AutoScaling::WarmPool`."
        },
        "locationInModule": {
          "filename": "lib/autoscaling.generated.ts",
          "line": 4601
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.CfnWarmPoolProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 4545
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4617
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4631
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnWarmPool",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::WarmPool.AutoScalingGroupName`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4574
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4549
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4622
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-maxgrouppreparedcapacity"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::WarmPool.MaxGroupPreparedCapacity`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4580
          },
          "name": "maxGroupPreparedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-minsize"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::WarmPool.MinSize`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4586
          },
          "name": "minSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-poolstate"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::WarmPool.PoolState`."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4592
          },
          "name": "poolState",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnWarmPool"
    },
    "@aws-cdk/aws-autoscaling.CfnWarmPoolProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::AutoScaling::WarmPool`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst cfnWarmPoolProps: autoscaling.CfnWarmPoolProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: 'poolState',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnWarmPoolProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 4456
      },
      "name": "CfnWarmPoolProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::WarmPool.AutoScalingGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4462
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-maxgrouppreparedcapacity"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::WarmPool.MaxGroupPreparedCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4468
          },
          "name": "maxGroupPreparedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-minsize"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::WarmPool.MinSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4474
          },
          "name": "minSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-poolstate"
            },
            "stability": "external",
            "summary": "`AWS::AutoScaling::WarmPool.PoolState`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4480
          },
          "name": "poolState",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnWarmPoolProps"
    },
    "@aws-cdk/aws-autoscaling.CommonAutoScalingGroupProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "remarks": "Constructs that want to create AutoScalingGroups can inherit\nthis interface and specialize the essential parts in various ways.",
        "stability": "stable",
        "summary": "Basic properties of an AutoScalingGroup, except the exact machines to run and where they should run.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const blockDeviceVolume: autoscaling.BlockDeviceVolume;\ndeclare const groupMetrics: autoscaling.GroupMetrics;\ndeclare const healthCheck: autoscaling.HealthCheck;\ndeclare const scalingEvents: autoscaling.ScalingEvents;\ndeclare const signals: autoscaling.Signals;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const topic: sns.Topic;\ndeclare const updatePolicy: autoscaling.UpdatePolicy;\n\nconst commonAutoScalingGroupProps: autoscaling.CommonAutoScalingGroupProps = {\n  allowAllOutbound: false,\n  associatePublicIpAddress: false,\n  autoScalingGroupName: 'autoScalingGroupName',\n  blockDevices: [{\n    deviceName: 'deviceName',\n    volume: blockDeviceVolume,\n\n    // the properties below are optional\n    mappingEnabled: false,\n  }],\n  cooldown: cdk.Duration.minutes(30),\n  desiredCapacity: 123,\n  groupMetrics: [groupMetrics],\n  healthCheck: healthCheck,\n  ignoreUnmodifiedSizeProperties: false,\n  instanceMonitoring: autoscaling.Monitoring.BASIC,\n  keyName: 'keyName',\n  maxCapacity: 123,\n  maxInstanceLifetime: cdk.Duration.minutes(30),\n  minCapacity: 123,\n  newInstancesProtectedFromScaleIn: false,\n  notifications: [{\n    topic: topic,\n\n    // the properties below are optional\n    scalingEvents: scalingEvents,\n  }],\n  notificationsTopic: topic,\n  replacingUpdateMinSuccessfulInstancesPercent: 123,\n  resourceSignalCount: 123,\n  resourceSignalTimeout: cdk.Duration.minutes(30),\n  rollingUpdateConfiguration: {\n    maxBatchSize: 123,\n    minInstancesInService: 123,\n    minSuccessfulInstancesPercent: 123,\n    pauseTime: cdk.Duration.minutes(30),\n    suspendProcesses: [autoscaling.ScalingProcess.LAUNCH],\n    waitOnResourceSignals: false,\n  },\n  signals: signals,\n  spotPrice: 'spotPrice',\n  updatePolicy: updatePolicy,\n  updateType: autoscaling.UpdateType.NONE,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.CommonAutoScalingGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 52
      },
      "name": "CommonAutoScalingGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether the instances can initiate connections to anywhere by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 112
          },
          "name": "allowAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Use subnet setting.",
            "stability": "stable",
            "summary": "Whether instances in the Auto Scaling Group should have public IP addresses associated with them."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 193
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Auto generated by CloudFormation",
            "remarks": "This name must be unique per Region per account.",
            "stability": "stable",
            "summary": "The name of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 316
          },
          "name": "autoScalingGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Uses the block device mapping of the AMI",
            "remarks": "Each instance that is launched has an associated root device volume,\neither an Amazon EBS volume or an instance store volume.\nYou can use block device mappings to specify additional EBS volumes or\ninstance store volumes to attach to an instance when it is launched.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html",
            "stability": "stable",
            "summary": "Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 222
          },
          "name": "blockDevices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.BlockDevice"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "stability": "stable",
            "summary": "Default scaling cooldown for this AutoScalingGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 185
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "minCapacity, and leave unchanged during deployment",
            "remarks": "If this is set to a number, every deployment will reset the amount of\ninstances to this number. It is recommended to leave this value blank.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity",
            "stability": "stable",
            "summary": "Initial amount of instances in the fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 76
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no group metrics will be reported",
            "remarks": "To report all group metrics use `GroupMetrics.all()`\nGroup metrics are reported in a granularity of 1 minute at no additional charge.",
            "stability": "stable",
            "summary": "Enable monitoring for group metrics, these metrics describe the group rather than any of its instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 257
          },
          "name": "groupMetrics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.GroupMetrics"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- HealthCheck.ec2 with no grace period",
            "stability": "stable",
            "summary": "Configuration for health checks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 208
          },
          "name": "healthCheck",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.HealthCheck"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Only used if the ASG has scheduled actions (which may scale your ASG up\nor down regardless of cdk deployments). If true, the size of the group\nwill only be reset if it has been changed in the CDK app. If false, the\nsizes will always be changed back to what they were in the CDK app\non deployment.",
            "stability": "stable",
            "summary": "If the ASG has scheduled actions, don't reset unchanged group sizes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 160
          },
          "name": "ignoreUnmodifiedSizeProperties",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Monitoring.DETAILED",
            "remarks": "When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account\nis charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes.",
            "see": "https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics",
            "stability": "stable",
            "summary": "Controls whether instances in this group are launched with detailed or basic monitoring."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 248
          },
          "name": "instanceMonitoring",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.Monitoring"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No SSH access will be possible.",
            "stability": "stable",
            "summary": "Name of SSH keypair to grant access to instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 83
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "desiredCapacity",
            "stability": "stable",
            "summary": "Maximum number of instances in the fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 65
          },
          "name": "maxCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "remarks": "The maximum duration applies\nto all current and future instances in the group. As an instance approaches its maximum duration,\nit is terminated and replaced, and cannot be used again.\n\nYou must specify a value of at least 604,800 seconds (7 days). To clear a previously set value,\nleave this property undefined.",
            "see": "https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html",
            "stability": "stable",
            "summary": "The maximum amount of time that an instance can be in service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 236
          },
          "name": "maxInstanceLifetime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "stable",
            "summary": "Minimum number of instances in the fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 58
          },
          "name": "minCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "By default, Auto Scaling can terminate an instance at any time after launch\nwhen scaling in an Auto Scaling Group, subject to the group's termination\npolicy. However, you may wish to protect newly-launched instances from\nbeing scaled in if they are going to run critical applications that should\nnot be prematurely terminated.\n\nThis flag must be enabled if the Auto Scaling Group will be associated with\nan ECS Capacity Provider with managed termination protection.",
            "stability": "stable",
            "summary": "Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 310
          },
          "name": "newInstancesProtectedFromScaleIn",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No fleet change notifications will be sent.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations",
            "stability": "stable",
            "summary": "Configure autoscaling group to send notifications about fleet changes to an SNS topic(s)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 105
          },
          "name": "notifications",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.NotificationConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No fleet change notifications will be sent.",
            "deprecated": "use `notifications`",
            "stability": "deprecated",
            "summary": "SNS topic to send notifications about fleet changes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 98
          },
          "name": "notificationsTopic",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-sns.ITopic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "minSuccessfulInstancesPercent",
            "deprecated": "Use `signals` instead",
            "remarks": "Only used if updateType == UpdateType.ReplacingUpdate. Specifies how\nmany instances must signal success for the update to succeed.",
            "stability": "deprecated",
            "summary": "Configuration for replacing updates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 147
          },
          "name": "replacingUpdateMinSuccessfulInstancesPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1 if resourceSignalTimeout is set, 0 otherwise",
            "deprecated": "Use `signals` instead.",
            "stability": "deprecated",
            "summary": "How many ResourceSignal calls CloudFormation expects before the resource is considered created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 168
          },
          "name": "resourceSignalCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5) if resourceSignalCount is set, N/A otherwise",
            "deprecated": "Use `signals` instead.",
            "remarks": "The maximum value is 43200 (12 hours).",
            "stability": "deprecated",
            "summary": "The length of time to wait for the resourceSignalCount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 178
          },
          "name": "resourceSignalTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- RollingUpdateConfiguration with defaults.",
            "deprecated": "Use `updatePolicy` instead",
            "remarks": "Only used if updateType == UpdateType.RollingUpdate.",
            "stability": "deprecated",
            "summary": "Configuration for rolling updates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 136
          },
          "name": "rollingUpdateConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.RollingUpdateConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not wait for signals",
            "remarks": "Use this to pause the CloudFormation deployment to wait for the instances\nin the AutoScalingGroup to report successful startup during\ncreation and updates. The UserData script needs to invoke `cfn-signal`\nwith a success or failure code after it is done setting up the instance.\n\nWithout waiting for signals, the CloudFormation deployment will proceed as\nsoon as the AutoScalingGroup has been created or updated but before the\ninstances in the group have been started.\n\nFor example, to have instances wait for an Elastic Load Balancing health check before\nthey signal success, add a health-check verification by using the\ncfn-init helper script. For an example, see the verify_instance_health\ncommand in the Auto Scaling rolling updates sample template:\n\nhttps://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/AutoScaling/AutoScalingRollingUpdates.yaml",
            "stability": "stable",
            "summary": "Configure waiting for signals during deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 280
          },
          "name": "signals",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.Signals"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "remarks": "Spot Instances are\nlaunched when the price you specify exceeds the current Spot market price.",
            "stability": "stable",
            "summary": "The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 201
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- `UpdatePolicy.rollingUpdate()` if using `init`, `UpdatePolicy.none()` otherwise",
            "remarks": "This is applied when any of the settings on the ASG are changed that\naffect how the instances should be created (VPC, instance type, startup\nscripts, etc.). It indicates how the existing instances should be\nreplaced with new instances matching the new config. By default, nothing\nis done and only new instances are launched with the new config.",
            "stability": "stable",
            "summary": "What to do when an AutoScalingGroup's instance configuration is changed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 293
          },
          "name": "updatePolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.UpdatePolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "UpdateType.None",
            "deprecated": "Use `updatePolicy` instead",
            "remarks": "This is applied when any of the settings on the ASG are changed that\naffect how the instances should be created (VPC, instance type, startup\nscripts, etc.). It indicates how the existing instances should be\nreplaced with new instances matching the new config. By default, nothing\nis done and only new instances are launched with the new config.",
            "stability": "deprecated",
            "summary": "What to do when an AutoScalingGroup's instance configuration is changed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 126
          },
          "name": "updateType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.UpdateType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All Private subnets.",
            "stability": "stable",
            "summary": "Where to place instances within the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 90
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:CommonAutoScalingGroupProps"
    },
    "@aws-cdk/aws-autoscaling.CpuUtilizationScalingProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "example": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnCpuUtilization('KeepSpareCPU', {\n  targetUtilizationPercent: 50\n});",
        "stability": "stable",
        "summary": "Properties for enabling scaling based on CPU utilization."
      },
      "fqn": "@aws-cdk/aws-autoscaling.CpuUtilizationScalingProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1655
      },
      "name": "CpuUtilizationScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Target average CPU utilization across the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1659
          },
          "name": "targetUtilizationPercent",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:CpuUtilizationScalingProps"
    },
    "@aws-cdk/aws-autoscaling.CronOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "example": "import * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const fn: lambda.Function;\nconst alias = new lambda.Alias(this, 'Alias', {\n  aliasName: 'prod',\n  version: fn.latestVersion,\n});\n\n// Create AutoScaling target\nconst as = alias.addAutoScaling({ maxCapacity: 50 });\n\n// Configure Target Tracking\nas.scaleOnUtilization({\n  utilizationTarget: 0.5,\n});\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 20,\n});",
        "remarks": "All fields are strings so you can use complex expressions. Absence of\na field implies '*' or '?', whichever one is appropriate.",
        "see": "http://crontab.org/",
        "stability": "stable",
        "summary": "Options to configure a cron expression."
      },
      "fqn": "@aws-cdk/aws-autoscaling.CronOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schedule.ts",
        "line": 49
      },
      "name": "CronOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Every day of the month",
            "stability": "stable",
            "summary": "The day of the month to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 69
          },
          "name": "day",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every hour",
            "stability": "stable",
            "summary": "The hour to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 62
          },
          "name": "hour",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every minute",
            "stability": "stable",
            "summary": "The minute to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 55
          },
          "name": "minute",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every month",
            "stability": "stable",
            "summary": "The month to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 76
          },
          "name": "month",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Any day of the week",
            "stability": "stable",
            "summary": "The day of the week to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 83
          },
          "name": "weekDay",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/schedule:CronOptions"
    },
    "@aws-cdk/aws-autoscaling.DefaultResult": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-autoscaling.DefaultResult",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/lifecycle-hook.ts",
        "line": 153
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ABANDON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CONTINUE"
        }
      ],
      "name": "DefaultResult",
      "symbolId": "lib/lifecycle-hook:DefaultResult"
    },
    "@aws-cdk/aws-autoscaling.EbsDeviceOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Block device options for an EBS volume.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst ebsDeviceOptions: autoscaling.EbsDeviceOptions = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceOptions",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.EbsDeviceOptionsBase"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 74
      },
      "name": "EbsDeviceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Encrypted EBS volumes can only be attached to instances that support Amazon EBS encryption",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances",
            "stability": "stable",
            "summary": "Specifies whether the EBS volume is encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 83
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceOptions"
    },
    "@aws-cdk/aws-autoscaling.EbsDeviceOptionsBase": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Base block device options for an EBS volume.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst ebsDeviceOptionsBase: autoscaling.EbsDeviceOptionsBase = {\n  deleteOnTermination: false,\n  iops: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceOptionsBase",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 40
      },
      "name": "EbsDeviceOptionsBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- true for Amazon EC2 Auto Scaling, false otherwise (e.g. EBS)",
            "stability": "stable",
            "summary": "Indicates whether to delete the volume when the instance is terminated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 46
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none, required for {@link EbsDeviceVolumeType.IO1}",
            "remarks": "Must only be set for {@link volumeType}: {@link EbsDeviceVolumeType.IO1}\n\nThe maximum ratio of IOPS to volume size (in GiB) is 50:1, so for 5,000 provisioned IOPS,\nyou need at least 100 GiB storage on the volume.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html",
            "stability": "stable",
            "summary": "The number of I/O operations per second (IOPS) to provision for the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 60
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{@link EbsDeviceVolumeType.GP2}",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html",
            "stability": "stable",
            "summary": "The EBS volume type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 68
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceOptionsBase"
    },
    "@aws-cdk/aws-autoscaling.EbsDeviceProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties of an EBS block device.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst ebsDeviceProps: autoscaling.EbsDeviceProps = {\n  deleteOnTermination: false,\n  iops: 123,\n  snapshotId: 'snapshotId',\n  volumeSize: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.EbsDeviceSnapshotOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 103
      },
      "name": "EbsDeviceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No snapshot will be used",
            "stability": "stable",
            "summary": "The snapshot ID of the volume to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 109
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceProps"
    },
    "@aws-cdk/aws-autoscaling.EbsDeviceSnapshotOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Block device options for an EBS volume created from a snapshot.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst ebsDeviceSnapshotOptions: autoscaling.EbsDeviceSnapshotOptions = {\n  deleteOnTermination: false,\n  iops: 123,\n  volumeSize: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceSnapshotOptions",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.EbsDeviceOptionsBase"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 89
      },
      "name": "EbsDeviceSnapshotOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- The snapshot size",
            "remarks": "If you specify volumeSize, it must be equal or greater than the size of the snapshot.",
            "stability": "stable",
            "summary": "The volume size, in Gibibytes (GiB)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 97
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceSnapshotOptions"
    },
    "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Supported EBS volume types for blockDevices."
      },
      "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 173
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "General Purpose SSD - GP2."
          },
          "name": "GP2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "General Purpose SSD - GP3."
          },
          "name": "GP3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Provisioned IOPS SSD - IO1."
          },
          "name": "IO1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Cold HDD."
          },
          "name": "SC1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Throughput Optimized HDD."
          },
          "name": "ST1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Magnetic."
          },
          "name": "STANDARD"
        }
      ],
      "name": "EbsDeviceVolumeType",
      "symbolId": "lib/volume:EbsDeviceVolumeType"
    },
    "@aws-cdk/aws-autoscaling.Ec2HealthCheckOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "EC2 Heath check options.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\nconst ec2HealthCheckOptions: autoscaling.Ec2HealthCheckOptions = {\n  grace: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.Ec2HealthCheckOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1513
      },
      "name": "Ec2HealthCheckOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(0)",
            "stability": "stable",
            "summary": "Specified the time Auto Scaling waits before checking the health status of an EC2 instance that has come into service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1519
          },
          "name": "grace",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:Ec2HealthCheckOptions"
    },
    "@aws-cdk/aws-autoscaling.ElbHealthCheckOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "ELB Heath check options.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\nconst elbHealthCheckOptions: autoscaling.ElbHealthCheckOptions = {\n  grace: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.ElbHealthCheckOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1525
      },
      "name": "ElbHealthCheckOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This option is required for ELB health checks.",
            "stability": "stable",
            "summary": "Specified the time Auto Scaling waits before checking the health status of an EC2 instance that has come into service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1531
          },
          "name": "grace",
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:ElbHealthCheckOptions"
    },
    "@aws-cdk/aws-autoscaling.GroupMetric": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\n// Enable monitoring of all group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [autoscaling.GroupMetrics.all()],\n});\n\n// Enable monitoring for a subset of group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [new autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)],\n});",
        "stability": "stable",
        "summary": "Group metrics that an Auto Scaling group sends to Amazon CloudWatch."
      },
      "fqn": "@aws-cdk/aws-autoscaling.GroupMetric",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/auto-scaling-group.ts",
          "line": 713
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 661
      },
      "name": "GroupMetric",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of instances that the Auto Scaling group attempts to maintain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 676
          },
          "name": "DESIRED_CAPACITY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of instances that are running as part of the Auto Scaling group This metric does not include instances that are pending or terminating."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 682
          },
          "name": "IN_SERVICE_INSTANCES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The maximum size of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 671
          },
          "name": "MAX_SIZE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The minimum size of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 666
          },
          "name": "MIN_SIZE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the group metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 711
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of instances that are pending A pending instance is not yet in service, this metric does not include instances that are in service or terminating."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 688
          },
          "name": "PENDING_INSTANCES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of instances that are in a Standby state Instances in this state are still running but are not actively in service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 694
          },
          "name": "STANDBY_INSTANCES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of instances that are in the process of terminating This metric does not include instances that are in service or pending."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 700
          },
          "name": "TERMINATING_INSTANCES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The total number of instances in the Auto Scaling group This metric identifies the number of instances that are in service, pending, and terminating."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 706
          },
          "name": "TOTAL_INSTANCES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:GroupMetric"
    },
    "@aws-cdk/aws-autoscaling.GroupMetrics": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\n// Enable monitoring of all group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [autoscaling.GroupMetrics.all()],\n});\n\n// Enable monitoring for a subset of group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [new autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)],\n});",
        "stability": "stable",
        "summary": "A set of group metrics."
      },
      "fqn": "@aws-cdk/aws-autoscaling.GroupMetrics",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/auto-scaling-group.ts",
          "line": 653
        },
        "parameters": [
          {
            "name": "metrics",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
            },
            "variadic": true
          }
        ],
        "variadic": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 639
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Report all group metrics."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 644
          },
          "name": "all",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.GroupMetrics"
            }
          },
          "static": true
        }
      ],
      "name": "GroupMetrics",
      "symbolId": "lib/auto-scaling-group:GroupMetrics"
    },
    "@aws-cdk/aws-autoscaling.HealthCheck": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Health check settings.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\nconst healthCheck = autoscaling.HealthCheck.ec2(/* all optional props */ {\n  grace: cdk.Duration.minutes(30),\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.HealthCheck",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1537
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use EC2 for health checks."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1543
          },
          "name": "ec2",
          "parameters": [
            {
              "docs": {
                "summary": "EC2 health check options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.Ec2HealthCheckOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.HealthCheck"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "It considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks.",
            "stability": "stable",
            "summary": "Use ELB for health checks."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1553
          },
          "name": "elb",
          "parameters": [
            {
              "docs": {
                "summary": "ELB health check options."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.ElbHealthCheckOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.HealthCheck"
            }
          },
          "static": true
        }
      ],
      "name": "HealthCheck",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1557
          },
          "name": "gracePeriod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1557
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:HealthCheck"
    },
    "@aws-cdk/aws-autoscaling.IAutoScalingGroup": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "An AutoScalingGroup."
      },
      "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1590
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Send a message to either an SQS queue or SNS topic when instances launch or terminate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1619
          },
          "name": "addLifecycleHook",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BasicLifecycleHookProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.LifecycleHook"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The command must be in the scripting language supported by the fleet's OS (i.e. Linux/Windows).\nDoes nothing for imported ASGs.",
            "stability": "stable",
            "summary": "Add command to the startup script of fleet instances."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1614
          },
          "name": "addUserData",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in to achieve a target CPU utilization."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1629
          },
          "name": "scaleOnCpuUtilization",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.CpuUtilizationScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in to achieve a target network ingress rate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1634
          },
          "name": "scaleOnIncomingBytes",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in, in response to a metric."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1649
          },
          "name": "scaleOnMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.StepScalingPolicy"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in to achieve a target network egress rate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1639
          },
          "name": "scaleOnOutgoingBytes",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in based on time."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1624
          },
          "name": "scaleOnSchedule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BasicScheduledActionProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.ScheduledAction"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in in order to keep a metric around a target value."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1644
          },
          "name": "scaleToTrackMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.MetricTargetTrackingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        }
      ],
      "name": "IAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The arn of the AutoScalingGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1601
          },
          "name": "autoScalingGroupArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the AutoScalingGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1595
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Is 'UNKNOWN' for imported ASGs.",
            "stability": "stable",
            "summary": "The operating system family that the instances in this auto-scaling group belong to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1607
          },
          "name": "osType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:IAutoScalingGroup"
    },
    "@aws-cdk/aws-autoscaling.ILifecycleHook": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "A basic lifecycle hook object."
      },
      "fqn": "@aws-cdk/aws-autoscaling.ILifecycleHook",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lifecycle-hook.ts",
        "line": 75
      },
      "name": "ILifecycleHook",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- A default role is created if 'notificationTarget' is specified.\nOtherwise, no role is created.",
            "stability": "stable",
            "summary": "The role for the lifecycle hook to execute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 82
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/lifecycle-hook:ILifecycleHook"
    },
    "@aws-cdk/aws-autoscaling.ILifecycleHookTarget": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Interface for autoscaling lifecycle hook targets."
      },
      "fqn": "@aws-cdk/aws-autoscaling.ILifecycleHookTarget",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lifecycle-hook-target.ts",
        "line": 44
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called when this object is used as the target of a lifecycle hook."
          },
          "locationInModule": {
            "filename": "lib/lifecycle-hook-target.ts",
            "line": 49
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "[disable-awslint:ref-via-interface] The lifecycle hook to attach to and a role to use."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BindHookTargetOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.LifecycleHookTargetConfig"
            }
          }
        }
      ],
      "name": "ILifecycleHookTarget",
      "symbolId": "lib/lifecycle-hook-target:ILifecycleHookTarget"
    },
    "@aws-cdk/aws-autoscaling.LifecycleHook": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define a life cycle hook.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const lifecycleHookTarget: autoscaling.ILifecycleHookTarget;\ndeclare const role: iam.Role;\n\nconst lifecycleHook = new autoscaling.LifecycleHook(this, 'MyLifecycleHook', {\n  autoScalingGroup: autoScalingGroup,\n  lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n  // the properties below are optional\n  defaultResult: autoscaling.DefaultResult.CONTINUE,\n  heartbeatTimeout: cdk.Duration.minutes(30),\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTarget: lifecycleHookTarget,\n  role: role,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.LifecycleHook",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/lifecycle-hook.ts",
          "line": 111
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.LifecycleHookProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-autoscaling.ILifecycleHook"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lifecycle-hook.ts",
        "line": 88
      },
      "name": "LifecycleHook",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of this lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 109
          },
          "name": "lifecycleHookName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- A default role is created if 'notificationTarget' is specified.\nOtherwise, no role is created.",
            "stability": "stable",
            "summary": "The role that allows the ASG to publish to the notification target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 97
          },
          "name": "role",
          "overrides": "@aws-cdk/aws-autoscaling.ILifecycleHook",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/lifecycle-hook:LifecycleHook"
    },
    "@aws-cdk/aws-autoscaling.LifecycleHookProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Lifecycle hook.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const lifecycleHookTarget: autoscaling.ILifecycleHookTarget;\ndeclare const role: iam.Role;\n\nconst lifecycleHookProps: autoscaling.LifecycleHookProps = {\n  autoScalingGroup: autoScalingGroup,\n  lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n  // the properties below are optional\n  defaultResult: autoscaling.DefaultResult.CONTINUE,\n  heartbeatTimeout: cdk.Duration.minutes(30),\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTarget: lifecycleHookTarget,\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.LifecycleHookProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BasicLifecycleHookProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lifecycle-hook.ts",
        "line": 65
      },
      "name": "LifecycleHookProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The AutoScalingGroup to add the lifecycle hook to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 69
          },
          "name": "autoScalingGroup",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        }
      ],
      "symbolId": "lib/lifecycle-hook:LifecycleHookProps"
    },
    "@aws-cdk/aws-autoscaling.LifecycleHookTargetConfig": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Result of binding a lifecycle hook to a target.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\n\nconst lifecycleHookTargetConfig: autoscaling.LifecycleHookTargetConfig = {\n  createdRole: role,\n  notificationTargetArn: 'notificationTargetArn',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.LifecycleHookTargetConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lifecycle-hook-target.ts",
        "line": 30
      },
      "name": "LifecycleHookTargetConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The IRole that was used to bind the lifecycle hook to the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook-target.ts",
            "line": 34
          },
          "name": "createdRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The targetArn that the lifecycle hook was bound to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook-target.ts",
            "line": 38
          },
          "name": "notificationTargetArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lifecycle-hook-target:LifecycleHookTargetConfig"
    },
    "@aws-cdk/aws-autoscaling.LifecycleTransition": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "What instance transition to attach the hook to."
      },
      "fqn": "@aws-cdk/aws-autoscaling.LifecycleTransition",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/lifecycle-hook.ts",
        "line": 161
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Execute the hook when an instance is about to be added."
          },
          "name": "INSTANCE_LAUNCHING"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Execute the hook when an instance is about to be terminated."
          },
          "name": "INSTANCE_TERMINATING"
        }
      ],
      "name": "LifecycleTransition",
      "symbolId": "lib/lifecycle-hook:LifecycleTransition"
    },
    "@aws-cdk/aws-autoscaling.MetricAggregationType": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "How the scaling metric is going to be aggregated."
      },
      "fqn": "@aws-cdk/aws-autoscaling.MetricAggregationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 135
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Average."
          },
          "name": "AVERAGE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Maximum."
          },
          "name": "MAXIMUM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Minimum."
          },
          "name": "MINIMUM"
        }
      ],
      "name": "MetricAggregationType",
      "symbolId": "lib/step-scaling-action:MetricAggregationType"
    },
    "@aws-cdk/aws-autoscaling.MetricTargetTrackingProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for enabling tracking of an arbitrary metric.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\n\nconst metricTargetTrackingProps: autoscaling.MetricTargetTrackingProps = {\n  metric: metric,\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.MetricTargetTrackingProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1694
      },
      "name": "MetricTargetTrackingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The metric must represent a utilization, so that if it's higher than the\ntarget value, your ASG should scale out, and if it's lower it should\nscale in.",
            "stability": "stable",
            "summary": "Metric to track."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1702
          },
          "name": "metric",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Value to keep the metric around."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1707
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:MetricTargetTrackingProps"
    },
    "@aws-cdk/aws-autoscaling.Monitoring": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "The monitoring mode for instances launched in an autoscaling group."
      },
      "fqn": "@aws-cdk/aws-autoscaling.Monitoring",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 34
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates metrics every 5 minutes."
          },
          "name": "BASIC"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates metrics every minute."
          },
          "name": "DETAILED"
        }
      ],
      "name": "Monitoring",
      "symbolId": "lib/auto-scaling-group:Monitoring"
    },
    "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "example": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnIncomingBytes('LimitIngressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});\nautoScalingGroup.scaleOnOutgoingBytes('LimitEgressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});",
        "stability": "stable",
        "summary": "Properties for enabling scaling based on network utilization."
      },
      "fqn": "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1665
      },
      "name": "NetworkUtilizationScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Target average bytes/seconds on each instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1669
          },
          "name": "targetBytesPerSecond",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:NetworkUtilizationScalingProps"
    },
    "@aws-cdk/aws-autoscaling.NotificationConfiguration": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "remarks": "You can configure AutoScaling to send an SNS notification whenever your Auto Scaling group scales.",
        "stability": "stable",
        "summary": "AutoScalingGroup fleet change notifications configurations.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as sns from '@aws-cdk/aws-sns';\n\ndeclare const scalingEvents: autoscaling.ScalingEvents;\ndeclare const topic: sns.Topic;\n\nconst notificationConfiguration: autoscaling.NotificationConfiguration = {\n  topic: topic,\n\n  // the properties below are optional\n  scalingEvents: scalingEvents,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.NotificationConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1336
      },
      "name": "NotificationConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "ScalingEvents.ALL",
            "stability": "stable",
            "summary": "Which fleet scaling events triggers a notification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1346
          },
          "name": "scalingEvents",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ScalingEvents"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "SNS topic to send notifications about fleet scaling events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1340
          },
          "name": "topic",
          "type": {
            "fqn": "@aws-cdk/aws-sns.ITopic"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:NotificationConfiguration"
    },
    "@aws-cdk/aws-autoscaling.PredefinedMetric": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "One of the predefined autoscaling metrics."
      },
      "fqn": "@aws-cdk/aws-autoscaling.PredefinedMetric",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 167
      },
      "members": [
        {
          "docs": {
            "remarks": "Specify the ALB to look at in the `resourceLabel` field.",
            "stability": "stable",
            "summary": "Number of requests completed per target in an Application Load Balancer target group."
          },
          "name": "ALB_REQUEST_COUNT_PER_TARGET"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Average CPU utilization of the Auto Scaling group."
          },
          "name": "ASG_AVERAGE_CPU_UTILIZATION"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Average number of bytes received on all network interfaces by the Auto Scaling group."
          },
          "name": "ASG_AVERAGE_NETWORK_IN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Average number of bytes sent out on all network interfaces by the Auto Scaling group."
          },
          "name": "ASG_AVERAGE_NETWORK_OUT"
        }
      ],
      "name": "PredefinedMetric",
      "symbolId": "lib/target-tracking-scaling-policy:PredefinedMetric"
    },
    "@aws-cdk/aws-autoscaling.RenderSignalsOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Input for Signals.renderCreationPolicy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst renderSignalsOptions: autoscaling.RenderSignalsOptions = {\n  desiredCapacity: 123,\n  minCapacity: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.RenderSignalsOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 482
      },
      "name": "RenderSignalsOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- desired capacity not configured",
            "stability": "stable",
            "summary": "The desiredCapacity of the ASG."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 488
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- minCapacity not configured",
            "stability": "stable",
            "summary": "The minSize of the ASG."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 495
          },
          "name": "minCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:RenderSignalsOptions"
    },
    "@aws-cdk/aws-autoscaling.RequestCountScalingProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "example": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnRequestCount('LimitRPS', {\n    targetRequestsPerSecond: 1000\n});",
        "stability": "stable",
        "summary": "Properties for enabling scaling based on request/second."
      },
      "fqn": "@aws-cdk/aws-autoscaling.RequestCountScalingProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1675
      },
      "name": "RequestCountScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Specify exactly one of 'targetRequestsPerMinute' and 'targetRequestsPerSecond'",
            "stability": "stable",
            "summary": "Target average requests/minute on each instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1688
          },
          "name": "targetRequestsPerMinute",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Specify exactly one of 'targetRequestsPerMinute' and 'targetRequestsPerSecond'",
            "deprecated": "Use 'targetRequestsPerMinute' instead",
            "stability": "deprecated",
            "summary": "Target average requests/seconds on each instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1682
          },
          "name": "targetRequestsPerSecond",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:RequestCountScalingProps"
    },
    "@aws-cdk/aws-autoscaling.RollingUpdateConfiguration": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "deprecated": "use `UpdatePolicy.rollingUpdate()`",
        "stability": "deprecated",
        "summary": "Additional settings when a rolling update is selected.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\nconst rollingUpdateConfiguration: autoscaling.RollingUpdateConfiguration = {\n  maxBatchSize: 123,\n  minInstancesInService: 123,\n  minSuccessfulInstancesPercent: 123,\n  pauseTime: cdk.Duration.minutes(30),\n  suspendProcesses: [autoscaling.ScalingProcess.LAUNCH],\n  waitOnResourceSignals: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.RollingUpdateConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1383
      },
      "name": "RollingUpdateConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "deprecated",
            "summary": "The maximum number of instances that AWS CloudFormation updates at once."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1389
          },
          "name": "maxBatchSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "remarks": "This number affects the speed of the replacement.",
            "stability": "deprecated",
            "summary": "The minimum number of instances that must be in service before more instances are replaced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1398
          },
          "name": "minInstancesInService",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "100",
            "remarks": "If an instance doesn't send a signal within the time specified in the\npauseTime property, AWS CloudFormation assumes that the instance wasn't\nupdated.\n\nThis number affects the success of the replacement.\n\nIf you specify this property, you must also enable the\nwaitOnResourceSignals and pauseTime properties.",
            "stability": "deprecated",
            "summary": "The percentage of instances that must signal success for an update to succeed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1414
          },
          "name": "minSuccessfulInstancesPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5) if the waitOnResourceSignals property is true, otherwise 0",
            "remarks": "This is intended to give those instances time to start software applications.\n\nSpecify PauseTime in the ISO8601 duration format (in the format\nPT#H#M#S, where each # is the number of hours, minutes, and seconds,\nrespectively). The maximum PauseTime is one hour (PT1H).",
            "stability": "deprecated",
            "summary": "The pause time after making a change to a batch of instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1427
          },
          "name": "pauseTime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions.",
            "remarks": "Suspending processes prevents Auto Scaling from interfering with a stack\nupdate.",
            "stability": "deprecated",
            "summary": "Specifies the Auto Scaling processes to suspend during a stack update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1452
          },
          "name": "suspendProcesses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.ScalingProcess"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true if you specified the minSuccessfulInstancesPercent property, false otherwise",
            "remarks": "AWS CloudFormation must receive a signal from each new instance within\nthe specified PauseTime before continuing the update.\n\nTo have instances wait for an Elastic Load Balancing health check before\nthey signal success, add a health-check verification by using the\ncfn-init helper script. For an example, see the verify_instance_health\ncommand in the Auto Scaling rolling updates sample template.",
            "stability": "deprecated",
            "summary": "Specifies whether the Auto Scaling group waits on signals from new instances during an update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1442
          },
          "name": "waitOnResourceSignals",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:RollingUpdateConfiguration"
    },
    "@aws-cdk/aws-autoscaling.RollingUpdateOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for customizing the rolling update.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\nconst rollingUpdateOptions: autoscaling.RollingUpdateOptions = {\n  maxBatchSize: 123,\n  minInstancesInService: 123,\n  minSuccessPercentage: 123,\n  pauseTime: cdk.Duration.minutes(30),\n  suspendProcesses: [autoscaling.ScalingProcess.LAUNCH],\n  waitOnResourceSignals: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.RollingUpdateOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 585
      },
      "name": "RollingUpdateOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "This number affects the speed of the replacement.",
            "stability": "stable",
            "summary": "The maximum number of instances that AWS CloudFormation updates at once."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 593
          },
          "name": "maxBatchSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "remarks": "This number affects the speed of the replacement.",
            "stability": "stable",
            "summary": "The minimum number of instances that must be in service before more instances are replaced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 602
          },
          "name": "minInstancesInService",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The `minSuccessPercentage` configured for `signals` on the AutoScalingGroup",
            "stability": "stable",
            "summary": "The percentage of instances that must signal success for the update to succeed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 633
          },
          "name": "minSuccessPercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The `timeout` configured for `signals` on the AutoScalingGroup",
            "stability": "stable",
            "summary": "The pause time after making a change to a batch of instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 626
          },
          "name": "pauseTime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions.",
            "remarks": "Suspending processes prevents Auto Scaling from interfering with a stack\nupdate.",
            "stability": "stable",
            "summary": "Specifies the Auto Scaling processes to suspend during a stack update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 612
          },
          "name": "suspendProcesses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.ScalingProcess"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true if you configured `signals` on the AutoScalingGroup, false otherwise",
            "stability": "stable",
            "summary": "Specifies whether the Auto Scaling group waits on signals from new instances during an update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 619
          },
          "name": "waitOnResourceSignals",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:RollingUpdateOptions"
    },
    "@aws-cdk/aws-autoscaling.ScalingEvent": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Fleet scaling events."
      },
      "fqn": "@aws-cdk/aws-autoscaling.ScalingEvent",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1352
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Notify when an instance was launched."
          },
          "name": "INSTANCE_LAUNCH"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Notify when an instance failed to launch."
          },
          "name": "INSTANCE_LAUNCH_ERROR"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Notify when an instance was terminated."
          },
          "name": "INSTANCE_TERMINATE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Notify when an instance failed to terminate."
          },
          "name": "INSTANCE_TERMINATE_ERROR"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Send a test notification to the topic."
          },
          "name": "TEST_NOTIFICATION"
        }
      ],
      "name": "ScalingEvent",
      "symbolId": "lib/auto-scaling-group:ScalingEvent"
    },
    "@aws-cdk/aws-autoscaling.ScalingEvents": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "A list of ScalingEvents, you can use one of the predefined lists, such as ScalingEvents.ERRORS or create a custom group by instantiating a `NotificationTypes` object, e.g: `new NotificationTypes(`NotificationType.INSTANCE_LAUNCH`)`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst scalingEvents = autoscaling.ScalingEvents.ALL;",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.ScalingEvents",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/auto-scaling-group.ts",
          "line": 1489
        },
        "parameters": [
          {
            "name": "types",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.ScalingEvent"
            },
            "variadic": true
          }
        ],
        "variadic": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1459
      },
      "name": "ScalingEvents",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "All fleet scaling events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1468
          },
          "name": "ALL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ScalingEvents"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Fleet scaling errors."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1463
          },
          "name": "ERRORS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ScalingEvents"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Fleet scaling launch events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1476
          },
          "name": "LAUNCH_EVENTS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ScalingEvents"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Fleet termination launch events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1481
          },
          "name": "TERMINATION_EVENTS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ScalingEvents"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:ScalingEvents"
    },
    "@aws-cdk/aws-autoscaling.ScalingInterval": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A range of metric values in which to apply a certain scaling operation.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst scalingInterval: autoscaling.ScalingInterval = {\n  change: 123,\n\n  // the properties below are optional\n  lower: 123,\n  upper: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.ScalingInterval",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 190
      },
      "name": "ScalingInterval",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The number is interpreted differently based on AdjustmentType:\n\n- ChangeInCapacity: add the adjustment to the current capacity.\n  The number can be positive or negative.\n- PercentChangeInCapacity: add or remove the given percentage of the current\n   capacity to itself. The number can be in the range [-100..100].\n- ExactCapacity: set the capacity to this number. The number must\n   be positive.",
            "stability": "stable",
            "summary": "The capacity adjustment to apply in this interval."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 221
          },
          "name": "change",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Threshold automatically derived from neighbouring intervals",
            "remarks": "The scaling adjustment will be applied if the metric is higher than this value.",
            "stability": "stable",
            "summary": "The lower bound of the interval."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 198
          },
          "name": "lower",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Threshold automatically derived from neighbouring intervals",
            "remarks": "The scaling adjustment will be applied if the metric is lower than this value.",
            "stability": "stable",
            "summary": "The upper bound of the interval."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 207
          },
          "name": "upper",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/step-scaling-policy:ScalingInterval"
    },
    "@aws-cdk/aws-autoscaling.ScalingProcess": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-autoscaling.ScalingProcess",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1494
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ADD_TO_LOAD_BALANCER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALARM_NOTIFICATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AZ_REBALANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HEALTH_CHECK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LAUNCH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REPLACE_UNHEALTHY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SCHEDULED_ACTIONS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TERMINATE"
        }
      ],
      "name": "ScalingProcess",
      "symbolId": "lib/auto-scaling-group:ScalingProcess"
    },
    "@aws-cdk/aws-autoscaling.Schedule": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "example": "import * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const fn: lambda.Function;\nconst alias = new lambda.Alias(this, 'Alias', {\n  aliasName: 'prod',\n  version: fn.latestVersion,\n});\n\n// Create AutoScaling target\nconst as = alias.addAutoScaling({ maxCapacity: 50 });\n\n// Configure Target Tracking\nas.scaleOnUtilization({\n  utilizationTarget: 0.5,\n});\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 20,\n});",
        "stability": "stable",
        "summary": "Schedule for scheduled scaling actions."
      },
      "fqn": "@aws-cdk/aws-autoscaling.Schedule",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/schedule.ts",
          "line": 37
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schedule.ts",
        "line": 4
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a schedule from a set of cron fields."
          },
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 18
          },
          "name": "cron",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.CronOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.Schedule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "http://crontab.org/",
            "stability": "stable",
            "summary": "Construct a schedule from a literal schedule expression."
          },
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 11
          },
          "name": "expression",
          "parameters": [
            {
              "docs": {
                "remarks": "Must be in a format that AutoScaling will recognize",
                "summary": "The expression to use."
              },
              "name": "expression",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.Schedule"
            }
          },
          "static": true
        }
      ],
      "name": "Schedule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Retrieve the expression for this schedule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 35
          },
          "name": "expressionString",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/schedule:Schedule"
    },
    "@aws-cdk/aws-autoscaling.ScheduledAction": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define a scheduled scaling action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const schedule: autoscaling.Schedule;\n\nconst scheduledAction = new autoscaling.ScheduledAction(this, 'MyScheduledAction', {\n  autoScalingGroup: autoScalingGroup,\n  schedule: schedule,\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: new Date(),\n  maxCapacity: 123,\n  minCapacity: 123,\n  startTime: new Date(),\n  timeZone: 'timeZone',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.ScheduledAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/scheduled-action.ts",
          "line": 93
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.ScheduledActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/scheduled-action.ts",
        "line": 92
      },
      "name": "ScheduledAction",
      "symbolId": "lib/scheduled-action:ScheduledAction"
    },
    "@aws-cdk/aws-autoscaling.ScheduledActionProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a scheduled action on an AutoScalingGroup.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const schedule: autoscaling.Schedule;\n\nconst scheduledActionProps: autoscaling.ScheduledActionProps = {\n  autoScalingGroup: autoScalingGroup,\n  schedule: schedule,\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: new Date(),\n  maxCapacity: 123,\n  minCapacity: 123,\n  startTime: new Date(),\n  timeZone: 'timeZone',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.ScheduledActionProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BasicScheduledActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/scheduled-action.ts",
        "line": 82
      },
      "name": "ScheduledActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The AutoScalingGroup to apply the scheduled actions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 86
          },
          "name": "autoScalingGroup",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        }
      ],
      "symbolId": "lib/scheduled-action:ScheduledActionProps"
    },
    "@aws-cdk/aws-autoscaling.Signals": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});",
        "remarks": "If you do configure waiting for signals, you should make sure the instances\ninvoke `cfn-signal` somewhere in their UserData to signal that they have\nstarted up (either successfully or unsuccessfully).\n\nSignals are used both during intial creation and subsequent updates.",
        "stability": "stable",
        "summary": "Configure whether the AutoScalingGroup waits for signals."
      },
      "fqn": "@aws-cdk/aws-autoscaling.Signals",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 407
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Helper to render the actual creation policy, as the logic between them is quite similar."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 466
          },
          "name": "doRender",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.SignalsOptions"
              }
            },
            {
              "name": "count",
              "optional": true,
              "type": {
                "primitive": "number"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.CfnCreationPolicy"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Render the ASG's CreationPolicy."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 461
          },
          "name": "renderCreationPolicy",
          "parameters": [
            {
              "name": "renderOptions",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.RenderSignalsOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.CfnCreationPolicy"
            }
          }
        },
        {
          "docs": {
            "remarks": "If no desiredCapacity has been configured, wait for minCapacity signals intead.\n\nThis number is used during initial creation and during replacing updates.\nDuring rolling updates, all updated instances must send a signal.",
            "stability": "stable",
            "summary": "Wait for the desiredCapacity of the AutoScalingGroup amount of signals to have been received."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 416
          },
          "name": "waitForAll",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.SignalsOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.Signals"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "You should send one signal per instance, so this represents the number of\ninstances to wait for.\n\nThis number is used during initial creation and during replacing updates.\nDuring rolling updates, all updated instances must send a signal.",
            "stability": "stable",
            "summary": "Wait for a specific amount of signals to have been received."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 449
          },
          "name": "waitForCount",
          "parameters": [
            {
              "name": "count",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.SignalsOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.Signals"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This number is used during initial creation and during replacing updates.\nDuring rolling updates, all updated instances must send a signal.",
            "stability": "stable",
            "summary": "Wait for the minCapacity of the AutoScalingGroup amount of signals to have been received."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 431
          },
          "name": "waitForMinCapacity",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.SignalsOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.Signals"
            }
          },
          "static": true
        }
      ],
      "name": "Signals",
      "symbolId": "lib/auto-scaling-group:Signals"
    },
    "@aws-cdk/aws-autoscaling.SignalsOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});",
        "stability": "stable",
        "summary": "Customization options for Signal handling."
      },
      "fqn": "@aws-cdk/aws-autoscaling.SignalsOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 501
      },
      "name": "SignalsOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "100",
            "remarks": "If this number is less than 100, a percentage of signals may be failure\nsignals while still succeeding the creation or update in CloudFormation.",
            "stability": "stable",
            "summary": "The percentage of signals that need to be successful."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 510
          },
          "name": "minSuccessPercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "remarks": "This should reflect how long it takes your instances to start up\n(including instance start time and instance initialization time).",
            "stability": "stable",
            "summary": "How long to wait for the signals to be sent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 520
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:SignalsOptions"
    },
    "@aws-cdk/aws-autoscaling.StepScalingAction": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "remarks": "This kind of scaling policy adjusts the target capacity in configurable\nsteps. The size of the step is configurable based on the metric's distance\nto its alarm threshold.\n\nThis Action must be used as the target of a CloudWatch alarm to take effect.",
        "stability": "stable",
        "summary": "Define a step scaling action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nconst stepScalingAction = new autoscaling.StepScalingAction(this, 'MyStepScalingAction', {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.StepScalingAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/step-scaling-action.ts",
          "line": 75
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.StepScalingActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 67
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add an adjusment interval to the ScalingAction."
          },
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 95
          },
          "name": "addAdjustment",
          "parameters": [
            {
              "name": "adjustment",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.AdjustmentTier"
              }
            }
          ]
        }
      ],
      "name": "StepScalingAction",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "ARN of the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 71
          },
          "name": "scalingPolicyArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/step-scaling-action:StepScalingAction"
    },
    "@aws-cdk/aws-autoscaling.StepScalingActionProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a scaling policy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nconst stepScalingActionProps: autoscaling.StepScalingActionProps = {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.StepScalingActionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 13
      },
      "name": "StepScalingActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "ChangeInCapacity",
            "stability": "stable",
            "summary": "How the adjustment numbers are interpreted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 38
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.AdjustmentType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The auto scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 17
          },
          "name": "autoScalingGroup",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The default cooldown configured on the AutoScalingGroup",
            "stability": "stable",
            "summary": "Period after a scaling completes before another scaling activity can start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 24
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Same as the cooldown",
            "stability": "stable",
            "summary": "Estimated time until a newly launched instance can send metrics to CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 31
          },
          "name": "estimatedInstanceWarmup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Average",
            "stability": "stable",
            "summary": "The aggregation type for the CloudWatch metrics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 55
          },
          "name": "metricAggregationType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.MetricAggregationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No minimum scaling effect",
            "remarks": "Only when using AdjustmentType = PercentChangeInCapacity, this number controls\nthe minimum absolute effect size.",
            "stability": "stable",
            "summary": "Minimum absolute number to adjust capacity with as result of percentage scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 48
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/step-scaling-action:StepScalingActionProps"
    },
    "@aws-cdk/aws-autoscaling.StepScalingPolicy": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "remarks": "You can specify the scaling behavior for various values of the metric.\n\nImplemented using one or more CloudWatch alarms and Step Scaling Policies.",
        "stability": "stable",
        "summary": "Define a acaling strategy which scales depending on absolute values of some metric.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\n\nconst stepScalingPolicy = new autoscaling.StepScalingPolicy(this, 'MyStepScalingPolicy', {\n  autoScalingGroup: autoScalingGroup,\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  evaluationPeriods: 123,\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.StepScalingPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/step-scaling-policy.ts",
          "line": 96
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.StepScalingPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 90
      },
      "name": "StepScalingPolicy",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 92
          },
          "name": "lowerAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.StepScalingAction"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 91
          },
          "name": "lowerAlarm",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 94
          },
          "name": "upperAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.StepScalingAction"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 93
          },
          "name": "upperAlarm",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
          }
        }
      ],
      "symbolId": "lib/step-scaling-policy:StepScalingPolicy"
    },
    "@aws-cdk/aws-autoscaling.StepScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\n\nconst stepScalingPolicyProps: autoscaling.StepScalingPolicyProps = {\n  autoScalingGroup: autoScalingGroup,\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  evaluationPeriods: 123,\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.StepScalingPolicyProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 76
      },
      "name": "StepScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The auto scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 80
          },
          "name": "autoScalingGroup",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        }
      ],
      "symbolId": "lib/step-scaling-policy:StepScalingPolicyProps"
    },
    "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\n\nconst targetTrackingScalingPolicy = new autoscaling.TargetTrackingScalingPolicy(this, 'MyTargetTrackingScalingPolicy', {\n  autoScalingGroup: autoScalingGroup,\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  customMetric: metric,\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  predefinedMetric: autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/target-tracking-scaling-policy.ts",
          "line": 116
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 105
      },
      "name": "TargetTrackingScalingPolicy",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "ARN of the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 109
          },
          "name": "scalingPolicyArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/target-tracking-scaling-policy:TargetTrackingScalingPolicy"
    },
    "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "remarks": "Adds the scalingTarget.",
        "stability": "stable",
        "summary": "Properties for a concrete TargetTrackingPolicy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\n\nconst targetTrackingScalingPolicyProps: autoscaling.TargetTrackingScalingPolicyProps = {\n  autoScalingGroup: autoScalingGroup,\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  customMetric: metric,\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  predefinedMetric: autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicyProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BasicTargetTrackingScalingPolicyProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 98
      },
      "name": "TargetTrackingScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 102
          },
          "name": "autoScalingGroup",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        }
      ],
      "symbolId": "lib/target-tracking-scaling-policy:TargetTrackingScalingPolicyProps"
    },
    "@aws-cdk/aws-autoscaling.UpdatePolicy": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "How existing instances should be updated.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nconst updatePolicy = autoscaling.UpdatePolicy.replacingUpdate();",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.UpdatePolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 526
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a new AutoScalingGroup and switch over to it."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 530
          },
          "name": "replacingUpdate",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.UpdatePolicy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Replace the instances in the AutoScalingGroup one by one, or in batches."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 543
          },
          "name": "rollingUpdate",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.RollingUpdateOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.UpdatePolicy"
            }
          },
          "static": true
        }
      ],
      "name": "UpdatePolicy",
      "symbolId": "lib/auto-scaling-group:UpdatePolicy"
    },
    "@aws-cdk/aws-autoscaling.UpdateType": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "deprecated": "Use UpdatePolicy instead",
        "stability": "deprecated",
        "summary": "The type of update to perform on instances in this AutoScalingGroup."
      },
      "fqn": "@aws-cdk/aws-autoscaling.UpdateType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1313
      },
      "members": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Don't do anything."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "remarks": "Builds a new AutoScalingGroup first, then delete the old one.",
            "stability": "deprecated",
            "summary": "Replace the entire AutoScalingGroup."
          },
          "name": "REPLACING_UPDATE"
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Replace the instances in the AutoScalingGroup."
          },
          "name": "ROLLING_UPDATE"
        }
      ],
      "name": "UpdateType",
      "symbolId": "lib/auto-scaling-group:UpdateType"
    }
  },
  "version": "1.137.0",
  "fingerprint": "**********"
}
