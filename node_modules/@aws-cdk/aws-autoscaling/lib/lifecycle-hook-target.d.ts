import { LifecycleHook } from './lifecycle-hook';
import * as iam from '@aws-cdk/aws-iam';
import * as constructs from 'constructs';
/**
 * Options needed to bind a target to a lifecycle hook.
 *
 * [disable-awslint:ref-via-interface] The lifecycle hook to attach to and an IRole to use
 *
 * @stability stable
 */
export interface BindHookTargetOptions {
    /**
     * The lifecycle hook to attach to.
     *
     * [disable-awslint:ref-via-interface]
     *
     * @stability stable
     */
    readonly lifecycleHook: LifecycleHook;
    /**
     * The role to use when attaching to the lifecycle hook.
     *
     * [disable-awslint:ref-via-interface]
     *
     * @default : a role is not created unless the target arn is specified
     * @stability stable
     */
    readonly role?: iam.IRole;
}
/**
 * Result of binding a lifecycle hook to a target.
 *
 * @stability stable
 */
export interface LifecycleHookTargetConfig {
    /**
     * The IRole that was used to bind the lifecycle hook to the target.
     *
     * @stability stable
     */
    readonly createdRole: iam.IRole;
    /**
     * The targetArn that the lifecycle hook was bound to.
     *
     * @stability stable
     */
    readonly notificationTargetArn: string;
}
/**
 * Interface for autoscaling lifecycle hook targets.
 *
 * @stability stable
 */
export interface ILifecycleHookTarget {
    /**
     * Called when this object is used as the target of a lifecycle hook.
     *
     * @param options [disable-awslint:ref-via-interface] The lifecycle hook to attach to and a role to use.
     * @stability stable
     */
    bind(scope: constructs.Construct, options: BindHookTargetOptions): LifecycleHookTargetConfig;
}
