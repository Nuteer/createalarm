{
  "version": "2",
  "toolVersion": "1.47.0",
  "snippets": {
    "6f17277e3ea57a4a2ce9bc4556e839110d65eb44b1c9a80dd833278d0ed9684d": {
      "translations": {
        "python": {
          "source": "from aws_cdk.core import CustomResource\nimport aws_cdk.aws_logs as logs\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.custom_resources as cr\n\non_event = lambda_.Function(self, \"MyHandler\")\n\nmy_role = iam.Role(self, \"MyRole\")\n\nmy_provider = cr.Provider(self, \"MyProvider\",\n    on_event_handler=on_event,\n    is_complete_handler=is_complete,  # optional async \"waiter\"\n    log_retention=logs.RetentionDays.ONE_DAY,  # default is INFINITE\n    role=my_role\n)\n\nCustomResource(self, \"Resource1\", service_token=my_provider.service_token)\nCustomResource(self, \"Resource2\", service_token=my_provider.service_token)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK;\nusing Amazon.CDK.AWS.Logs;\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK.CustomResources;\n\nvar onEvent = new lambda.Function(this, \"MyHandler\", new Struct { });\n\nRole myRole = new Role(this, \"MyRole\", new RoleProps { });\n\nProvider myProvider = new Provider(this, \"MyProvider\", new ProviderProps {\n    OnEventHandler = onEvent,\n    IsCompleteHandler = isComplete,  // optional async \"waiter\"\n    LogRetention = RetentionDays.ONE_DAY,  // default is INFINITE\n    Role = myRole\n});\n\nnew CustomResource(this, \"Resource1\", new CustomResourceProps { ServiceToken = myProvider.ServiceToken });\nnew CustomResource(this, \"Resource2\", new CustomResourceProps { ServiceToken = myProvider.ServiceToken });",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.core.CustomResource;\nimport software.amazon.awscdk.services.logs.*;\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.customresources.*;\n\nObject onEvent = Function.Builder.create(this, \"MyHandler\").build();\n\nRole myRole = Role.Builder.create(this, \"MyRole\").build();\n\nProvider myProvider = Provider.Builder.create(this, \"MyProvider\")\n        .onEventHandler(onEvent)\n        .isCompleteHandler(isComplete) // optional async \"waiter\"\n        .logRetention(RetentionDays.ONE_DAY) // default is INFINITE\n        .role(myRole)\n        .build();\n\nCustomResource.Builder.create(this, \"Resource1\").serviceToken(myProvider.getServiceToken()).build();\nCustomResource.Builder.create(this, \"Resource2\").serviceToken(myProvider.getServiceToken()).build();",
          "version": "1"
        },
        "$": {
          "source": "import { CustomResource } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\n\nconst onEvent = new lambda.Function(this, 'MyHandler', { /* ... */ });\n\nconst myRole = new iam.Role(this, 'MyRole', { /* ... */ });\n\nconst myProvider = new cr.Provider(this, 'MyProvider', {\n  onEventHandler: onEvent,\n  isCompleteHandler: isComplete,        // optional async \"waiter\"\n  logRetention: logs.RetentionDays.ONE_DAY,   // default is INFINITE\n  role: myRole, // must be assumable by the `lambda.amazonaws.com` service principal\n});\n\nnew CustomResource(this, 'Resource1', { serviceToken: myProvider.serviceToken });\nnew CustomResource(this, 'Resource2', { serviceToken: myProvider.serviceToken });",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/custom-resources"
        },
        "field": {
          "field": "markdown",
          "line": 33
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/aws-iam.Role",
        "@aws-cdk/aws-iam.RoleProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-logs.RetentionDays",
        "@aws-cdk/aws-logs.RetentionDays#ONE_DAY",
        "@aws-cdk/core.CustomResource",
        "@aws-cdk/core.CustomResourceProps",
        "@aws-cdk/custom-resources.Provider",
        "@aws-cdk/custom-resources.Provider#serviceToken",
        "@aws-cdk/custom-resources.ProviderProps"
      ],
      "fullSource": "import { CustomResource } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\n\nconst onEvent = new lambda.Function(this, 'MyHandler', { /* ... */ });\n\nconst myRole = new iam.Role(this, 'MyRole', { /* ... */ });\n\nconst myProvider = new cr.Provider(this, 'MyProvider', {\n  onEventHandler: onEvent,\n  isCompleteHandler: isComplete,        // optional async \"waiter\"\n  logRetention: logs.RetentionDays.ONE_DAY,   // default is INFINITE\n  role: myRole, // must be assumable by the `lambda.amazonaws.com` service principal\n});\n\nnew CustomResource(this, 'Resource1', { serviceToken: myProvider.serviceToken });\nnew CustomResource(this, 'Resource2', { serviceToken: myProvider.serviceToken });",
      "syntaxKindCounter": {
        "10": 9,
        "75": 31,
        "104": 5,
        "193": 5,
        "194": 7,
        "197": 5,
        "225": 3,
        "226": 2,
        "242": 3,
        "243": 3,
        "254": 4,
        "255": 4,
        "256": 3,
        "257": 1,
        "258": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "340299e40c7add5f9c8ec4194b9defb26ebd52383968afcdda46106be5be2c0e"
    },
    "4cbe80e47907214e962d3485aecb9d95b672dd717a282354cebca2f9725615e9": {
      "translations": {
        "python": {
          "source": "lambda_.Function(self, \"OnEventHandler\",\n    # ...\n    initial_policy=[\n        iam.PolicyStatement(actions=[\"s3:GetObject*\"], resources=[\"*\"])\n    ]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new lambda.Function(this, \"OnEventHandler\", new Struct {\n    // ...\n    InitialPolicy = new [] {\n        new iam.PolicyStatement(new Struct { Actions = new [] { \"s3:GetObject*\" }, Resources = new [] { \"*\" } }) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Function.Builder.create(this, \"OnEventHandler\")\n        // ...\n        .initialPolicy(List.of(\n            PolicyStatement.Builder.create().actions(List.of(\"s3:GetObject*\")).resources(List.of(\"*\")).build()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new lambda.Function(this, 'OnEventHandler', {\n  // ...\n  initialPolicy: [\n    new iam.PolicyStatement({ actions: [ 's3:GetObject*' ], resources: [ '*' ] })\n  ]\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/custom-resources"
        },
        "field": {
          "field": "markdown",
          "line": 275
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "new lambda.Function(this, 'OnEventHandler', {\n  // ...\n  initialPolicy: [\n    new iam.PolicyStatement({ actions: [ 's3:GetObject*' ], resources: [ '*' ] })\n  ]\n});",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "104": 1,
        "192": 3,
        "193": 2,
        "194": 2,
        "197": 2,
        "226": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "d5116aaddede6f02f9a957bf419e3bb84f7954b7f26fc13974d0c4f2cb174559": {
      "translations": {
        "python": {
          "source": "S3File(self, \"MyFile\",\n    bucket=my_bucket,\n    object_key=\"folder/file1.txt\",  # optional\n    content=\"hello!\",\n    public=True\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new S3File(this, \"MyFile\", new Struct {\n    Bucket = myBucket,\n    ObjectKey = \"folder/file1.txt\",  // optional\n    Content = \"hello!\",\n    Public = true\n});",
          "version": "1"
        },
        "java": {
          "source": "S3File.Builder.create(this, \"MyFile\")\n        .bucket(myBucket)\n        .objectKey(\"folder/file1.txt\") // optional\n        .content(\"hello!\")\n        .public(true)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new S3File(this, 'MyFile', {\n  bucket: myBucket,\n  objectKey: 'folder/file1.txt', // optional\n  content: 'hello!',\n  public: true // optional\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/custom-resources"
        },
        "field": {
          "field": "markdown",
          "line": 311
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "new S3File(this, 'MyFile', {\n  bucket: myBucket,\n  objectKey: 'folder/file1.txt', // optional\n  content: 'hello!',\n  public: true // optional\n});",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "104": 1,
        "106": 1,
        "193": 1,
        "197": 1,
        "226": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "02158fefd823af89aab0d70bb024a4f0715b32f78a69cf07a5e4f187de7b1d7f": {
      "translations": {
        "python": {
          "source": "S3Assert(self, \"AssertMyFile\",\n    bucket=my_bucket,\n    object_key=\"myfile.txt\",\n    expected_content=\"foo bar\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new S3Assert(this, \"AssertMyFile\", new Struct {\n    Bucket = myBucket,\n    ObjectKey = \"myfile.txt\",\n    ExpectedContent = \"foo bar\"\n});",
          "version": "1"
        },
        "java": {
          "source": "S3Assert.Builder.create(this, \"AssertMyFile\")\n        .bucket(myBucket)\n        .objectKey(\"myfile.txt\")\n        .expectedContent(\"foo bar\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new S3Assert(this, 'AssertMyFile', {\n  bucket: myBucket,\n  objectKey: 'myfile.txt',\n  expectedContent: 'foo bar'\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/custom-resources"
        },
        "field": {
          "field": "markdown",
          "line": 336
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "new S3Assert(this, 'AssertMyFile', {\n  bucket: myBucket,\n  objectKey: 'myfile.txt',\n  expectedContent: 'foo bar'\n});",
      "syntaxKindCounter": {
        "10": 3,
        "75": 5,
        "104": 1,
        "193": 1,
        "197": 1,
        "226": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "a67b73d19723d1cd9b89c90305167daf0d79ebf9e9406ac845b256eb27683e66": {
      "translations": {
        "python": {
          "source": "my_provider = cr.Provider(self, \"MyProvider\",\n    on_event_handler=on_event,\n    is_complete_handler=is_complete,\n    log_retention=logs.RetentionDays.ONE_DAY,\n    role=my_role,\n    provider_function_name=\"the-lambda-name\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "var myProvider = new cr.Provider(this, \"MyProvider\", new Struct {\n    OnEventHandler = onEvent,\n    IsCompleteHandler = isComplete,\n    LogRetention = logs.RetentionDays.ONE_DAY,\n    Role = myRole,\n    ProviderFunctionName = \"the-lambda-name\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Object myProvider = Provider.Builder.create(this, \"MyProvider\")\n        .onEventHandler(onEvent)\n        .isCompleteHandler(isComplete)\n        .logRetention(logs.getRetentionDays().getONE_DAY())\n        .role(myRole)\n        .providerFunctionName(\"the-lambda-name\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "\nconst myProvider = new cr.Provider(this, 'MyProvider', {\n  onEventHandler: onEvent,\n  isCompleteHandler: isComplete,\n  logRetention: logs.RetentionDays.ONE_DAY,\n  role: myRole,\n  providerFunctionName: 'the-lambda-name',   // Optional\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/custom-resources"
        },
        "field": {
          "field": "markdown",
          "line": 357
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "\nconst myProvider = new cr.Provider(this, 'MyProvider', {\n  onEventHandler: onEvent,\n  isCompleteHandler: isComplete,\n  logRetention: logs.RetentionDays.ONE_DAY,\n  role: myRole,\n  providerFunctionName: 'the-lambda-name',   // Optional\n});",
      "syntaxKindCounter": {
        "10": 2,
        "75": 14,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "2ea5e6a210ad9c91ce80f24737add692965f742d624797a3cbaa50f94e9b4efb": {
      "translations": {
        "python": {
          "source": "aws_custom1 = AwsCustomResource(self, \"API1\",\n    on_create={\n        \"service\": \"...\",\n        \"action\": \"...\",\n        \"physical_resource_id\": PhysicalResourceId.of(\"...\")\n    },\n    policy=AwsCustomResourcePolicy.from_sdk_calls(resources=AwsCustomResourcePolicy.ANY_RESOURCE)\n)\n\naws_custom2 = AwsCustomResource(self, \"API2\",\n    on_create={\n        \"service\": \"...\",\n        \"action\": \"...\",\n        \"parameters\": {\n            \"text\": aws_custom1.get_response_field(\"Items.0.text\")\n        },\n        \"physical_resource_id\": PhysicalResourceId.of(\"...\")\n    },\n    policy=AwsCustomResourcePolicy.from_sdk_calls(resources=AwsCustomResourcePolicy.ANY_RESOURCE)\n)",
          "version": "1"
        },
        "csharp": {
          "source": "var awsCustom1 = new AwsCustomResource(this, \"API1\", new Struct {\n    OnCreate = new Struct {\n        Service = \"...\",\n        Action = \"...\",\n        PhysicalResourceId = PhysicalResourceId.Of(\"...\")\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new Struct { Resources = AwsCustomResourcePolicy.ANY_RESOURCE })\n});\n\nvar awsCustom2 = new AwsCustomResource(this, \"API2\", new Struct {\n    OnCreate = new Struct {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Struct {\n            Text = awsCustom1.GetResponseField(\"Items.0.text\")\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"...\")\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new Struct { Resources = AwsCustomResourcePolicy.ANY_RESOURCE })\n});",
          "version": "1"
        },
        "java": {
          "source": "Object awsCustom1 = AwsCustomResource.Builder.create(this, \"API1\")\n        .onCreate(Map.of(\n                \"service\", \"...\",\n                \"action\", \"...\",\n                \"physicalResourceId\", PhysicalResourceId.of(\"...\")))\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(Map.of(\"resources\", AwsCustomResourcePolicy.getANY_RESOURCE())))\n        .build();\n\nObject awsCustom2 = AwsCustomResource.Builder.create(this, \"API2\")\n        .onCreate(Map.of(\n                \"service\", \"...\",\n                \"action\", \"...\",\n                \"parameters\", Map.of(\n                        \"text\", awsCustom1.getResponseField(\"Items.0.text\")),\n                \"physicalResourceId\", PhysicalResourceId.of(\"...\")))\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(Map.of(\"resources\", AwsCustomResourcePolicy.getANY_RESOURCE())))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const awsCustom1 = new AwsCustomResource(this, 'API1', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    physicalResourceId: PhysicalResourceId.of('...')\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n});\n\nconst awsCustom2 = new AwsCustomResource(this, 'API2', {\n  onCreate: {\n    service: '...',\n    action: '...'\n    parameters: {\n      text: awsCustom1.getResponseField('Items.0.text')\n    },\n    physicalResourceId: PhysicalResourceId.of('...')\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/custom-resources"
        },
        "field": {
          "field": "markdown",
          "line": 410
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "const awsCustom1 = new AwsCustomResource(this, 'API1', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    physicalResourceId: PhysicalResourceId.of('...')\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n});\n\nconst awsCustom2 = new AwsCustomResource(this, 'API2', {\n  onCreate: {\n    service: '...',\n    action: '...'\n    parameters: {\n      text: awsCustom1.getResponseField('Items.0.text')\n    },\n    physicalResourceId: PhysicalResourceId.of('...')\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n})",
      "syntaxKindCounter": {
        "10": 9,
        "75": 32,
        "104": 2,
        "193": 7,
        "194": 7,
        "196": 5,
        "197": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "98ee7e4a93d9b4296d7ff3e43ab2cdd6b0ad1f6ac51d124f1aa1ac93fb27ec2d": {
      "translations": {
        "python": {
          "source": "aws_custom = AwsCustomResource(self, \"...\", {\n    \"on_create\": {\n        \"service\": \"...\",\n        \"action\": \"...\",\n        \"parameters\": {\n            \"text\": \"...\"\n        },\n        \"physical_resource_id\": PhysicalResourceId.of(\"...\")\n    },\n    \"on_update\": {\n        \"service\": \"...\",\n        \"action\": \"...\".parameters\n    }\n},\n    text=\"...\",\n    resource_id=PhysicalResourceIdReference()\n)policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})",
          "version": "1"
        },
        "csharp": {
          "source": "var awsCustom = new AwsCustomResource(this, \"...\", new Struct {\n    OnCreate = new Struct {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Struct {\n            Text = \"...\"\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"...\")\n    },\n    OnUpdate = new Struct {\n        Service = \"...\",\n        Action = \"...\".Parameters\n    }\n}, new Struct {\n    Text = \"...\",\n    ResourceId = new PhysicalResourceIdReference()\n});policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})",
          "version": "1"
        },
        "java": {
          "source": "Object awsCustom = AwsCustomResource.Builder.create(this, \"...\", Map.of(\n        \"onCreate\", Map.of(\n                \"service\", \"...\",\n                \"action\", \"...\",\n                \"parameters\", Map.of(\n                        \"text\", \"...\"),\n                \"physicalResourceId\", PhysicalResourceId.of(\"...\")),\n        \"onUpdate\", Map.of(\n                \"service\", \"...\",\n                \"action\", \"...\".getParameters())))\n.text(\"...\")\n.resourceId(new PhysicalResourceIdReference())\n.build();policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})",
          "version": "1"
        },
        "$": {
          "source": "const awsCustom = new AwsCustomResource(this, '...', {\n  onCreate: {\n    service: '...',\n    action: '...'\n    parameters: {\n      text: '...'\n    },\n    physicalResourceId: PhysicalResourceId.of('...')\n  },\n  onUpdate: {\n    service: '...',\n    action: '...'.\n    parameters: {\n      text: '...',\n      resourceId: new PhysicalResourceIdReference()\n    }\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/custom-resources"
        },
        "field": {
          "field": "markdown",
          "line": 437
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "const awsCustom = new AwsCustomResource(this, '...', {\n  onCreate: {\n    service: '...',\n    action: '...'\n    parameters: {\n      text: '...'\n    },\n    physicalResourceId: PhysicalResourceId.of('...')\n  },\n  onUpdate: {\n    service: '...',\n    action: '...'.\n    parameters: {\n      text: '...',\n      resourceId: new PhysicalResourceIdReference()\n    }\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n})",
      "syntaxKindCounter": {
        "10": 8,
        "75": 23,
        "104": 1,
        "193": 6,
        "194": 4,
        "196": 2,
        "197": 2,
        "225": 1,
        "226": 1,
        "238": 1,
        "242": 1,
        "243": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "aa53d3f49ce3be85d0c3d5863339136cd24122c5547395135506bb0ce2a40c3e": {
      "translations": {
        "python": {
          "source": "AwsCustomResource(self, \"Customized\",\n    # other props here\n    role=my_role,  # must be assumable by the `lambda.amazonaws.com` service principal\n    timeout=cdk.Duration.minutes(10),  # defaults to 2 minutes\n    log_retention=logs.RetentionDays.ONE_WEEK,  # defaults to never delete logs\n    function_name=\"my-custom-name\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new AwsCustomResource(this, \"Customized\", new Struct {\n    // other props here\n    Role = myRole,  // must be assumable by the `lambda.amazonaws.com` service principal\n    Timeout = cdk.Duration.Minutes(10),  // defaults to 2 minutes\n    LogRetention = logs.RetentionDays.ONE_WEEK,  // defaults to never delete logs\n    FunctionName = \"my-custom-name\"\n});",
          "version": "1"
        },
        "java": {
          "source": "AwsCustomResource.Builder.create(this, \"Customized\")\n        // other props here\n        .role(myRole) // must be assumable by the `lambda.amazonaws.com` service principal\n        .timeout(cdk.Duration.minutes(10)) // defaults to 2 minutes\n        .logRetention(logs.getRetentionDays().getONE_WEEK()) // defaults to never delete logs\n        .functionName(\"my-custom-name\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new AwsCustomResource(this, 'Customized', {\n  // other props here\n  role: myRole, // must be assumable by the `lambda.amazonaws.com` service principal\n  timeout: cdk.Duration.minutes(10) // defaults to 2 minutes\n  logRetention: logs.RetentionDays.ONE_WEEK // defaults to never delete logs\n  functionName: 'my-custom-name', // defaults to a CloudFormation generated name\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/custom-resources"
        },
        "field": {
          "field": "markdown",
          "line": 477
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "new AwsCustomResource(this, 'Customized', {\n  // other props here\n  role: myRole, // must be assumable by the `lambda.amazonaws.com` service principal\n  timeout: cdk.Duration.minutes(10) // defaults to 2 minutes\n  logRetention: logs.RetentionDays.ONE_WEEK // defaults to never delete logs\n  functionName: 'my-custom-name', // defaults to a CloudFormation generated name\n})",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 12,
        "104": 1,
        "193": 1,
        "194": 4,
        "196": 1,
        "197": 1,
        "226": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "c5fd95794de9355934c063321ee51565bb98a04766547eb4e370acd572924375": {
      "translations": {
        "python": {
          "source": "AwsCustomResource(stack, \"ListObjects\",\n    on_create={\n        \"service\": \"s3\",\n        \"action\": \"listObjectsV2\",\n        \"parameters\": {\n            \"Bucket\": \"my-bucket\"\n        },\n        \"physical_resource_id\": PhysicalResourceId.of(\"id\"),\n        \"output_paths\": [\"Contents.0.Key\", \"Contents.1.Key\"]\n    },\n    policy=AwsCustomResourcePolicy.from_sdk_calls(resources=AwsCustomResourcePolicy.ANY_RESOURCE)\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new AwsCustomResource(stack, \"ListObjects\", new Struct {\n    OnCreate = new Struct {\n        Service = \"s3\",\n        Action = \"listObjectsV2\",\n        Parameters = new Struct {\n            Bucket = \"my-bucket\"\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"id\"),\n        OutputPaths = new [] { \"Contents.0.Key\", \"Contents.1.Key\" }\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new Struct { Resources = AwsCustomResourcePolicy.ANY_RESOURCE })\n});",
          "version": "1"
        },
        "java": {
          "source": "AwsCustomResource.Builder.create(stack, \"ListObjects\")\n        .onCreate(Map.of(\n                \"service\", \"s3\",\n                \"action\", \"listObjectsV2\",\n                \"parameters\", Map.of(\n                        \"Bucket\", \"my-bucket\"),\n                \"physicalResourceId\", PhysicalResourceId.of(\"id\"),\n                \"outputPaths\", List.of(\"Contents.0.Key\", \"Contents.1.Key\")))\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(Map.of(\"resources\", AwsCustomResourcePolicy.getANY_RESOURCE())))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new AwsCustomResource(stack, 'ListObjects', {\n  onCreate: {\n    service: 's3',\n    action: 'listObjectsV2',\n    parameters: {\n      Bucket: 'my-bucket',\n    },\n    physicalResourceId: PhysicalResourceId.of('id'),\n    outputPaths: ['Contents.0.Key', 'Contents.1.Key'], // Output only the two first keys\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({ resources: AwsCustomResourcePolicy.ANY_RESOURCE }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/custom-resources"
        },
        "field": {
          "field": "markdown",
          "line": 493
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "new AwsCustomResource(stack, 'ListObjects', {\n  onCreate: {\n    service: 's3',\n    action: 'listObjectsV2',\n    parameters: {\n      Bucket: 'my-bucket',\n    },\n    physicalResourceId: PhysicalResourceId.of('id'),\n    outputPaths: ['Contents.0.Key', 'Contents.1.Key'], // Output only the two first keys\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({ resources: AwsCustomResourcePolicy.ANY_RESOURCE }),\n});",
      "syntaxKindCounter": {
        "10": 7,
        "75": 17,
        "192": 1,
        "193": 4,
        "194": 3,
        "196": 2,
        "197": 1,
        "226": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "2325f423b713ff249dcfbf3b1f9d7accf3bd1239bc80ed9b95d8f8b0466894c0": {
      "translations": {
        "python": {
          "source": "verify_domain_identity = AwsCustomResource(self, \"VerifyDomainIdentity\",\n    on_create={\n        \"service\": \"SES\",\n        \"action\": \"verifyDomainIdentity\",\n        \"parameters\": {\n            \"Domain\": \"example.com\"\n        },\n        \"physical_resource_id\": PhysicalResourceId.from_response(\"VerificationToken\")\n    },\n    policy=AwsCustomResourcePolicy.from_sdk_calls(resources=AwsCustomResourcePolicy.ANY_RESOURCE)\n)\n\nroute53.TxtRecord(self, \"SESVerificationRecord\",\n    zone=zone,\n    record_name=\"_amazonses.example.com\",\n    values=[verify_domain_identity.get_response_field(\"VerificationToken\")]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "var verifyDomainIdentity = new AwsCustomResource(this, \"VerifyDomainIdentity\", new Struct {\n    OnCreate = new Struct {\n        Service = \"SES\",\n        Action = \"verifyDomainIdentity\",\n        Parameters = new Struct {\n            Domain = \"example.com\"\n        },\n        PhysicalResourceId = PhysicalResourceId.FromResponse(\"VerificationToken\")\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new Struct { Resources = AwsCustomResourcePolicy.ANY_RESOURCE })\n});\n\nnew route53.TxtRecord(this, \"SESVerificationRecord\", new Struct {\n    Zone = zone,\n    RecordName = \"_amazonses.example.com\",\n    Values = new [] { verifyDomainIdentity.GetResponseField(\"VerificationToken\") }\n});",
          "version": "1"
        },
        "java": {
          "source": "Object verifyDomainIdentity = AwsCustomResource.Builder.create(this, \"VerifyDomainIdentity\")\n        .onCreate(Map.of(\n                \"service\", \"SES\",\n                \"action\", \"verifyDomainIdentity\",\n                \"parameters\", Map.of(\n                        \"Domain\", \"example.com\"),\n                \"physicalResourceId\", PhysicalResourceId.fromResponse(\"VerificationToken\")))\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(Map.of(\"resources\", AwsCustomResourcePolicy.getANY_RESOURCE())))\n        .build();\n\nTxtRecord.Builder.create(this, \"SESVerificationRecord\")\n        .zone(zone)\n        .recordName(\"_amazonses.example.com\")\n        .values(List.of(verifyDomainIdentity.getResponseField(\"VerificationToken\")))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const verifyDomainIdentity = new AwsCustomResource(this, 'VerifyDomainIdentity', {\n  onCreate: {\n    service: 'SES',\n    action: 'verifyDomainIdentity',\n    parameters: {\n      Domain: 'example.com'\n    },\n    physicalResourceId: PhysicalResourceId.fromResponse('VerificationToken') // Use the token returned by the call as physical id\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n});\n\nnew route53.TxtRecord(this, 'SESVerificationRecord', {\n  zone,\n  recordName: `_amazonses.example.com`,\n  values: [verifyDomainIdentity.getResponseField('VerificationToken')]\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/custom-resources"
        },
        "field": {
          "field": "markdown",
          "line": 515
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "const verifyDomainIdentity = new AwsCustomResource(this, 'VerifyDomainIdentity', {\n  onCreate: {\n    service: 'SES',\n    action: 'verifyDomainIdentity',\n    parameters: {\n      Domain: 'example.com'\n    },\n    physicalResourceId: PhysicalResourceId.fromResponse('VerificationToken') // Use the token returned by the call as physical id\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n});\n\nnew route53.TxtRecord(this, 'SESVerificationRecord', {\n  zone,\n  recordName: `_amazonses.example.com`,\n  values: [verifyDomainIdentity.getResponseField('VerificationToken')]\n});",
      "syntaxKindCounter": {
        "10": 7,
        "14": 1,
        "75": 23,
        "104": 2,
        "192": 1,
        "193": 5,
        "194": 5,
        "196": 3,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 10,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "a4b2b224918dea8fd5651f60a51ec7c143064de89b581f26bd96cde172cc2166": {
      "translations": {
        "python": {
          "source": "get_parameter = AwsCustomResource(self, \"GetParameter\",\n    on_update={ # will also be called for a CREATE event\n        \"service\": \"SSM\",\n        \"action\": \"getParameter\",\n        \"parameters\": {\n            \"Name\": \"my-parameter\",\n            \"WithDecryption\": True\n        },\n        \"physical_resource_id\": PhysicalResourceId.of(Date.now().to_string())},\n    policy=AwsCustomResourcePolicy.from_sdk_calls(resources=AwsCustomResourcePolicy.ANY_RESOURCE)\n)\n\n# Use the value in another construct with\nget_parameter.get_response_field(\"Parameter.Value\")",
          "version": "1"
        },
        "csharp": {
          "source": "var getParameter = new AwsCustomResource(this, \"GetParameter\", new Struct {\n    OnUpdate = new Struct {  // will also be called for a CREATE event\n        Service = \"SSM\",\n        Action = \"getParameter\",\n        Parameters = new Struct {\n            Name = \"my-parameter\",\n            WithDecryption = true\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(Date.Now().ToString()) },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new Struct { Resources = AwsCustomResourcePolicy.ANY_RESOURCE })\n});\n\n// Use the value in another construct with\ngetParameter.GetResponseField(\"Parameter.Value\");",
          "version": "1"
        },
        "java": {
          "source": "Object getParameter = AwsCustomResource.Builder.create(this, \"GetParameter\")\n        .onUpdate(Map.of( // will also be called for a CREATE event\n                \"service\", \"SSM\",\n                \"action\", \"getParameter\",\n                \"parameters\", Map.of(\n                        \"Name\", \"my-parameter\",\n                        \"WithDecryption\", true),\n                \"physicalResourceId\", PhysicalResourceId.of(Date.now().toString())))\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(Map.of(\"resources\", AwsCustomResourcePolicy.getANY_RESOURCE())))\n        .build();\n\n// Use the value in another construct with\ngetParameter.getResponseField(\"Parameter.Value\");",
          "version": "1"
        },
        "$": {
          "source": "const getParameter = new AwsCustomResource(this, 'GetParameter', {\n  onUpdate: { // will also be called for a CREATE event\n    service: 'SSM',\n    action: 'getParameter',\n    parameters: {\n      Name: 'my-parameter',\n      WithDecryption: true\n    },\n    physicalResourceId: PhysicalResourceId.of(Date.now().toString()) // Update physical id to always fetch the latest version\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n});\n\n// Use the value in another construct with\ngetParameter.getResponseField('Parameter.Value')",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/custom-resources"
        },
        "field": {
          "field": "markdown",
          "line": 537
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "const getParameter = new AwsCustomResource(this, 'GetParameter', {\n  onUpdate: { // will also be called for a CREATE event\n    service: 'SSM',\n    action: 'getParameter',\n    parameters: {\n      Name: 'my-parameter',\n      WithDecryption: true\n    },\n    physicalResourceId: PhysicalResourceId.of(Date.now().toString()) // Update physical id to always fetch the latest version\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n});\n\n// Use the value in another construct with\ngetParameter.getResponseField('Parameter.Value')",
      "syntaxKindCounter": {
        "10": 5,
        "75": 22,
        "104": 1,
        "106": 1,
        "193": 4,
        "194": 6,
        "196": 5,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "f8b9c8863706465de3b4820d2f6673fccabe0c5872935b8fa813eb3a25f58f40": {
      "translations": {
        "python": {
          "source": "get_parameter = AwsCustomResource(self, \"AssociateVPCWithHostedZone\",\n    on_create={\n        \"assumed_role_arn\": \"arn:aws:iam::OTHERACCOUNT:role/CrossAccount/ManageHostedZoneConnections\",\n        \"service\": \"Route53\",\n        \"action\": \"associateVPCWithHostedZone\",\n        \"parameters\": {\n            \"HostedZoneId\": \"hz-123\",\n            \"VPC\": {\n                \"VPCId\": \"vpc-123\",\n                \"VPCRegion\": \"region-for-vpc\"\n            }\n        },\n        \"physical_resource_id\": PhysicalResourceId.of(\"${vpcStack.SharedVpc.VpcId}-${vpcStack.Region}-${PrivateHostedZone.HostedZoneId}\")\n    },\n    # Will ignore any resource and use the assumedRoleArn as resource and 'sts:AssumeRole' for service:action\n    policy=AwsCustomResourcePolicy.from_sdk_calls(resources=AwsCustomResourcePolicy.ANY_RESOURCE)\n)",
          "version": "1"
        },
        "csharp": {
          "source": "var getParameter = new AwsCustomResource(this, \"AssociateVPCWithHostedZone\", new Struct {\n    OnCreate = new Struct {\n        AssumedRoleArn = \"arn:aws:iam::OTHERACCOUNT:role/CrossAccount/ManageHostedZoneConnections\",\n        Service = \"Route53\",\n        Action = \"associateVPCWithHostedZone\",\n        Parameters = new Struct {\n            HostedZoneId = \"hz-123\",\n            VPC = new Struct {\n                VPCId = \"vpc-123\",\n                VPCRegion = \"region-for-vpc\"\n            }\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"${vpcStack.SharedVpc.VpcId}-${vpcStack.Region}-${PrivateHostedZone.HostedZoneId}\")\n    },\n    //Will ignore any resource and use the assumedRoleArn as resource and 'sts:AssumeRole' for service:action\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new Struct { Resources = AwsCustomResourcePolicy.ANY_RESOURCE })\n});",
          "version": "1"
        },
        "java": {
          "source": "Object getParameter = AwsCustomResource.Builder.create(this, \"AssociateVPCWithHostedZone\")\n        .onCreate(Map.of(\n                \"assumedRoleArn\", \"arn:aws:iam::OTHERACCOUNT:role/CrossAccount/ManageHostedZoneConnections\",\n                \"service\", \"Route53\",\n                \"action\", \"associateVPCWithHostedZone\",\n                \"parameters\", Map.of(\n                        \"HostedZoneId\", \"hz-123\",\n                        \"VPC\", Map.of(\n                                \"VPCId\", \"vpc-123\",\n                                \"VPCRegion\", \"region-for-vpc\")),\n                \"physicalResourceId\", PhysicalResourceId.of(\"${vpcStack.SharedVpc.VpcId}-${vpcStack.Region}-${PrivateHostedZone.HostedZoneId}\")))\n        //Will ignore any resource and use the assumedRoleArn as resource and 'sts:AssumeRole' for service:action\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(Map.of(\"resources\", AwsCustomResourcePolicy.getANY_RESOURCE())))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const getParameter = new AwsCustomResource(this, 'AssociateVPCWithHostedZone', {\n  onCreate: {\n    assumedRoleArn: 'arn:aws:iam::OTHERACCOUNT:role/CrossAccount/ManageHostedZoneConnections',\n    service: 'Route53',\n    action: 'associateVPCWithHostedZone',\n    parameters: {\n      HostedZoneId: 'hz-123',\n      VPC: {\n\t\tVPCId: 'vpc-123',\n\t\tVPCRegion: 'region-for-vpc'\n      }\n    },\n    physicalResourceId: PhysicalResourceId.of('${vpcStack.SharedVpc.VpcId}-${vpcStack.Region}-${PrivateHostedZone.HostedZoneId}')\n  },\n  //Will ignore any resource and use the assumedRoleArn as resource and 'sts:AssumeRole' for service:action\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/custom-resources"
        },
        "field": {
          "field": "markdown",
          "line": 557
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "const getParameter = new AwsCustomResource(this, 'AssociateVPCWithHostedZone', {\n  onCreate: {\n    assumedRoleArn: 'arn:aws:iam::OTHERACCOUNT:role/CrossAccount/ManageHostedZoneConnections',\n    service: 'Route53',\n    action: 'associateVPCWithHostedZone',\n    parameters: {\n      HostedZoneId: 'hz-123',\n      VPC: {\n\t\tVPCId: 'vpc-123',\n\t\tVPCRegion: 'region-for-vpc'\n      }\n    },\n    physicalResourceId: PhysicalResourceId.of('${vpcStack.SharedVpc.VpcId}-${vpcStack.Region}-${PrivateHostedZone.HostedZoneId}')\n  },\n  //Will ignore any resource and use the assumedRoleArn as resource and 'sts:AssumeRole' for service:action\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n});",
      "syntaxKindCounter": {
        "10": 8,
        "75": 20,
        "104": 1,
        "193": 5,
        "194": 3,
        "196": 2,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "76b3134dd7c8646c22262036ed6d84c53b846d06cc824450091f9de7d469dcdb": {
      "translations": {
        "python": {
          "source": "provider = customresources.Provider(self, \"MyProvider\",\n    on_event_handler=on_event_handler,\n    is_complete_handler=is_complete_handler\n)\n\nCustomResource(self, \"MyResource\",\n    service_token=provider.service_token\n)",
          "version": "1"
        },
        "csharp": {
          "source": "Provider provider = new Provider(this, \"MyProvider\", new ProviderProps {\n    OnEventHandler = onEventHandler,\n    IsCompleteHandler = isCompleteHandler\n});\n\nnew CustomResource(this, \"MyResource\", new CustomResourceProps {\n    ServiceToken = provider.ServiceToken\n});",
          "version": "1"
        },
        "java": {
          "source": "Provider provider = Provider.Builder.create(this, \"MyProvider\")\n        .onEventHandler(onEventHandler)\n        .isCompleteHandler(isCompleteHandler)\n        .build();\n\nCustomResource.Builder.create(this, \"MyResource\")\n        .serviceToken(provider.getServiceToken())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const provider = new customresources.Provider(this, 'MyProvider', {\n  onEventHandler,\n  isCompleteHandler, // optional async waiter\n});\n\nnew CustomResource(this, 'MyResource', {\n  serviceToken: provider.serviceToken\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/custom-resources.Provider"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/core.CustomResource",
        "@aws-cdk/core.CustomResourceProps",
        "@aws-cdk/custom-resources.Provider",
        "@aws-cdk/custom-resources.Provider#serviceToken",
        "@aws-cdk/custom-resources.ProviderProps"
      ],
      "fullSource": "import * as cfn from '@aws-cdk/aws-cloudformation';\nimport * as customresources from '@aws-cdk/custom-resources';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport {\n  App,\n  Aws,\n  CfnCondition,\n  CfnDynamicReference,\n  CfnDynamicReferenceService,\n  CfnInclude,\n  CfnJson,\n  CfnMapping,\n  CfnOutput,\n  CfnParameter,\n  CfnResource,\n  CfnResourceProps,\n  ConcreteDependable,\n  Construct,\n  CustomResource,\n  CustomResourceProvider,\n  CustomResourceProviderRuntime,\n  DependableTrait,\n  Duration,\n  Fn,\n  IConstruct,\n  RemovalPolicy,\n  SecretValue,\n  Size,\n  SizeRoundingBehavior,\n  Stack,\n  StackProps,\n  Stage,\n  Token,\n} from '@aws-cdk/core';\n\ndeclare const app: App;\ndeclare const arn: 'arn:partition:service:region:account-id:resource-id';\ndeclare const cfnResource: CfnResource;\ndeclare const construct: Construct;\ndeclare const constructA: Construct;\ndeclare const constructB: Construct;\ndeclare const constructC: Construct;\ndeclare const functionProps: lambda.FunctionProps;\ndeclare const isCompleteHandler: lambda.Function;\ndeclare const myBucket: s3.IBucket;\ndeclare const myFunction: lambda.IFunction;\ndeclare const myTopic: sns.ITopic;\ndeclare const onEventHandler: lambda.Function;\ndeclare const resourceProps: CfnResourceProps;\n\ndeclare class MyStack extends Stack {}\ndeclare class YourStack extends Stack {}\n\nclass StackThatProvidesABucket extends Stack {\n  public readonly bucket!: s3.IBucket;\n}\n\ninterface StackThatExpectsABucketProps extends StackProps {\n  readonly bucket: s3.IBucket;\n}\n\nclass StackThatExpectsABucket extends Stack {\n  constructor(scope: Construct, id: string, props: StackThatExpectsABucketProps) {\n    super(scope, id, props);\n  }\n}\n\nclass fixture$construct extends Construct {\n  public constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new customresources.Provider(this, 'MyProvider', {\n  onEventHandler,\n  isCompleteHandler, // optional async waiter\n});\n\nnew CustomResource(this, 'MyResource', {\n  serviceToken: provider.serviceToken\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "104": 2,
        "193": 2,
        "194": 2,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1,
        "282": 2
      },
      "fqnsFingerprint": "f09844a6851851d3a0d04094fcc3cd7bbc49740d032be638baf1eac49058a951"
    },
    "806e499ac26d5859dcbd63a57bc0f78be35a485609fff18545d653ba3aaeeea7": {
      "translations": {
        "python": {
          "source": "provider = customresources.Provider(self, \"MyProvider\",\n    on_event_handler=on_event_handler,\n    is_complete_handler=is_complete_handler\n)\n\nCustomResource(self, \"MyResource\",\n    service_token=provider.service_token\n)",
          "version": "1"
        },
        "csharp": {
          "source": "Provider provider = new Provider(this, \"MyProvider\", new ProviderProps {\n    OnEventHandler = onEventHandler,\n    IsCompleteHandler = isCompleteHandler\n});\n\nnew CustomResource(this, \"MyResource\", new CustomResourceProps {\n    ServiceToken = provider.ServiceToken\n});",
          "version": "1"
        },
        "java": {
          "source": "Provider provider = Provider.Builder.create(this, \"MyProvider\")\n        .onEventHandler(onEventHandler)\n        .isCompleteHandler(isCompleteHandler)\n        .build();\n\nCustomResource.Builder.create(this, \"MyResource\")\n        .serviceToken(provider.getServiceToken())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const provider = new customresources.Provider(this, 'MyProvider', {\n  onEventHandler,\n  isCompleteHandler, // optional async waiter\n});\n\nnew CustomResource(this, 'MyResource', {\n  serviceToken: provider.serviceToken\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/custom-resources.ProviderProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/core.CustomResource",
        "@aws-cdk/core.CustomResourceProps",
        "@aws-cdk/custom-resources.Provider",
        "@aws-cdk/custom-resources.Provider#serviceToken",
        "@aws-cdk/custom-resources.ProviderProps"
      ],
      "fullSource": "import * as cfn from '@aws-cdk/aws-cloudformation';\nimport * as customresources from '@aws-cdk/custom-resources';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport {\n  App,\n  Aws,\n  CfnCondition,\n  CfnDynamicReference,\n  CfnDynamicReferenceService,\n  CfnInclude,\n  CfnJson,\n  CfnMapping,\n  CfnOutput,\n  CfnParameter,\n  CfnResource,\n  CfnResourceProps,\n  ConcreteDependable,\n  Construct,\n  CustomResource,\n  CustomResourceProvider,\n  CustomResourceProviderRuntime,\n  DependableTrait,\n  Duration,\n  Fn,\n  IConstruct,\n  RemovalPolicy,\n  SecretValue,\n  Size,\n  SizeRoundingBehavior,\n  Stack,\n  StackProps,\n  Stage,\n  Token,\n} from '@aws-cdk/core';\n\ndeclare const app: App;\ndeclare const arn: 'arn:partition:service:region:account-id:resource-id';\ndeclare const cfnResource: CfnResource;\ndeclare const construct: Construct;\ndeclare const constructA: Construct;\ndeclare const constructB: Construct;\ndeclare const constructC: Construct;\ndeclare const functionProps: lambda.FunctionProps;\ndeclare const isCompleteHandler: lambda.Function;\ndeclare const myBucket: s3.IBucket;\ndeclare const myFunction: lambda.IFunction;\ndeclare const myTopic: sns.ITopic;\ndeclare const onEventHandler: lambda.Function;\ndeclare const resourceProps: CfnResourceProps;\n\ndeclare class MyStack extends Stack {}\ndeclare class YourStack extends Stack {}\n\nclass StackThatProvidesABucket extends Stack {\n  public readonly bucket!: s3.IBucket;\n}\n\ninterface StackThatExpectsABucketProps extends StackProps {\n  readonly bucket: s3.IBucket;\n}\n\nclass StackThatExpectsABucket extends Stack {\n  constructor(scope: Construct, id: string, props: StackThatExpectsABucketProps) {\n    super(scope, id, props);\n  }\n}\n\nclass fixture$construct extends Construct {\n  public constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new customresources.Provider(this, 'MyProvider', {\n  onEventHandler,\n  isCompleteHandler, // optional async waiter\n});\n\nnew CustomResource(this, 'MyResource', {\n  serviceToken: provider.serviceToken\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "104": 2,
        "193": 2,
        "194": 2,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1,
        "282": 2
      },
      "fqnsFingerprint": "f09844a6851851d3a0d04094fcc3cd7bbc49740d032be638baf1eac49058a951"
    }
  }
}
