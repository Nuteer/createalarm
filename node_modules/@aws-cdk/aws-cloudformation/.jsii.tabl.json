{
  "version": "2",
  "toolVersion": "1.47.0",
  "snippets": {
    "04b41f4f3f93f72144e96e0020ee515e5e18eaf1c7305fea30b1cf3c3f8b5333": {
      "translations": {
        "python": {
          "source": "provider: new custom_resources.Provider({\n   onEventHandler: myOnEventLambda,\n   isCompleteHandler: myIsCompleteLambda, // optional\n});",
          "version": "1"
        },
        "csharp": {
          "source": "provider: new custom_resources.Provider({\n   onEventHandler: myOnEventLambda,\n   isCompleteHandler: myIsCompleteLambda, // optional\n});",
          "version": "1"
        },
        "java": {
          "source": "provider: new custom_resources.Provider({\n   onEventHandler: myOnEventLambda,\n   isCompleteHandler: myIsCompleteLambda, // optional\n});",
          "version": "1"
        },
        "$": {
          "source": "// use the provider framework from aws-cdk/custom-resources:\nprovider: new custom_resources.Provider({\n   onEventHandler: myOnEventLambda,\n   isCompleteHandler: myIsCompleteLambda, // optional\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "member",
          "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProps",
          "memberName": "provider"
        },
        "field": {
          "field": "markdown",
          "line": 8
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "// use the provider framework from aws-cdk/custom-resources:\nprovider: new custom_resources.Provider({\n   onEventHandler: myOnEventLambda,\n   isCompleteHandler: myIsCompleteLambda, // optional\n});",
      "syntaxKindCounter": {
        "75": 7,
        "193": 1,
        "194": 1,
        "197": 1,
        "226": 1,
        "238": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "1be59732266fc3170db0a37abf2e6a1d7da3e6f20047d73f74ca1ec217f8a2a8": {
      "translations": {
        "python": {
          "source": "provider: CustomResourceProvider.fromLambda(myFunction)",
          "version": "1"
        },
        "csharp": {
          "source": "provider: CustomResourceProvider.fromLambda(myFunction)",
          "version": "1"
        },
        "java": {
          "source": "provider: CustomResourceProvider.fromLambda(myFunction)",
          "version": "1"
        },
        "$": {
          "source": "// invoke an AWS Lambda function when a lifecycle event occurs:\nprovider: CustomResourceProvider.fromLambda(myFunction)",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "member",
          "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProps",
          "memberName": "provider"
        },
        "field": {
          "field": "markdown",
          "line": 16
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "// invoke an AWS Lambda function when a lifecycle event occurs:\nprovider: CustomResourceProvider.fromLambda(myFunction)",
      "syntaxKindCounter": {
        "75": 4,
        "194": 1,
        "196": 1,
        "226": 1,
        "238": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "f6f7c928d5120b2a2668a0874626e0820be9be4e556fbda8632e10d404cb1e5b": {
      "translations": {
        "python": {
          "source": "provider: CustomResourceProvider.fromTopic(myTopic)",
          "version": "1"
        },
        "csharp": {
          "source": "provider: CustomResourceProvider.fromTopic(myTopic)",
          "version": "1"
        },
        "java": {
          "source": "provider: CustomResourceProvider.fromTopic(myTopic)",
          "version": "1"
        },
        "$": {
          "source": "// publish lifecycle events to an SNS topic:\nprovider: CustomResourceProvider.fromTopic(myTopic)",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "member",
          "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProps",
          "memberName": "provider"
        },
        "field": {
          "field": "markdown",
          "line": 21
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "// publish lifecycle events to an SNS topic:\nprovider: CustomResourceProvider.fromTopic(myTopic)",
      "syntaxKindCounter": {
        "75": 4,
        "194": 1,
        "196": 1,
        "226": 1,
        "238": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "edb084834c686befa6bf016440efecc90bfcf213edce63517fad04e32da39c8c": {
      "translations": {
        "python": {
          "source": "class MyNestedStack(cfn.NestedStack):\n    def __init__(self, scope, id, *, parameters=None, timeout=None, notifications=None):\n        super().__init__(scope, id, parameters=parameters, timeout=timeout, notifications=notifications)\n\n        s3.Bucket(self, \"NestedBucket\")\n\nclass MyParentStack(Stack):\n    def __init__(self, scope, id, *, description=None, env=None, stackName=None, tags=None, synthesizer=None, terminationProtection=None, analyticsReporting=None):\n        super().__init__(scope, id, description=description, env=env, stackName=stackName, tags=tags, synthesizer=synthesizer, terminationProtection=terminationProtection, analyticsReporting=analyticsReporting)\n\n        MyNestedStack(self, \"Nested1\")\n        MyNestedStack(self, \"Nested2\")",
          "version": "1"
        },
        "csharp": {
          "source": "class MyNestedStack : NestedStack\n{\n    public MyNestedStack(Construct scope, string id, NestedStackProps? props=null) : base(scope, id, props)\n    {\n\n        new Bucket(this, \"NestedBucket\");\n    }\n}\n\nclass MyParentStack : Stack\n{\n    public MyParentStack(Construct scope, string id, StackProps? props=null) : base(scope, id, props)\n    {\n\n        new MyNestedStack(this, \"Nested1\");\n        new MyNestedStack(this, \"Nested2\");\n    }\n}",
          "version": "1"
        },
        "java": {
          "source": "public class MyNestedStack extends NestedStack {\n    public MyNestedStack(Construct scope, String id) {\n        this(scope, id, null);\n    }\n\n    public MyNestedStack(Construct scope, String id, NestedStackProps props) {\n        super(scope, id, props);\n\n        new Bucket(this, \"NestedBucket\");\n    }\n}\n\npublic class MyParentStack extends Stack {\n    public MyParentStack(Construct scope, String id) {\n        this(scope, id, null);\n    }\n\n    public MyParentStack(Construct scope, String id, StackProps props) {\n        super(scope, id, props);\n\n        new MyNestedStack(this, \"Nested1\");\n        new MyNestedStack(this, \"Nested2\");\n    }\n}",
          "version": "1"
        },
        "$": {
          "source": "class MyNestedStack extends cfn.NestedStack {\n  constructor(scope: Construct, id: string, props?: cfn.NestedStackProps) {\n    super(scope, id, props);\n\n    new s3.Bucket(this, 'NestedBucket');\n  }\n}\n\nclass MyParentStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new MyNestedStack(this, 'Nested1');\n    new MyNestedStack(this, 'Nested2');\n  }\n}",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudformation.NestedStack"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudformation.NestedStack",
        "@aws-cdk/aws-cloudformation.NestedStackProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.Stack",
        "@aws-cdk/core.StackProps"
      ],
      "fullSource": "import * as cfn from '@aws-cdk/aws-cloudformation';\nimport * as customresources from '@aws-cdk/custom-resources';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport {\n  App,\n  Aws,\n  CfnCondition,\n  CfnDynamicReference,\n  CfnDynamicReferenceService,\n  CfnInclude,\n  CfnJson,\n  CfnMapping,\n  CfnOutput,\n  CfnParameter,\n  CfnResource,\n  CfnResourceProps,\n  ConcreteDependable,\n  Construct,\n  CustomResource,\n  CustomResourceProvider,\n  CustomResourceProviderRuntime,\n  DependableTrait,\n  Duration,\n  Fn,\n  IConstruct,\n  RemovalPolicy,\n  SecretValue,\n  Size,\n  SizeRoundingBehavior,\n  Stack,\n  StackProps,\n  Stage,\n  Token,\n} from '@aws-cdk/core';\n\ndeclare const app: App;\ndeclare const arn: 'arn:partition:service:region:account-id:resource-id';\ndeclare const cfnResource: CfnResource;\ndeclare const construct: Construct;\ndeclare const constructA: Construct;\ndeclare const constructB: Construct;\ndeclare const constructC: Construct;\ndeclare const functionProps: lambda.FunctionProps;\ndeclare const isCompleteHandler: lambda.Function;\ndeclare const myBucket: s3.IBucket;\ndeclare const myFunction: lambda.IFunction;\ndeclare const myTopic: sns.ITopic;\ndeclare const onEventHandler: lambda.Function;\ndeclare const resourceProps: CfnResourceProps;\n\ndeclare class MyStack extends Stack {}\ndeclare class YourStack extends Stack {}\n\nclass StackThatProvidesABucket extends Stack {\n  public readonly bucket!: s3.IBucket;\n}\n\ninterface StackThatExpectsABucketProps extends StackProps {\n  readonly bucket: s3.IBucket;\n}\n\nclass StackThatExpectsABucket extends Stack {\n  constructor(scope: Construct, id: string, props: StackThatExpectsABucketProps) {\n    super(scope, id, props);\n  }\n}\n\nclass fixture$construct extends Construct {\n  public constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nclass MyNestedStack extends cfn.NestedStack {\n  constructor(scope: Construct, id: string, props?: cfn.NestedStackProps) {\n    super(scope, id, props);\n\n    new s3.Bucket(this, 'NestedBucket');\n  }\n}\n\nclass MyParentStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new MyNestedStack(this, 'Nested1');\n    new MyNestedStack(this, 'Nested2');\n  }\n}\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "57": 2,
        "75": 26,
        "102": 2,
        "104": 3,
        "143": 2,
        "153": 1,
        "156": 6,
        "162": 2,
        "169": 4,
        "194": 2,
        "196": 2,
        "197": 3,
        "216": 2,
        "223": 2,
        "226": 5,
        "245": 2,
        "279": 2
      },
      "fqnsFingerprint": "ef6fe19015617304dbc0c3e0d8e46fd478fa4f9a0a0625bbd497c696da5455d4"
    },
    "20bba2df2431e80005224f18421287c6bebdd8c3138f9567d8c92c493a225869": {
      "translations": {
        "python": {
          "source": "class MyNestedStack(cfn.NestedStack):\n    def __init__(self, scope, id, *, parameters=None, timeout=None, notifications=None):\n        super().__init__(scope, id, parameters=parameters, timeout=timeout, notifications=notifications)\n\n        s3.Bucket(self, \"NestedBucket\")\n\nclass MyParentStack(Stack):\n    def __init__(self, scope, id, *, description=None, env=None, stackName=None, tags=None, synthesizer=None, terminationProtection=None, analyticsReporting=None):\n        super().__init__(scope, id, description=description, env=env, stackName=stackName, tags=tags, synthesizer=synthesizer, terminationProtection=terminationProtection, analyticsReporting=analyticsReporting)\n\n        MyNestedStack(self, \"Nested1\")\n        MyNestedStack(self, \"Nested2\")",
          "version": "1"
        },
        "csharp": {
          "source": "class MyNestedStack : NestedStack\n{\n    public MyNestedStack(Construct scope, string id, NestedStackProps? props=null) : base(scope, id, props)\n    {\n\n        new Bucket(this, \"NestedBucket\");\n    }\n}\n\nclass MyParentStack : Stack\n{\n    public MyParentStack(Construct scope, string id, StackProps? props=null) : base(scope, id, props)\n    {\n\n        new MyNestedStack(this, \"Nested1\");\n        new MyNestedStack(this, \"Nested2\");\n    }\n}",
          "version": "1"
        },
        "java": {
          "source": "public class MyNestedStack extends NestedStack {\n    public MyNestedStack(Construct scope, String id) {\n        this(scope, id, null);\n    }\n\n    public MyNestedStack(Construct scope, String id, NestedStackProps props) {\n        super(scope, id, props);\n\n        new Bucket(this, \"NestedBucket\");\n    }\n}\n\npublic class MyParentStack extends Stack {\n    public MyParentStack(Construct scope, String id) {\n        this(scope, id, null);\n    }\n\n    public MyParentStack(Construct scope, String id, StackProps props) {\n        super(scope, id, props);\n\n        new MyNestedStack(this, \"Nested1\");\n        new MyNestedStack(this, \"Nested2\");\n    }\n}",
          "version": "1"
        },
        "$": {
          "source": "class MyNestedStack extends cfn.NestedStack {\n  constructor(scope: Construct, id: string, props?: cfn.NestedStackProps) {\n    super(scope, id, props);\n\n    new s3.Bucket(this, 'NestedBucket');\n  }\n}\n\nclass MyParentStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new MyNestedStack(this, 'Nested1');\n    new MyNestedStack(this, 'Nested2');\n  }\n}",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudformation.NestedStackProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudformation.NestedStack",
        "@aws-cdk/aws-cloudformation.NestedStackProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.Stack",
        "@aws-cdk/core.StackProps"
      ],
      "fullSource": "import * as cfn from '@aws-cdk/aws-cloudformation';\nimport * as customresources from '@aws-cdk/custom-resources';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport {\n  App,\n  Aws,\n  CfnCondition,\n  CfnDynamicReference,\n  CfnDynamicReferenceService,\n  CfnInclude,\n  CfnJson,\n  CfnMapping,\n  CfnOutput,\n  CfnParameter,\n  CfnResource,\n  CfnResourceProps,\n  ConcreteDependable,\n  Construct,\n  CustomResource,\n  CustomResourceProvider,\n  CustomResourceProviderRuntime,\n  DependableTrait,\n  Duration,\n  Fn,\n  IConstruct,\n  RemovalPolicy,\n  SecretValue,\n  Size,\n  SizeRoundingBehavior,\n  Stack,\n  StackProps,\n  Stage,\n  Token,\n} from '@aws-cdk/core';\n\ndeclare const app: App;\ndeclare const arn: 'arn:partition:service:region:account-id:resource-id';\ndeclare const cfnResource: CfnResource;\ndeclare const construct: Construct;\ndeclare const constructA: Construct;\ndeclare const constructB: Construct;\ndeclare const constructC: Construct;\ndeclare const functionProps: lambda.FunctionProps;\ndeclare const isCompleteHandler: lambda.Function;\ndeclare const myBucket: s3.IBucket;\ndeclare const myFunction: lambda.IFunction;\ndeclare const myTopic: sns.ITopic;\ndeclare const onEventHandler: lambda.Function;\ndeclare const resourceProps: CfnResourceProps;\n\ndeclare class MyStack extends Stack {}\ndeclare class YourStack extends Stack {}\n\nclass StackThatProvidesABucket extends Stack {\n  public readonly bucket!: s3.IBucket;\n}\n\ninterface StackThatExpectsABucketProps extends StackProps {\n  readonly bucket: s3.IBucket;\n}\n\nclass StackThatExpectsABucket extends Stack {\n  constructor(scope: Construct, id: string, props: StackThatExpectsABucketProps) {\n    super(scope, id, props);\n  }\n}\n\nclass fixture$construct extends Construct {\n  public constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nclass MyNestedStack extends cfn.NestedStack {\n  constructor(scope: Construct, id: string, props?: cfn.NestedStackProps) {\n    super(scope, id, props);\n\n    new s3.Bucket(this, 'NestedBucket');\n  }\n}\n\nclass MyParentStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new MyNestedStack(this, 'Nested1');\n    new MyNestedStack(this, 'Nested2');\n  }\n}\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "57": 2,
        "75": 26,
        "102": 2,
        "104": 3,
        "143": 2,
        "153": 1,
        "156": 6,
        "162": 2,
        "169": 4,
        "194": 2,
        "196": 2,
        "197": 3,
        "216": 2,
        "223": 2,
        "226": 5,
        "245": 2,
        "279": 2
      },
      "fqnsFingerprint": "ef6fe19015617304dbc0c3e0d8e46fd478fa4f9a0a0625bbd497c696da5455d4"
    }
  }
}
